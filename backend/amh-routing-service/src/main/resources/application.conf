akka {
  actor
    {
      #provider = "akka.cluster.ClusterActorRefProvider"
      provider = "akka.remote.RemoteActorRefProvider"
    }
  //  	remote {
  //	    enabled-transports = ["akka.remote.netty.tcp"]
  //	    netty.tcp {
  //	      hostname = 127.0.0.1
  //	      port = 0
  //	    }
  // 		}
  remote {
    enabled-transports = ["akka.remote.netty.tcp"]
    netty.tcp {
      hostname = "127.0.0.1"
      port = 0
    }
  }
  # LOG4J2
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  #loglevel = DEBUG
  #log-config-on-start = on

  actor {
    debug {
      receive = on
      autoreceive = on
      lifecycle = on
      fsm = on
      event-stream = on
      unhandled = on
      router-misconfiguration = on
    }
  }
  #
  #loggers = ["akka.event.slf4j.Slf4jLogger"]
  #loglevel = "DEBUG"

  // 	cluster {
  //    	seed-nodes = [
  //    		"akka.tcp://groupsuite-routing-cluster@127.0.0.1:2551",
  //    		"akka.tcp://groupsuite-routing-cluster@127.0.0.1:2552"
  //    		]
  //    	auto-down-unreachable-after = 10s
  //  	}

  //  	extensions = ["akka.cluster.client.ClusterClientReceptionist"]

  //	  persistence {
  //	    journal.plugin = "akka.persistence.journal.leveldb-shared"
  //	    journal.leveldb-shared.store {
  //	      # DO NOT USE 'native = off' IN PRODUCTION !!!
  //	      native = off
  //	      dir = "target/shared-journal"
  //	    }
  //	    snapshot-store.plugin = "akka.persistence.snapshot-store.local"
  //	    snapshot-store.local.dir = "target/snapshots"
  //	  }

  host-connection-pool {
    # The maximum number of parallel connections that a connection pool to a
    # single host endpoint is allowed to establish. Must be greater than zero.
    max-connections = 4

    # The maximum number of times failed requests are attempted again,
    # (if the request can be safely retried) before giving up and returning an error.
    # Set to zero to completely disable request retries.
    max-retries = 5

    # The maximum number of open requests accepted into the pool across all
    # materializations of any of its client flows.
    # Protects against (accidentally) overloading a single pool with too many client flow materializations.
    # Note that with N concurrent materializations the max number of open request in the pool
    # will never exceed N * max-connections * pipelining-limit.
    # Must be a power of 2 and > 0!
    max-open-requests = 32

    # The maximum number of requests that are dispatched to the target host in
    # batch-mode across a single connection (HTTP pipelining).
    # A setting of 1 disables HTTP pipelining, since only one request per
    # connection can be "in flight" at any time.
    # Set to higher values to enable HTTP pipelining.
    # This value must be > 0.
    # (Note that, independently of this setting, pipelining will never be done
    # on a connection that still has a non-idempotent request in flight.
    # See http://tools.ietf.org/html/rfc7230#section-6.3.2 for more info.)
    pipelining-limit = 1

    # The time after which an idle connection pool (without pending requests)
    # will automatically terminate itself. Set to `infinite` to completely disable idle timeouts.
    idle-timeout = 30 s

    # Modify to tweak client settings for host connection pools only.
    client = ${akka.http.client}
  }
}
//h2mem1 = {
//  url = "jdbc:h2:mem:test1"
//  driver = org.h2.Driver
//   keepAliveConnection = true
//}
//database = {
//  url 			= "jdbc:postgresql://localhost/akka-http-rest"
//  url 			= ${?SQL_URL}
//  user 			= "GRPDBA"
//  user 			= ${?SQL_USER}
//  password	 	= "GRPDBA"
//  password 		= ${?SQL_PASSWORD}
//}

http {
  port = 8091
  port = ${?HTTP_PORT}
  interface = 127.0.0.1
  interface = ${?HTTP_INTERFACE}
}

elastic {
  url = "127.0.0.1:9300"
  url = ${?ES_URL}
  cluster.name = "groupsuite"
  cluster.name = ${?ES_CLUSTER}
}

amh {
  export.dir = "C:/groupsuite/exported"
  export.dir = ${?AMH_EXP_DIR}
  import.dir = "C:/groupsuite/imported"
  import.dir = ${?AMH_IMP_DIR}
}

audit {
  host = "127.0.0.1"
  host = ${?AUDIT_URL}
  port = 8094
  port = ${?AUDIT_PORT}
}