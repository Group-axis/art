{"version":3,"sources":["webpack:///20.f0fdf85e01cbac5663c9.chunk.js","webpack:///./src/app/common/components/ui/widgets/dynamic-component/component-factory.component.ts?7341********","webpack:///./src/app/common/components/ui/widgets/dynamic-component/index.ts?dfe7********","webpack:///./src/app/common/components/ui/widgets/modal/alert.ts?a1b8********","webpack:///./src/app/common/components/ui/widgets/modal/index.ts?ea19********","webpack:///./src/app/common/components/ui/widgets/modal/modal.ts?f826********","webpack:///./src/app/common/components/ui/widgets/modal/open.component.ts?0ed1********","webpack:///./src/app/saa-routing/saa-export-import/index.ts","webpack:///./src/app/saa-routing/saa-export-import/saa-export-import.component.ts","webpack:///./src/app/saa-routing/saa-export-import/saa-export-import.html"],"names":["webpackJsonp","907","module","exports","__webpack_require__","createComponentFactoryOriginal","resolver","metadata","cmpClass","DynamicComponent","decoratedCmp","core_1","Component","resolveComponent","createComponentFactory","comp","services_1","DynamicHTMLOutlet","vcRef","logger","this","componentCreation","EventEmitter","prototype","ngOnChanges","_this","meta","log","then","factory","injector","ReflectiveInjector","fromResolvedProviders","parentInjector","componentCreated","createComponent","emit","__decorate","Input","__metadata","ComponentMetadata","Type","Output","Directive","selector","ViewContainerRef","ComponentResolver","Logger","908","__export","m","p","hasOwnProperty","909","open_component_1","Alert","dcl","_elementRef","okButton","waitIcon","okButtonText","okButtonResponse","cancelButton","cancelButtonText","cancelButtonResponse","yesButton","yesButtonText","yesButtonResponse","alertMessage","alertFooter","alertHeader","isOpen","alertOutput","open","yes","ok","cancel","template","providers","directives","Open","encapsulation","ViewEncapsulation","None","pipes","DynamicComponentLoader","ElementRef","887","910","dynamic_component_1","Modal","doneSender","modalMessage","modalFooter","modalHeader","modalOutput","saveComponent","component","debug","parameters","get","_hostElement","initialize","subscription","subscribe","msg","submit","close","childComponentListener","createMetadata","parameter","modalChildComponent","data","dispose","undefined","destroy","unsubscribe","873","isExpanded","Object","defineProperty","set","value","toggle","enumerable","configurable","hide","show","display","backDrop","document","getElementsByClassName","length","body","removeChild","createElement","className","appendChild","HostBinding","String","Boolean","1209","1241","common_1","router_1","saa_routing_service_1","modal_1","menu_1","header_secondary_1","directives_1","SAAExportImportComponent","router","saaRoutingService","fileUploadService","fileDownloader","config","routeParams","actionMode","uploadProgress","fileList","Array","params","isImport","menuConfig","MenuConfig","ngOnInit","asyncDataWithWebpack","fileSelection","fileInput","files","target","i","length_1","push","item","exportFileNameChanged","fileName","filePath","alertOpen","alert","alertTitle","message","confirmClose","parent","navigate","closeAlert","disableExpImpButton","exportImport","send","uploadHandler","error","export","download","response","err","status","url","getObserver","progress","upload","write","ViewChild","styles","CORE_DIRECTIVES","FORM_DIRECTIVES","NgClass","HeaderSecondary","Permissions","NotPermissions","FORM_PROVIDERS","SAARoutingService","FileUploadService","FileDownloader","Router","Config","RouteParams","1273"],"mappings":"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","file":"20.f0fdf85e01cbac5663c9.chunk.js","sourcesContent":["webpackJsonp([20],{\n\n/***/ 907:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar core_1 = __webpack_require__(30);\r\n\tvar services_1 = __webpack_require__(38);\r\n\tfunction createComponentFactoryOriginal(resolver, metadata) {\r\n\t    var cmpClass = (function () {\r\n\t        function DynamicComponent() {\r\n\t        }\r\n\t        return DynamicComponent;\r\n\t    }());\r\n\t    var decoratedCmp = core_1.Component(metadata)(cmpClass);\r\n\t    return resolver.resolveComponent(decoratedCmp);\r\n\t}\r\n\texports.createComponentFactoryOriginal = createComponentFactoryOriginal;\r\n\tfunction createComponentFactory(comp, resolver, metadata) {\r\n\t    var decoratedCmp = core_1.Component(metadata)(comp);\r\n\t    return resolver.resolveComponent(decoratedCmp);\r\n\t}\r\n\texports.createComponentFactory = createComponentFactory;\r\n\tvar DynamicHTMLOutlet = (function () {\r\n\t    function DynamicHTMLOutlet(vcRef, resolver, logger) {\r\n\t        this.vcRef = vcRef;\r\n\t        this.resolver = resolver;\r\n\t        this.logger = logger;\r\n\t        this.componentCreation = new core_1.EventEmitter();\r\n\t    }\r\n\t    DynamicHTMLOutlet.prototype.ngOnChanges = function () {\r\n\t        var _this = this;\r\n\t        if (!this.comp || !this.meta)\r\n\t            return;\r\n\t        //+JSON.stringify(this.comp)+\" meta - \" +JSON.stringify(this.meta)\r\n\t        this.logger.log(\"passing to createComponent \");\r\n\t        createComponentFactory(this.comp, this.resolver, this.meta)\r\n\t            .then(function (factory) {\r\n\t            var injector = core_1.ReflectiveInjector.fromResolvedProviders([], _this.vcRef.parentInjector);\r\n\t            var componentCreated = _this.vcRef.createComponent(factory, 0, injector, []);\r\n\t            _this.componentCreation.emit(componentCreated);\r\n\t        });\r\n\t    };\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', core_1.ComponentMetadata)\r\n\t    ], DynamicHTMLOutlet.prototype, \"meta\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input('childComponent'), \r\n\t        __metadata('design:type', core_1.Type)\r\n\t    ], DynamicHTMLOutlet.prototype, \"comp\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Output(), \r\n\t        __metadata('design:type', core_1.EventEmitter)\r\n\t    ], DynamicHTMLOutlet.prototype, \"componentCreation\", void 0);\r\n\t    DynamicHTMLOutlet = __decorate([\r\n\t        core_1.Directive({\r\n\t            selector: 'dynamic-html-outlet'\r\n\t        }), \r\n\t        __metadata('design:paramtypes', [core_1.ViewContainerRef, core_1.ComponentResolver, services_1.Logger])\r\n\t    ], DynamicHTMLOutlet);\r\n\t    return DynamicHTMLOutlet;\r\n\t}());\r\n\texports.DynamicHTMLOutlet = DynamicHTMLOutlet;\r\n\n\n/***/ },\n\n/***/ 908:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tfunction __export(m) {\r\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n\t}\r\n\t__export(__webpack_require__(907));\r\n\n\n/***/ },\n\n/***/ 909:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar core_1 = __webpack_require__(30);\r\n\tvar open_component_1 = __webpack_require__(873);\r\n\tvar services_1 = __webpack_require__(38);\r\n\tvar Alert = (function () {\r\n\t    function Alert(dcl, _elementRef, logger) {\r\n\t        this.dcl = dcl;\r\n\t        this._elementRef = _elementRef;\r\n\t        this.logger = logger;\r\n\t        /**\r\n\t           * Describes if the alert contains Ok Button.\r\n\t           * The default Ok button will close the alert and emit the callback.\r\n\t           * Defaults to true.\r\n\t           */\r\n\t        this.okButton = true;\r\n\t        /**\r\n\t           * Describes if the alert contains a waiting Icon.\r\n\t           * Defaults to true.\r\n\t           */\r\n\t        this.waitIcon = true;\r\n\t        /**\r\n\t           * Caption for the OK button.\r\n\t           * Default: Ok\r\n\t           */\r\n\t        this.okButtonText = 'Ok';\r\n\t        this.okButtonResponse = 2;\r\n\t        /**\r\n\t           * Describes if the alert contains cancel Button.\r\n\t           * The default Cancelbutton will close the alert.\r\n\t           * Defaults to true.\r\n\t           */\r\n\t        this.cancelButton = true;\r\n\t        /**\r\n\t           * Caption for the Cancel button.\r\n\t           * Default: Cancel\r\n\t           */\r\n\t        this.cancelButtonText = 'Cancel';\r\n\t        this.cancelButtonResponse = 0;\r\n\t        /**\r\n\t           * Describes if the alert contains yes Button.\r\n\t           * The default Yesbutton will close the alert.\r\n\t           * Defaults to false.\r\n\t           */\r\n\t        this.yesButton = false;\r\n\t        /**\r\n\t           * Caption for the Cancel button.\r\n\t           * Default: Cancel\r\n\t           */\r\n\t        this.yesButtonText = 'Yes';\r\n\t        this.yesButtonResponse = 1;\r\n\t        /**\r\n\t           * if the alertMessage is true it will show the contentString inside alert body.\r\n\t           */\r\n\t        this.alertMessage = true;\r\n\t        /**\r\n\t          * if the value is true alert footer will be visible or else it will be hidden.\r\n\t          */\r\n\t        this.alertFooter = true;\r\n\t        /**\r\n\t          * shows alert header if the value is true.\r\n\t          */\r\n\t        this.alertHeader = true;\r\n\t        /**\r\n\t          * if the value is true alert will be visible or else it will be hidden.\r\n\t          */\r\n\t        this.isOpen = false;\r\n\t        /**\r\n\t          * Emitted when a ok button was clicked\r\n\t          * or when Ok method is called.\r\n\t          */\r\n\t        this.alertOutput = new core_1.EventEmitter();\r\n\t    }\r\n\t    /**\r\n\t         * Opens a alert window creating backdrop.\r\n\t         */\r\n\t    Alert.prototype.open = function () {\r\n\t        this.isOpen = true;\r\n\t    };\r\n\t    Alert.prototype.yes = function () {\r\n\t        this.isOpen = false;\r\n\t        this.alertOutput.emit(this.yesButtonResponse);\r\n\t    };\r\n\t    /**\r\n\t       *  ok method closes the modal and emits modalOutput.\r\n\t       */\r\n\t    Alert.prototype.ok = function () {\r\n\t        this.isOpen = false;\r\n\t        this.alertOutput.emit(this.okButtonResponse);\r\n\t    };\r\n\t    /**\r\n\t       *  cancel method closes the moda.\r\n\t       */\r\n\t    Alert.prototype.cancel = function () {\r\n\t        this.isOpen = false;\r\n\t        this.alertOutput.emit(this.cancelButtonResponse);\r\n\t    };\r\n\t    __decorate([\r\n\t        core_1.Output(), \r\n\t        __metadata('design:type', core_1.EventEmitter)\r\n\t    ], Alert.prototype, \"alertOutput\", void 0);\r\n\t    Alert = __decorate([\r\n\t        core_1.Component({\r\n\t            selector: 'alert',\r\n\t            template: \"\\n  <div class=\\\"modal fade\\\" [open]=\\\"!isOpen\\\" id=\\\"myModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\">\\n    <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n      <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-header\\\" [hidden]=!alertHeader>\\n          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" (click)='cancel()' aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">&times;</span></button>\\n          <h4 class=\\\"modal-title text-center\\\" id=\\\"myModalLabel\\\">{{alertTitle}}</h4>\\n        </div>\\n        <div class=\\\"modal-body\\\">\\n          <div [hidden]=!alertMessage>\\n            <i *ngIf=\\\"waitIcon\\\" class=\\\"fa fa-spinner\\\" aria-hidden=\\\"true\\\" style=\\\"font-size:2.1em;\\\"></i>\\n            &nbsp;&nbsp;{{message}}\\n          </div>\\n        </div>\\n        <div class=\\\"modal-footer\\\" [hidden]=!alertFooter>\\n          <span [hidden]=!yesButton >\\n            <button class=\\\"btn btn-primary\\\" (click)=\\\"yes()\\\">{{yesButtonText}}</button>\\n          </span>\\n          <span [hidden]=!okButton >\\n            <button class=\\\"btn btn-primary\\\" (click)=\\\"ok()\\\">{{okButtonText}}</button>\\n          </span>\\n          <span [hidden]=!cancelButton>\\n            <button class=\\\"btn btn-primary\\\" (click)=\\\"cancel()\\\">{{cancelButtonText}}</button>\\n          </span>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  \",\r\n\t            providers: [],\r\n\t            directives: [open_component_1.Open],\r\n\t            encapsulation: core_1.ViewEncapsulation.None,\r\n\t            pipes: []\r\n\t        }), \r\n\t        __metadata('design:paramtypes', [core_1.DynamicComponentLoader, core_1.ElementRef, services_1.Logger])\r\n\t    ], Alert);\r\n\t    return Alert;\r\n\t}());\r\n\texports.Alert = Alert;\r\n\n\n/***/ },\n\n/***/ 887:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tfunction __export(m) {\r\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n\t}\r\n\t__export(__webpack_require__(909));\r\n\t__export(__webpack_require__(910));\r\n\t__export(__webpack_require__(873));\r\n\n\n/***/ },\n\n/***/ 910:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar core_1 = __webpack_require__(30);\r\n\tvar open_component_1 = __webpack_require__(873);\r\n\tvar dynamic_component_1 = __webpack_require__(908);\r\n\tvar services_1 = __webpack_require__(38);\r\n\tvar Modal = (function () {\r\n\t    function Modal(dcl, _elementRef, logger) {\r\n\t        this.dcl = dcl;\r\n\t        this._elementRef = _elementRef;\r\n\t        this.logger = logger;\r\n\t        this.doneSender = new core_1.EventEmitter();\r\n\t        /**\r\n\t           * Describes if the modal contains Ok Button.\r\n\t           * The default Ok button will close the modal and emit the callback.\r\n\t           * Defaults to true.\r\n\t           */\r\n\t        this.okButton = true;\r\n\t        /**\r\n\t           * Caption for the OK button.\r\n\t           * Default: Ok\r\n\t           */\r\n\t        this.okButtonText = 'Ok';\r\n\t        /**\r\n\t           * Describes if the modal contains cancel Button.\r\n\t           * The default Cancelbutton will close the modal.\r\n\t           * Defaults to true.\r\n\t           */\r\n\t        this.cancelButton = true;\r\n\t        /**\r\n\t           * Caption for the Cancel button.\r\n\t           * Default: Cancel\r\n\t           */\r\n\t        this.cancelButtonText = 'Cancel';\r\n\t        /**\r\n\t           * if the modalMessage is true it will show the message inside modal body.\r\n\t           */\r\n\t        this.modalMessage = true;\r\n\t        /**\r\n\t          * if the value is true modal footer will be visible or else it will be hidden.\r\n\t          */\r\n\t        this.modalFooter = true;\r\n\t        /**\r\n\t          * shows modal header if the value is true.\r\n\t          */\r\n\t        this.modalHeader = true;\r\n\t        /**\r\n\t          * if the value is true modal will be visible or else it will be hidden.\r\n\t          */\r\n\t        this.isOpen = false;\r\n\t        /**\r\n\t          * Emitted when a ok button was clicked\r\n\t          * or when close method is called.\r\n\t          */\r\n\t        this.modalOutput = new core_1.EventEmitter();\r\n\t    }\r\n\t    Modal.prototype.saveComponent = function (component) {\r\n\t        var _this = this;\r\n\t        this.logger.debug(\"component recevied in Modal \" + component);\r\n\t        this.logger.debug(\" parameters => \" + this.parameters.get(\"messageId\"));\r\n\t        this.componentCreated = component;\r\n\t        this.componentCreated._hostElement.component.doneSender = this.doneSender;\r\n\t        this.componentCreated._hostElement.component.initialize(this.parameters);\r\n\t        this.subscription = this.doneSender.subscribe(function (msg) {\r\n\t            if (msg == 'done') {\r\n\t                _this.submit();\r\n\t            }\r\n\t            else {\r\n\t                _this.close();\r\n\t            }\r\n\t        });\r\n\t    };\r\n\t    Modal.prototype.childComponentListener = function (msg) {\r\n\t        if (msg == 'done')\r\n\t            this.submit();\r\n\t        else\r\n\t            this.close();\r\n\t    };\r\n\t    Modal.prototype.createMetadata = function (parameter) {\r\n\t        this.meta = new core_1.ComponentMetadata(parameter);\r\n\t    };\r\n\t    //@ViewChild('target', {read: ViewContainerRef}) target;\r\n\t    /**\r\n\t         * Opens a modal window creating backdrop.\r\n\t         * @param component The angular Component that is to be loaded dynamically(optional).\r\n\t         */\r\n\t    Modal.prototype.open = function (component) {\r\n\t        this.isOpen = true;\r\n\t        this.modalChildComponent = component;\r\n\t        //IIRH\r\n\t        // if(component){\r\n\t        // this.component = this.dcl.loadIntoLocation(component, this._elementRef, \"child\");\r\n\t        // }\r\n\t    };\r\n\t    /**\r\n\t       *  close method dispose the component, closes the modal and optionally emits modalOutput value.\r\n\t       */\r\n\t    Modal.prototype.close = function (data) {\r\n\t        this.dispose();\r\n\t        if (data) {\r\n\t            this.modalOutput.emit(data);\r\n\t        }\r\n\t    };\r\n\t    /**\r\n\t       *  ok method dispose the component, closes the modal and emits true.\r\n\t       */\r\n\t    Modal.prototype.submit = function () {\r\n\t        this.modalOutput.emit(this.componentCreated._hostElement.component);\r\n\t        this.dispose();\r\n\t    };\r\n\t    /**\r\n\t       *  dispose method dispose the loaded component.\r\n\t       */\r\n\t    Modal.prototype.dispose = function () {\r\n\t        this.isOpen = false;\r\n\t        if (this.componentCreated != undefined) {\r\n\t            this.logger.debug(\"...from modal : destroying child component\");\r\n\t            this.componentCreated.destroy();\r\n\t            this.logger.debug(\"...from modal : unsubscribing child component\");\r\n\t            this.subscription.unsubscribe();\r\n\t        }\r\n\t    };\r\n\t    __decorate([\r\n\t        core_1.Output(), \r\n\t        __metadata('design:type', core_1.EventEmitter)\r\n\t    ], Modal.prototype, \"modalOutput\", void 0);\r\n\t    Modal = __decorate([\r\n\t        core_1.Component({\r\n\t            selector: 'modal',\r\n\t            template: \"\\n  <div class=\\\"modal fade\\\" [open]=\\\"!isOpen\\\" id=\\\"myModal\\\" [attr.data-keyboard]=\\\"true\\\" [attr.data-backdrop]=\\\"false\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\">\\n    <div class=\\\"modal-dialog\\\" role=\\\"document\\\" style=\\\"width:80%;\\\">\\n      <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-header\\\" [hidden]=!modalHeader>\\n          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" (click)='close()' aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">&times;</span></button>\\n          <h4 class=\\\"modal-title text-center\\\" id=\\\"myModalLabel\\\">{{modalTitle}}</h4>\\n        </div>\\n        <dynamic-html-outlet (componentCreation)=\\\"saveComponent($event)\\\" [meta]=\\\"meta\\\" [childComponent]=\\\"modalChildComponent\\\"></dynamic-html-outlet>\\n      </div>\\n    </div>\\n  </div>\\n\",\r\n\t            //\r\n\t            providers: [],\r\n\t            directives: [open_component_1.Open, dynamic_component_1.DynamicHTMLOutlet],\r\n\t            encapsulation: core_1.ViewEncapsulation.None,\r\n\t            pipes: []\r\n\t        }), \r\n\t        __metadata('design:paramtypes', [core_1.DynamicComponentLoader, core_1.ElementRef, services_1.Logger])\r\n\t    ], Modal);\r\n\t    return Modal;\r\n\t}());\r\n\texports.Modal = Modal;\r\n\n\n/***/ },\n\n/***/ 873:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar core_1 = __webpack_require__(30);\r\n\tvar services_1 = __webpack_require__(38);\r\n\t// todo: add animate\r\n\t// todo: add init and on change\r\n\tvar Open = (function () {\r\n\t    function Open(logger) {\r\n\t        this.logger = logger;\r\n\t        this.isExpanded = true;\r\n\t    }\r\n\t    Object.defineProperty(Open.prototype, \"open\", {\r\n\t        get: function () {\r\n\t            return this.isExpanded;\r\n\t        },\r\n\t        set: function (value) {\r\n\t            this.isExpanded = value;\r\n\t            this.toggle();\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    Open.prototype.toggle = function () {\r\n\t        if (this.isExpanded) {\r\n\t            this.hide();\r\n\t        }\r\n\t        else {\r\n\t            this.show();\r\n\t        }\r\n\t    };\r\n\t    Open.prototype.hide = function () {\r\n\t        this.isExpanded = false;\r\n\t        this.display = 'none';\r\n\t        var backDrop = document.getElementsByClassName(\"modal-backdrop\");\r\n\t        if (backDrop.length > 0) {\r\n\t            document.body.removeChild(backDrop[0]);\r\n\t        }\r\n\t    };\r\n\t    Open.prototype.show = function () {\r\n\t        var backDrop = document.createElement('div');\r\n\t        backDrop.className = \"modal-backdrop fade in\";\r\n\t        document.body.appendChild(backDrop);\r\n\t        this.isExpanded = true;\r\n\t        this.display = 'block';\r\n\t    };\r\n\t    __decorate([\r\n\t        core_1.HostBinding('style.display'), \r\n\t        __metadata('design:type', String)\r\n\t    ], Open.prototype, \"display\", void 0);\r\n\t    __decorate([\r\n\t        core_1.HostBinding('class.in'),\r\n\t        core_1.HostBinding('attr.aria-expanded'), \r\n\t        __metadata('design:type', Boolean)\r\n\t    ], Open.prototype, \"isExpanded\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Boolean), \r\n\t        __metadata('design:paramtypes', [Boolean])\r\n\t    ], Open.prototype, \"open\", null);\r\n\t    Open = __decorate([\r\n\t        core_1.Directive({ selector: '[open]' }), \r\n\t        __metadata('design:paramtypes', [services_1.Logger])\r\n\t    ], Open);\r\n\t    return Open;\r\n\t}());\r\n\texports.Open = Open;\r\n\n\n/***/ },\n\n/***/ 1209:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tfunction __export(m) {\r\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n\t}\r\n\t__export(__webpack_require__(1241));\r\n\n\n/***/ },\n\n/***/ 1241:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar core_1 = __webpack_require__(30);\r\n\tvar common_1 = __webpack_require__(8);\r\n\t// import { ACCORDION_DIRECTIVES, BUTTON_DIRECTIVES } from 'ng2-bootstrap';\r\n\tvar router_1 = __webpack_require__(58);\r\n\tvar saa_routing_service_1 = __webpack_require__(1187);\r\n\t//import {FormFieldComponentExample, BootstrapFormDirective, BootstrapInputDirective, LabelsComponent, LabelsValueAccessor, notEmpty} from '../../common/components/ui/controls';\r\n\tvar modal_1 = __webpack_require__(887);\r\n\tvar menu_1 = __webpack_require__(531);\r\n\tvar header_secondary_1 = __webpack_require__(530);\r\n\tvar services_1 = __webpack_require__(38);\r\n\tvar directives_1 = __webpack_require__(258);\r\n\t// console.log('`SAAExportImport` component loaded asynchronously');\r\n\tvar SAAExportImportComponent = (function () {\r\n\t    function SAAExportImportComponent(router, saaRoutingService, fileUploadService, fileDownloader, config, routeParams, logger) {\r\n\t        this.router = router;\r\n\t        this.saaRoutingService = saaRoutingService;\r\n\t        this.fileUploadService = fileUploadService;\r\n\t        this.fileDownloader = fileDownloader;\r\n\t        this.config = config;\r\n\t        this.logger = logger;\r\n\t        this.parameters = {};\r\n\t        this.actionMode = \"Import\";\r\n\t        this.uploadProgress = 0;\r\n\t        this.fileList = new Array();\r\n\t        this.actionMode = routeParams.params['action'] || 'Import';\r\n\t        this.isImport = this.actionMode == 'Import';\r\n\t        this.menuConfig = [\r\n\t            new menu_1.MenuConfig(\"fa fa-home\", \"/home\", \"Home\"),\r\n\t            new menu_1.MenuConfig(\"fa fa-sitemap\", \"/saa-routing\", \"SAA Routing\"),\r\n\t            new menu_1.MenuConfig(\"fa fa-cloud-upload\", \"\", this.actionMode)];\r\n\t    }\r\n\t    SAAExportImportComponent.prototype.ngOnInit = function () {\r\n\t        this.logger.log('hello `SAA Export Import` component');\r\n\t        // Get the data from the server\r\n\t    };\r\n\t    SAAExportImportComponent.prototype.asyncDataWithWebpack = function () {\r\n\t    };\r\n\t    SAAExportImportComponent.prototype.fileSelection = function (fileInput) {\r\n\t        var files = fileInput.target.files;\r\n\t        for (var i = 0, length_1 = files.length; i < length_1; i++) {\r\n\t            this.fileList.push(files.item(i));\r\n\t        }\r\n\t        //  this.fileList = fileInput.target.files.forEach( f => this.fileList.push(f));\r\n\t        this.logger.log(\"file selected \" + this.fileList);\r\n\t    };\r\n\t    SAAExportImportComponent.prototype.exportFileNameChanged = function (fileName) {\r\n\t        this.filePath = fileName;\r\n\t    };\r\n\t    SAAExportImportComponent.prototype.alertOpen = function () {\r\n\t        this.alert.alertFooter = false;\r\n\t        this.alert.cancelButton = false;\r\n\t        this.alert.okButton = false;\r\n\t        this.alert.alertHeader = true;\r\n\t        this.alert.alertTitle = this.actionMode + \" in progress \";\r\n\t        this.alert.message = \"You will be notified when the \" + this.actionMode + \" finish.\";\r\n\t        this.alert.cancelButtonText = \"Ok\";\r\n\t        this.alert.open();\r\n\t    };\r\n\t    SAAExportImportComponent.prototype.confirmClose = function (data) {\r\n\t        this.logger.log(\"confirming ------------  \" + data);\r\n\t        if (data == 0) {\r\n\t            this.router.parent.navigate([\"SAARoutingHome\"]);\r\n\t        }\r\n\t    };\r\n\t    SAAExportImportComponent.prototype.closeAlert = function () {\r\n\t        //setTimeout(() => this.alert.cancel(), 1000);\r\n\t        //setTimeout(() => this.router.parent.navigate([\"SAARoutingHome\"]), 1200);\r\n\t    };\r\n\t    SAAExportImportComponent.prototype.disableExpImpButton = function () {\r\n\t        if (this.isImport) {\r\n\t            return this.fileList.length == 0;\r\n\t        }\r\n\t        else {\r\n\t            return !this.filePath || this.filePath.length == 0;\r\n\t        }\r\n\t    };\r\n\t    SAAExportImportComponent.prototype.exportImport = function () {\r\n\t        var _this = this;\r\n\t        this.alertOpen();\r\n\t        this.logger.log(\"export import ...\" + \" isImport \" + this.isImport + \" selected file \" + this.filePath);\r\n\t        var send;\r\n\t        if (this.isImport) {\r\n\t            this.uploadHandler().then(function (data) {\r\n\t                _this.alert.message = _this.actionMode + \" Done.\";\r\n\t                _this.closeAlert();\r\n\t            }, function (error) {\r\n\t                _this.logger.log(\" ERROR while importing \" + error);\r\n\t                _this.alert.message = \" An error has occurred while processing the \" + _this.actionMode + \".\";\r\n\t                _this.closeAlert();\r\n\t            });\r\n\t        }\r\n\t        else {\r\n\t            this.logger.log(\"[EXPORT] just before calling export post on server\");\r\n\t            send = this.saaRoutingService.export(\"UNKNOWN\", \"DEFAULT\", this.filePath);\r\n\t            send.subscribe(function (data) {\r\n\t                _this.logger.log(\"[\" + _this.actionMode + \"] %s\", data);\r\n\t                _this.fileDownloader.download(_this.config.get(\"saaBackUrl\") + \"/routing/export/\" + data.response, data.response);\r\n\t            }, function (err) {\r\n\t                _this.logger.log(\"[\" + _this.actionMode + \"] Can't be done. Error code: %s, URL: %s \", err.status, err.url),\r\n\t                    _this.alert.message = \" An error has occurred while processing the \" + _this.actionMode;\r\n\t                _this.closeAlert();\r\n\t            }, function () {\r\n\t                _this.logger.log(\"[\" + _this.actionMode + \"]  from backend done\");\r\n\t                _this.alert.message = _this.actionMode + \" Done.\";\r\n\t                _this.closeAlert();\r\n\t            });\r\n\t        }\r\n\t    };\r\n\t    SAAExportImportComponent.prototype.uploadHandler = function () {\r\n\t        var _this = this;\r\n\t        var result;\r\n\t        this.fileUploadService.getObserver()\r\n\t            .subscribe(function (progress) {\r\n\t            _this.uploadProgress = progress;\r\n\t        });\r\n\t        try {\r\n\t            return this.fileUploadService.upload(this.config.get(\"saaBackUrl\") + \"/routing/import\", this.fileList);\r\n\t        }\r\n\t        catch (error) {\r\n\t            this.logger.error(\"An error has occurred while importing: \" + error);\r\n\t            document.write(error);\r\n\t        }\r\n\t    };\r\n\t    SAAExportImportComponent.prototype.cancel = function () {\r\n\t        this.router.parent.navigate([\"SAARoutingHome\"]);\r\n\t    };\r\n\t    __decorate([\r\n\t        core_1.ViewChild(modal_1.Alert), \r\n\t        __metadata('design:type', Object)\r\n\t    ], SAAExportImportComponent.prototype, \"alert\", void 0);\r\n\t    SAAExportImportComponent = __decorate([\r\n\t        core_1.Component({\r\n\t            selector: 'saa-export-import',\r\n\t            styles: [\"\\n    h1 {\\n      font-family: Arial, Helvetica, sans-serif\\n    }\\n  \"],\r\n\t            template: __webpack_require__(1273),\r\n\t            //ACCORDION_DIRECTIVES, BUTTON_DIRECTIVES, FormFieldComponent, FormLabelComponent,\r\n\t            //FormFieldComponentExample, BootstrapFormDirective, BootstrapInputDirective, LabelsComponent, LabelsValueAccessor,  \r\n\t            directives: [common_1.CORE_DIRECTIVES, common_1.FORM_DIRECTIVES, common_1.NgClass, modal_1.Alert, header_secondary_1.HeaderSecondary, directives_1.Permissions, directives_1.NotPermissions],\r\n\t            providers: [common_1.FORM_PROVIDERS, saa_routing_service_1.SAARoutingService, services_1.FileUploadService, services_1.FileDownloader]\r\n\t        }), \r\n\t        __metadata('design:paramtypes', [router_1.Router, saa_routing_service_1.SAARoutingService, services_1.FileUploadService, services_1.FileDownloader, services_1.Config, router_1.RouteParams, services_1.Logger])\r\n\t    ], SAAExportImportComponent);\r\n\t    return SAAExportImportComponent;\r\n\t}());\r\n\texports.SAAExportImportComponent = SAAExportImportComponent;\r\n\n\n/***/ },\n\n/***/ 1273:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<!--main content start-->\\r\\n<section id=\\\"main-content\\\">\\r\\n    <section class=\\\"wrapper\\\">\\r\\n        <menu-header [header-menu]=\\\"menuConfig\\\"></menu-header>\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-12 col-md-12 col-lg-12\\\">\\r\\n                <div class=\\\"panel panel-default\\\">\\r\\n                    <div class=\\\"panel-heading\\\">\\r\\n                        <h3 class=\\\"panel-title\\\">{{actionMode}} </h3>\\r\\n                    </div>\\r\\n                    <div class=\\\"panel-body\\\">\\r\\n                        <form>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-sm-2 col-md-2 col-lg-2\\\"></div>\\r\\n                                <div class=\\\"col-sm-6 col-md-6 col-lg-6 form-group form-group-sm\\\" *ngIf=\\\"isImport\\\">\\r\\n                                    <input  type=\\\"file\\\" directory (change)=\\\"fileSelection($event)\\\" />\\r\\n                                </div>\\r\\n                                <label *ngIf=\\\"!isImport\\\" class=\\\"col-sm-1 col-md-1 col-lg-1 control-label\\\">File Name</label>\\r\\n                                <div class=\\\"col-sm-4 col-md-4 col-lg-4 form-group form-group-sm\\\" *ngIf=\\\"!isImport\\\">\\r\\n                                    <input  type=\\\"text\\\"  (change)=\\\"exportFileNameChanged($event.target.value)\\\" />\\r\\n                                </div>\\r\\n                                <label *ngIf=\\\"!isImport\\\" class=\\\"col-sm-1 col-md-1 col-lg-1\\\">.xml</label>\\r\\n                                <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\"></div>\\r\\n                            </div>\\r\\n                        </form>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </section>\\r\\n</section>\\r\\n<alert (alertOutput)=\\\"confirmClose($event)\\\"></alert>\\r\\n<!--main content end-->\\r\\n<footer class=\\\"footer dark-bg\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-12 col-md-12 col-lg-12\\\">\\r\\n            <div class=\\\"top-nav notification-row pull-right\\\">\\r\\n                <button *gpIf=\\\"['saa.import', 'saa.export']\\\" [disabled]=\\\"disableExpImpButton()\\\" class=\\\"btn btn-primary\\\" (click)=\\\"exportImport()\\\" > {{actionMode}} </button>\\r\\n                <button *gpNotIf=\\\"['saa.import', 'saa.export']\\\" disabled=\\\"true\\\" class=\\\"btn btn-primary\\\" > {{actionMode}} </button>\\r\\n                <button class=\\\"btn btn-default\\\" (click)=\\\"cancel()\\\"> Cancel</button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</footer>\"\n\n/***/ }\n\n});\n\n\n// WEBPACK FOOTER //\n// 20.f0fdf85e01cbac5663c9.chunk.js","import {Directive, ReflectiveInjector, ViewContainerRef, ComponentResolver, ComponentMetadata, Type, ComponentFactory, Component, ViewEncapsulation, ComponentRef, DynamicComponentLoader,ElementRef, Input, EventEmitter, Output} from 'angular2/core';\r\nimport {Logger} from \"../../../services\";\r\n\r\nexport function createComponentFactoryOriginal(resolver: ComponentResolver, metadata: ComponentMetadata): Promise<ComponentFactory<any>> {\r\n    const cmpClass = class DynamicComponent {};\r\n    const decoratedCmp = Component(metadata)(cmpClass);\r\n    return resolver.resolveComponent(decoratedCmp);\r\n}\r\n\r\nexport function createComponentFactory(comp : Type, resolver: ComponentResolver, metadata: ComponentMetadata): Promise<ComponentFactory<any>> {\r\n    const decoratedCmp = Component(metadata)(comp);\r\n    return resolver.resolveComponent(decoratedCmp);\r\n}\r\n\r\n@Directive({\r\n    selector: 'dynamic-html-outlet'\r\n})\r\nexport class DynamicHTMLOutlet {\r\n  @Input() meta: ComponentMetadata;\r\n  @Input('childComponent') comp: Type;\r\n  @Output() componentCreation : EventEmitter<any> = new EventEmitter<any>();\r\n  \r\n  constructor(private vcRef: ViewContainerRef, private resolver: ComponentResolver, private logger : Logger) {\r\n  }\r\n  \r\n  ngOnChanges() {\r\n\r\n    if (!this.comp || !this.meta) return;\r\n    //+JSON.stringify(this.comp)+\" meta - \" +JSON.stringify(this.meta)\r\n    this.logger.log(\"passing to createComponent \");\r\n    \r\n    createComponentFactory(this.comp, this.resolver, this.meta)\r\n      .then(factory => {\r\n        const injector = ReflectiveInjector.fromResolvedProviders([], this.vcRef.parentInjector);\r\n        let componentCreated = this.vcRef.createComponent(factory, 0, injector, []);\r\n        this.componentCreation.emit(componentCreated);\r\n      });\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/common/components/ui/widgets/dynamic-component/component-factory.component.ts","export * from './component-factory.component';\n\n\n// WEBPACK FOOTER //\n// ./src/app/common/components/ui/widgets/dynamic-component/index.ts","import {Component, ViewEncapsulation, ComponentRef, DynamicComponentLoader,ElementRef, Input, EventEmitter, Output} from 'angular2/core';\r\nimport {NgIf} from '@angular/common';\r\nimport {Open} from './open.component';\r\nimport {Logger} from \"../../../services\";\r\n\r\n@Component({\r\n  selector: 'alert',\r\n  template: `\r\n  <div class=\"modal fade\" [open]=\"!isOpen\" id=\"myModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\" [hidden]=!alertHeader>\r\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" (click)='cancel()' aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>\r\n          <h4 class=\"modal-title text-center\" id=\"myModalLabel\">{{alertTitle}}</h4>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n          <div [hidden]=!alertMessage>\r\n            <i *ngIf=\"waitIcon\" class=\"fa fa-spinner\" aria-hidden=\"true\" style=\"font-size:2.1em;\"></i>\r\n            &nbsp;&nbsp;{{message}}\r\n          </div>\r\n        </div>\r\n        <div class=\"modal-footer\" [hidden]=!alertFooter>\r\n          <span [hidden]=!yesButton >\r\n            <button class=\"btn btn-primary\" (click)=\"yes()\">{{yesButtonText}}</button>\r\n          </span>\r\n          <span [hidden]=!okButton >\r\n            <button class=\"btn btn-primary\" (click)=\"ok()\">{{okButtonText}}</button>\r\n          </span>\r\n          <span [hidden]=!cancelButton>\r\n            <button class=\"btn btn-primary\" (click)=\"cancel()\">{{cancelButtonText}}</button>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  `,\r\n  providers: [],\r\n  directives: [Open],\r\n  encapsulation: ViewEncapsulation.None,\r\n  pipes: []\r\n})\r\n/**\r\n  * API to an open alert window.\r\n  */\r\nexport class Alert{\r\n  /**\r\n     * Caption for the title.\r\n     */\r\n  public alertTitle:string;\r\n  /**\r\n     * Describes if the alert contains Ok Button.\r\n     * The default Ok button will close the alert and emit the callback.\r\n     * Defaults to true.\r\n     */\r\n  public okButton:boolean = true;\r\n  /**\r\n     * Describes if the alert contains a waiting Icon.\r\n     * Defaults to true.\r\n     */\r\n  public waitIcon:boolean = true;\r\n  /**\r\n     * Caption for the OK button.\r\n     * Default: Ok\r\n     */\r\n  public okButtonText:string= 'Ok';\r\n\r\n  public okButtonResponse:number = 2;\r\n  /**\r\n     * Describes if the alert contains cancel Button.\r\n     * The default Cancelbutton will close the alert.\r\n     * Defaults to true.\r\n     */\r\n  public cancelButton:boolean = true;\r\n  /**\r\n     * Caption for the Cancel button.\r\n     * Default: Cancel\r\n     */\r\n  public cancelButtonText:string = 'Cancel';\r\n  public cancelButtonResponse:number = 0;\r\n  /**\r\n     * Describes if the alert contains yes Button.\r\n     * The default Yesbutton will close the alert.\r\n     * Defaults to false.\r\n     */\r\n  public yesButton:boolean = false;\r\n  /**\r\n     * Caption for the Cancel button.\r\n     * Default: Cancel\r\n     */\r\n  public yesButtonText:string = 'Yes';\r\n  public yesButtonResponse:number = 1;\r\n  /**\r\n     * if the alertMessage is true it will show the contentString inside alert body.\r\n     */\r\n  public alertMessage:boolean = true;\r\n  /**\r\n     * Some message/content can be set in message which will be shown in alert body.\r\n     */\r\n  public message:string;\r\n  /**\r\n    * if the value is true alert footer will be visible or else it will be hidden.\r\n    */\r\n  public alertFooter:boolean= true;\r\n  /**\r\n    * shows alert header if the value is true.\r\n    */\r\n  public alertHeader:boolean = true;\r\n  /**\r\n    * if the value is true alert will be visible or else it will be hidden.\r\n    */\r\n  public isOpen:boolean=false;\r\n  /**\r\n    * Emitted when a ok button was clicked\r\n    * or when Ok method is called.\r\n    */\r\n  @Output() public alertOutput:EventEmitter<any> = new EventEmitter();\r\n\r\n  constructor(public dcl:DynamicComponentLoader, public _elementRef: ElementRef, private logger : Logger){}\r\n  /**\r\n       * Opens a alert window creating backdrop.\r\n       */\r\n  open(){\r\n    this.isOpen= true;\r\n  }\r\n  \r\n  yes(){\r\n    this.isOpen = false;\r\n    this.alertOutput.emit(this.yesButtonResponse);\r\n  }\r\n\r\n  /**\r\n     *  ok method closes the modal and emits modalOutput.\r\n     */\r\n  ok(){\r\n    this.isOpen = false;\r\n    this.alertOutput.emit(this.okButtonResponse);\r\n  }\r\n  /**\r\n     *  cancel method closes the moda.\r\n     */\r\n  cancel(){\r\n    this.isOpen = false;\r\n    this.alertOutput.emit(this.cancelButtonResponse);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/common/components/ui/widgets/modal/alert.ts","export * from './alert';\r\nexport * from './modal';\r\nexport * from './open.component';\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/common/components/ui/widgets/modal/index.ts","import {Type, ComponentMetadata, Component, ViewEncapsulation, ComponentRef, DynamicComponentLoader,ElementRef, Input, EventEmitter, Output} from 'angular2/core';\r\nimport {Open} from './open.component';\r\nimport {DynamicHTMLOutlet} from '../dynamic-component';\r\nimport {Logger} from \"../../../services\";\r\n\r\n@Component({\r\n  selector: 'modal',\r\n  template: `\r\n  <div class=\"modal fade\" [open]=\"!isOpen\" id=\"myModal\" [attr.data-keyboard]=\"true\" [attr.data-backdrop]=\"false\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n    <div class=\"modal-dialog\" role=\"document\" style=\"width:80%;\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\" [hidden]=!modalHeader>\r\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" (click)='close()' aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>\r\n          <h4 class=\"modal-title text-center\" id=\"myModalLabel\">{{modalTitle}}</h4>\r\n        </div>\r\n        <dynamic-html-outlet (componentCreation)=\"saveComponent($event)\" [meta]=\"meta\" [childComponent]=\"modalChildComponent\"></dynamic-html-outlet>\r\n      </div>\r\n    </div>\r\n  </div>\r\n`,\r\n//\r\n  providers: [],\r\n  directives: [Open, DynamicHTMLOutlet],\r\n  encapsulation: ViewEncapsulation.None,\r\n  pipes: []\r\n})\r\n/**\r\n  * API to an open modal window.\r\n  */\r\nexport class Modal {\r\n  public modalChildComponent : Type;\r\n  public meta : ComponentMetadata;\r\n  public componentCreated : any;\r\n  public parameters : Map<string,string>;\r\n  private doneSender : EventEmitter<any> = new EventEmitter<any>();\r\n  private subscription;\r\n\r\n  saveComponent(component) {\r\n    this.logger.debug(\"component recevied in Modal \"+component);\r\n    this.logger.debug(\" parameters => \"+this.parameters.get(\"messageId\"));\r\n    this.componentCreated = component;\r\n    this.componentCreated._hostElement.component.doneSender = this.doneSender;\r\n    this.componentCreated._hostElement.component.initialize(this.parameters);\r\n    this.subscription = this.doneSender.subscribe(msg => {\r\n      if(msg == 'done') {\r\n          this.submit();\r\n      } else { \r\n          this.close();\r\n        }\r\n  });\r\n  }\r\n\r\n  private childComponentListener(msg : string) {\r\n      if(msg == 'done') \r\n          this.submit();\r\n        else \r\n          this.close();\r\n  }\r\n\r\n  public createMetadata(parameter : any) {\r\n    this.meta = new ComponentMetadata(parameter);\r\n  }\r\n  /**\r\n     * Caption for the title.\r\n     */\r\n  public modalTitle:string;\r\n  /**\r\n    * component which is to be loaded dynamically.\r\n    */\r\n  public component:any;\r\n  /**\r\n     * Describes if the modal contains Ok Button.\r\n     * The default Ok button will close the modal and emit the callback.\r\n     * Defaults to true.\r\n     */\r\n  public okButton:boolean = true;\r\n  /**\r\n     * Caption for the OK button.\r\n     * Default: Ok\r\n     */\r\n  public okButtonText:string= 'Ok';\r\n  /**\r\n     * Describes if the modal contains cancel Button.\r\n     * The default Cancelbutton will close the modal.\r\n     * Defaults to true.\r\n     */\r\n  public cancelButton:boolean = true;\r\n  /**\r\n     * Caption for the Cancel button.\r\n     * Default: Cancel\r\n     */\r\n  public cancelButtonText:string = 'Cancel';\r\n  /**\r\n     * if the modalMessage is true it will show the message inside modal body.\r\n     */\r\n  public modalMessage:boolean = true;\r\n  /**\r\n     * Some message/content can be set in message which will be shown in modal body.\r\n     */\r\n  public message:string;\r\n  /**\r\n    * if the value is true modal footer will be visible or else it will be hidden.\r\n    */\r\n  public modalFooter:boolean= true;\r\n  /**\r\n    * shows modal header if the value is true.\r\n    */\r\n  public modalHeader:boolean = true;\r\n  /**\r\n    * if the value is true modal will be visible or else it will be hidden.\r\n    */\r\n  public isOpen:boolean=false;\r\n  /**\r\n    * Emitted when a ok button was clicked\r\n    * or when close method is called.\r\n    */\r\n  @Output() public modalOutput:EventEmitter<any> = new EventEmitter();\r\n  constructor(public dcl:DynamicComponentLoader, public _elementRef: ElementRef, private logger : Logger){\r\n  }\r\n  //@ViewChild('target', {read: ViewContainerRef}) target;\r\n  /**\r\n       * Opens a modal window creating backdrop.\r\n       * @param component The angular Component that is to be loaded dynamically(optional).\r\n       */\r\n  open(component?){\r\n    this.isOpen= true;\r\n    this.modalChildComponent  = component;\r\n    //IIRH\r\n    // if(component){\r\n    // this.component = this.dcl.loadIntoLocation(component, this._elementRef, \"child\");\r\n    // }\r\n  }\r\n  /**\r\n     *  close method dispose the component, closes the modal and optionally emits modalOutput value.\r\n     */\r\n  close(data?:any){\r\n    this.dispose();\r\n    if(data){\r\n      this.modalOutput.emit(data);\r\n    }\r\n  }\r\n  /**\r\n     *  ok method dispose the component, closes the modal and emits true.\r\n     */\r\n  submit(){\r\n    this.modalOutput.emit(this.componentCreated._hostElement.component);\r\n    this.dispose();\r\n  }\r\n  /**\r\n     *  dispose method dispose the loaded component.\r\n     */\r\n  dispose(){\r\n    this.isOpen = false;\r\n    if(this.componentCreated != undefined){\r\n      this.logger.debug(\"...from modal : destroying child component\");\r\n      this.componentCreated.destroy();\r\n      this.logger.debug(\"...from modal : unsubscribing child component\");\r\n      this.subscription.unsubscribe();\r\n      //IIRH\r\n          //  this.component.then((componentRef:ComponentRef) => {\r\n          //  componentRef.dispose();\r\n          // return componentRef;\r\n        //  });\r\n        }\r\n  }\r\n\r\n}\r\n \r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/common/components/ui/widgets/modal/modal.ts","import {Directive, Input, HostBinding} from 'angular2/core';\r\nimport {Logger} from \"../../../services\";\r\n\r\n\r\n// todo: add animate\r\n// todo: add init and on change\r\n@Directive({selector: '[open]'})\r\nexport class Open {\r\n  @HostBinding('style.display')\r\n  private display:string;\r\n  @HostBinding('class.in')\r\n  @HostBinding('attr.aria-expanded')\r\n  private isExpanded:boolean = true;\r\n\r\n  @Input()\r\n  private set open(value:boolean) {\r\n    this.isExpanded = value;\r\n    this.toggle();\r\n  }\r\n\r\n  private get open():boolean {\r\n    return this.isExpanded;\r\n  }\r\n\r\n  constructor(private logger : Logger) {\r\n  }\r\n\r\n  toggle() {\r\n    if (this.isExpanded) {\r\n      this.hide();\r\n    } else {\r\n      this.show();\r\n    }\r\n  }\r\n\r\n  hide() {\r\n    this.isExpanded = false;\r\n    this.display = 'none';\r\n\r\n    let backDrop = document.getElementsByClassName(\"modal-backdrop\");\r\n    if(backDrop.length>0){\r\n      document.body.removeChild(backDrop[0]);\r\n    }\r\n  }\r\n\r\n  show() {\r\n    let backDrop = document.createElement('div');\r\n    backDrop.className=\"modal-backdrop fade in\";\r\n    document.body.appendChild(backDrop);\r\n    this.isExpanded = true;\r\n    this.display = 'block';\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/common/components/ui/widgets/modal/open.component.ts","export * from './saa-export-import.component';\n\n\n// WEBPACK FOOTER //\n// ./src/app/saa-routing/saa-export-import/index.ts","import { ElementRef, Component, ViewChild } from 'angular2/core';\r\nimport { NgClass, Validators, CORE_DIRECTIVES, FORM_DIRECTIVES, FORM_PROVIDERS } from '@angular/common';\r\n// import { ACCORDION_DIRECTIVES, BUTTON_DIRECTIVES } from 'ng2-bootstrap';\r\nimport { Router, RouteParams } from 'angular2/router';\r\nimport { SAARoutingService } from \"../saa-routing.service\";\r\nimport { Observable } from 'rxjs/Observable';\r\n//import {FormFieldComponentExample, BootstrapFormDirective, BootstrapInputDirective, LabelsComponent, LabelsValueAccessor, notEmpty} from '../../common/components/ui/controls';\r\nimport { Alert } from '../../common/components/ui/widgets/modal';\r\nimport { MenuConfig } from '../../models/menu';\r\nimport { HeaderSecondary } from '../../header-secondary';\r\nimport { FileUploadService, FileDownloader, Config, Logger } from '../../common/components/services';\r\nimport { Permissions, NotPermissions } from '../../common/directives';\r\n\r\n// console.log('`SAAExportImport` component loaded asynchronously');\r\n\r\n@Component({\r\n  selector: 'saa-export-import',\r\n  styles: [`\r\n    h1 {\r\n      font-family: Arial, Helvetica, sans-serif\r\n    }\r\n  `],\r\n  template: require('./saa-export-import.html'),\r\n  //ACCORDION_DIRECTIVES, BUTTON_DIRECTIVES, FormFieldComponent, FormLabelComponent,\r\n  //FormFieldComponentExample, BootstrapFormDirective, BootstrapInputDirective, LabelsComponent, LabelsValueAccessor,  \r\n  directives: [CORE_DIRECTIVES, FORM_DIRECTIVES, NgClass, Alert, HeaderSecondary, Permissions, NotPermissions],\r\n  providers: [FORM_PROVIDERS, SAARoutingService, FileUploadService, FileDownloader]\r\n})\r\nexport class SAAExportImportComponent {\r\n  @ViewChild(Alert) alert;\r\n\r\n  private returnToString: string;\r\n  private parameters = {};\r\n  private actionMode: string = \"Import\";\r\n  private isImport: boolean;\r\n  private filePath: string;\r\n  private uploadProgress: number = 0;\r\n  private fileList: File[] = new Array<File>();\r\n  private menuConfig: Array<MenuConfig>;\r\n\r\n  constructor(private router: Router, private saaRoutingService: SAARoutingService,\r\n    private fileUploadService: FileUploadService,\r\n    private fileDownloader: FileDownloader,\r\n    private config: Config,\r\n    routeParams: RouteParams, private logger: Logger) {\r\n    this.actionMode = routeParams.params['action'] || 'Import';\r\n    this.isImport = this.actionMode == 'Import';\r\n    this.menuConfig = [\r\n      new MenuConfig(\"fa fa-home\", \"/home\", \"Home\"),\r\n      new MenuConfig(\"fa fa-sitemap\", \"/saa-routing\", \"SAA Routing\"),\r\n      new MenuConfig(\"fa fa-cloud-upload\", \"\", this.actionMode)]\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    this.logger.log('hello `SAA Export Import` component');\r\n    // Get the data from the server\r\n  }\r\n\r\n  asyncDataWithWebpack() {\r\n  }\r\n\r\n  private fileSelection(fileInput: any) {\r\n    let files: FileList = fileInput.target.files;\r\n\r\n    for (let i = 0, length = files.length; i < length; i++) {\r\n      this.fileList.push(files.item(i));\r\n    }\r\n    //  this.fileList = fileInput.target.files.forEach( f => this.fileList.push(f));\r\n    this.logger.log(\"file selected \" + this.fileList);\r\n  }\r\n\r\n  private exportFileNameChanged(fileName: string) {\r\n    this.filePath = fileName;\r\n  }\r\n\r\n  alertOpen() {\r\n    this.alert.alertFooter = false;\r\n    this.alert.cancelButton = false;\r\n    this.alert.okButton = false;\r\n    this.alert.alertHeader = true;\r\n    this.alert.alertTitle = this.actionMode + \" in progress \";\r\n    this.alert.message = \"You will be notified when the \" + this.actionMode + \" finish.\";\r\n    this.alert.cancelButtonText = \"Ok\";\r\n    this.alert.open();\r\n  }\r\n\r\n  confirmClose(data) {\r\n    this.logger.log(\"confirming ------------  \" + data);\r\n    if (data == 0) {\r\n      this.router.parent.navigate([\"SAARoutingHome\"]);\r\n    }\r\n  }\r\n\r\n  closeAlert() {\r\n    //setTimeout(() => this.alert.cancel(), 1000);\r\n    //setTimeout(() => this.router.parent.navigate([\"SAARoutingHome\"]), 1200);\r\n  }\r\n\r\n  private disableExpImpButton(): boolean {\r\n    if (this.isImport) {\r\n      return this.fileList.length == 0;\r\n    } else {\r\n      return !this.filePath || this.filePath.length == 0;\r\n    }\r\n  }\r\n\r\n  private exportImport() {\r\n    this.alertOpen();\r\n    this.logger.log(\"export import ...\" + \" isImport \" + this.isImport + \" selected file \" + this.filePath);\r\n    let send;\r\n    if (this.isImport) {\r\n      this.uploadHandler().then(data => {\r\n        this.alert.message = this.actionMode + \" Done.\";\r\n        this.closeAlert();\r\n      }, error => {\r\n        this.logger.log(\" ERROR while importing \" + error);\r\n        this.alert.message = \" An error has occurred while processing the \" + this.actionMode + \".\";\r\n        this.closeAlert();\r\n      });\r\n      //   let fromIndex = this.filePath.lastIndexOf('\\\\');\r\n      //  send = this.saaRoutingService.import(\"c:/demo/\"+this.filePath.substr(fromIndex+1));\r\n    } else {\r\n      this.logger.log(\"[EXPORT] just before calling export post on server\");\r\n      send = this.saaRoutingService.export(\"UNKNOWN\", \"DEFAULT\", this.filePath);\r\n      send.subscribe(\r\n        data => {\r\n          this.logger.log(\"[\" + this.actionMode + \"] %s\", data);\r\n          this.fileDownloader.download(this.config.get(\"saaBackUrl\") + \"/routing/export/\" + data.response, data.response);\r\n        },\r\n        err => {\r\n          this.logger.log(\"[\" + this.actionMode + \"] Can't be done. Error code: %s, URL: %s \", err.status, err.url),\r\n            this.alert.message = \" An error has occurred while processing the \" + this.actionMode;\r\n          this.closeAlert();\r\n        },\r\n        () => {\r\n          this.logger.log(\"[\" + this.actionMode + \"]  from backend done\");\r\n          this.alert.message = this.actionMode + \" Done.\";\r\n          this.closeAlert();\r\n\r\n        });\r\n\r\n    }\r\n  }\r\n\r\n  public uploadHandler(): Promise<any> {\r\n    let result: any;\r\n\r\n    this.fileUploadService.getObserver()\r\n      .subscribe(progress => {\r\n        this.uploadProgress = progress;\r\n      });\r\n\r\n    try {\r\n      return this.fileUploadService.upload(this.config.get(\"saaBackUrl\") + \"/routing/import\", this.fileList);\r\n    } catch (error) {\r\n      this.logger.error(\"An error has occurred while importing: \" + error);\r\n      document.write(error)\r\n    }\r\n\r\n  }\r\n\r\n\r\n  private cancel() {\r\n\r\n    this.router.parent.navigate([\"SAARoutingHome\"]);\r\n  }\r\n\r\n\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/saa-routing/saa-export-import/saa-export-import.component.ts","module.exports = \"<!--main content start-->\\r\\n<section id=\\\"main-content\\\">\\r\\n    <section class=\\\"wrapper\\\">\\r\\n        <menu-header [header-menu]=\\\"menuConfig\\\"></menu-header>\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-12 col-md-12 col-lg-12\\\">\\r\\n                <div class=\\\"panel panel-default\\\">\\r\\n                    <div class=\\\"panel-heading\\\">\\r\\n                        <h3 class=\\\"panel-title\\\">{{actionMode}} </h3>\\r\\n                    </div>\\r\\n                    <div class=\\\"panel-body\\\">\\r\\n                        <form>\\r\\n                            <div class=\\\"row\\\">\\r\\n                                <div class=\\\"col-sm-2 col-md-2 col-lg-2\\\"></div>\\r\\n                                <div class=\\\"col-sm-6 col-md-6 col-lg-6 form-group form-group-sm\\\" *ngIf=\\\"isImport\\\">\\r\\n                                    <input  type=\\\"file\\\" directory (change)=\\\"fileSelection($event)\\\" />\\r\\n                                </div>\\r\\n                                <label *ngIf=\\\"!isImport\\\" class=\\\"col-sm-1 col-md-1 col-lg-1 control-label\\\">File Name</label>\\r\\n                                <div class=\\\"col-sm-4 col-md-4 col-lg-4 form-group form-group-sm\\\" *ngIf=\\\"!isImport\\\">\\r\\n                                    <input  type=\\\"text\\\"  (change)=\\\"exportFileNameChanged($event.target.value)\\\" />\\r\\n                                </div>\\r\\n                                <label *ngIf=\\\"!isImport\\\" class=\\\"col-sm-1 col-md-1 col-lg-1\\\">.xml</label>\\r\\n                                <div class=\\\"col-sm-4 col-md-4 col-lg-4\\\"></div>\\r\\n                            </div>\\r\\n                        </form>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </section>\\r\\n</section>\\r\\n<alert (alertOutput)=\\\"confirmClose($event)\\\"></alert>\\r\\n<!--main content end-->\\r\\n<footer class=\\\"footer dark-bg\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-12 col-md-12 col-lg-12\\\">\\r\\n            <div class=\\\"top-nav notification-row pull-right\\\">\\r\\n                <button *gpIf=\\\"['saa.import', 'saa.export']\\\" [disabled]=\\\"disableExpImpButton()\\\" class=\\\"btn btn-primary\\\" (click)=\\\"exportImport()\\\" > {{actionMode}} </button>\\r\\n                <button *gpNotIf=\\\"['saa.import', 'saa.export']\\\" disabled=\\\"true\\\" class=\\\"btn btn-primary\\\" > {{actionMode}} </button>\\r\\n                <button class=\\\"btn btn-default\\\" (click)=\\\"cancel()\\\"> Cancel</button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</footer>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/saa-routing/saa-export-import/saa-export-import.html\n// module id = 1273\n// module chunks = 20"],"sourceRoot":""}