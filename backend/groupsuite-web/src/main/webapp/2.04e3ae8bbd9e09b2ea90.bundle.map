{"version":3,"sources":["webpack:///2.04e3ae8bbd9e09b2ea90.chunk.js","webpack:///./src/app/amh-routing/amh-assignment-list/index.ts?ff2c","webpack:///./src/app/amh-routing/amh-assignment/index.ts?a0a1","webpack:///./src/app/amh-routing/amh-export-import/index.ts?d4ff","webpack:///./src/app/amh-routing/amh-home/index.ts?c1a6","webpack:///./src/app/amh-routing/amh-routing.component.ts","webpack:///./src/app/amh-routing/amh-routing.service.ts","webpack:///./src/app/amh-routing/amh-rule-overview/index.ts?b2f1","webpack:///./src/app/amh-routing/amh-rule/index.ts?52a1","webpack:///./src/app/amh-routing/amh-simulator/index.ts?e9d5","webpack:///./src/app/amh-routing/index.ts","webpack:///./src/app/common/components/ui/widgets/tree-view/index.ts","webpack:///./src/app/common/components/ui/widgets/tree-view/tree-view-node.model.ts","webpack:///./src/app/common/components/ui/widgets/tree-view/tree-view.component.ts","webpack:///./src/app/common/components/ui/widgets/tree-view/tree-view.html","webpack:///./src/app/common/components/ui/widgets/tree-view/tree.service.ts","webpack:///./src/app/models/routing-amh/assignment-config.model.ts?99fc","webpack:///./src/app/models/routing-amh/assignment-list.model.ts?d9f2","webpack:///./src/app/models/routing-amh/assignment-rule.model.ts?1129","webpack:///./src/app/models/routing-amh/assignment-type.model.ts?8805","webpack:///./src/app/models/routing-amh/assignment-unique-backend.model.ts?2ffa","webpack:///./src/app/models/routing-amh/assignment-unique-rule.model.ts?609e","webpack:///./src/app/models/routing-amh/assignment-unique.model.ts?51f0","webpack:///./src/app/models/routing-amh/assignment.model.ts?e58b","webpack:///./src/app/models/routing-amh/backend-pk.model.ts?8aec","webpack:///./src/app/models/routing-amh/backend.model.ts?5b29","webpack:///./src/app/models/routing-amh/index.ts?824b","webpack:///./src/app/models/routing-amh/rule-assign-type.model.ts?9642","webpack:///./src/app/models/routing-amh/rule.model.ts?389e","webpack:///./src/app/models/simulation/index.ts","webpack:///./src/app/models/simulation/job.model.ts","webpack:///./src/app/models/simulation/message.model.ts","webpack:///./src/app/models/simulation/result.model.ts"],"names":["webpackJsonp","1157","module","exports","__webpack_require__","namespace","Promise","resolve","e","require","mod","__esModule","default","919","920","1158","1147","core_1","router_1","AMHRouting","prototype","ngOnInit","asyncDataWithWebpack","__decorate","Component","selector","directives","ROUTER_DIRECTIVES","template","RouteConfig","path","name","loader","useAsDefault","__metadata","901","http_1","Observable_1","routing_amh_1","simulation_1","tree_view_1","services_1","browser_1","AMHRoutingService","http","config","logger","this","query","criterias","TreeNode","log","get","findMessageByNameQuery","Elastic4js","bool","should","match","findMessagesByGroupQuery","groupNames","map","groupName","findAssignmentByID","productID","res","json","findAssignments","post","findRuleByCode","code","_this","AMHRule","findRules","flatMap","data","rule","getFromSource","find","r","toLowerCase","toLocaleLowerCase","Observable","create","observer","next","complete","findMessages","toHits","findGroupMessages","findMessage","messageId","_source","replacerFor","fields","replacer","key","value","forEach","field","Array","saveMessage","message","user","headers","Headers","Content-Type","options","RequestOptions","payload","JSON","stringify","toWriteModel","username","put","id","createMessage","deleteMessages","ids","groupId","userId","time","Date","now","join","delete","findMessageMatches","text","findMessageMatchesJson","reduce","acc","R","push","findMessageByName","toFoundHits","resp","found","hits","hit","loadFlatGroupMessages","indexName","length","from","messages","loadGroupMessages","mapped","current","undefined","group","set","Map","totalHits","total","replace","findJobs","launcherId","instantLimit","jobStatus","job_status","job_threshold","job_launcher","cjobs","jobs","job","s","SimulationJob","fromJson","createJob","cancelJob","jobId","reExecuteJob","exportJobResults","loadAMHRuleGrammar","fileName","fileContent","methodName","pegjs","generate","console","error","exportSimulationResults","results","findBackends","findAssignmentsBySequence","sequence","assignments","assignBySequenceFound","assignment","findAssignmentsByCode","assignByCodeFound","findAssignmentsByBackendPK","pk","i","existingBackend","backendPrimaryKey","direction","findAllCriterias","tree","saveRule","addAuditValue","String","createRule","saveAssignment","assignToWriteModel","createAssignment","export","env","version","filePath","response","getExportedFile","import","modificationUserId","modificationDate","creationUserId","creationDate","writeModelObj","backCode","backDirection","active","dataOwner","lockCode","description","rules","ruleWriteModel","assigRuleToModel","backendCode","assignmentRule","ruleCode","hitArray","Injectable","Http","Config","Logger","1159","921","1160","529","__export","m","p","hasOwnProperty","1136","917","searchCode","children","leaf","expanded","toggle","clone","child","cloneTree","treeNodeList","node","1152","common_1","tree_view_node_model_1","tree_service_1","di_1","TreeView","treeSelectionService","buy","EventEmitter","selectedNode","nodeSelected","emit","selectionDone","selectedCode","writeNodeValue","v","Input","NgClass","events","TreeSelectionService","CUSTOM_VALUE_ACCESSOR","Provider","NG_VALUE_ACCESSOR","useExisting","forwardRef","TreeViewAccessor","multi","host","onChange","_","onTouched","writeValue","registerOnChange","fn","registerOnTouched","Directive","(buy)","providers","1163","918","criteriaCode","selection","getSelection","1168","assignment_type_model_ts_1","AssignmentConfig","type","maxBackendsAllowed","calculeMaxBackendsAllowed","AssignType","BK_CHANNEL","DTN_COPY","FEED_DTN_COPY","isTypeDifferent","typeAsString","showExtraFields","1169","AssignmentList","backName","backSequence","ruleExpressions","ruleSequence","environment","1170","AssignmentRule","expression","886","1130","assignment_type_model_1","AssignmentUniqueBackend","assignmentCode","1131","AssignmentUniqueRule","1171","assignment_unique_backend_model_1","assignment_unique_rule_model_1","AssignmentUnique","copies","backends","backendCodeList","backend","1172","Assignment","1173","BackendPK","hashPK","toString","hash","1174","Backend","pkCode","pkDirection","880","1175","RuleAssignType","1176","audit_1","_super","call","selected","__extends","ruleType","setEnvAndVersion","cloneWithUpperCaseCode","toUpperCase","BaseAudit","927","1154","startDate","endDate","status","numOfMessages","comment","params","output","outputAsArray","jobLauncherSystem","AMH_SYSTEM_ID","isArray","jobLauncher","SAA_SYSTEM_ID","1155","getItem","itemMap","Message","content","groupCount","1156","SimulationResult","selectionSequence","selectionCode","ruleName","ruleExpression","backendSequence","backendName","selectionType","messageReference","messageNameHit","backendSequences","backendNames","newSimuResult","messageName","withError","errorMsg"],"mappings":"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","file":"2.04e3ae8bbd9e09b2ea90.chunk.js","sourcesContent":["webpackJsonp([2],{\n\n/***/ 1157:\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = function (namespace) {\n\t  return new Promise(function (resolve) {\n\t    __webpack_require__.e/* nsure */(19, function (require) {\n\t      if (namespace) {\n\t        resolve(__webpack_require__(1140)[namespace]);\n\t      } else {\n\t        var mod = __webpack_require__(1140);\n\t        resolve(mod.__esModule ? mod.default : mod)\n\t      }\n\t    });\n\t  });\n\t}\n\n/***/ },\n\n/***/ 919:\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = function (namespace) {\n\t  return new Promise(function (resolve) {\n\t    __webpack_require__.e/* nsure */(16, function (require) {\n\t      if (namespace) {\n\t        resolve(__webpack_require__(1141)[namespace]);\n\t      } else {\n\t        var mod = __webpack_require__(1141);\n\t        resolve(mod.__esModule ? mod.default : mod)\n\t      }\n\t    });\n\t  });\n\t}\n\n/***/ },\n\n/***/ 920:\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = function (namespace) {\n\t  return new Promise(function (resolve) {\n\t    __webpack_require__.e/* nsure */(15, function (require) {\n\t      if (namespace) {\n\t        resolve(__webpack_require__(1142)[namespace]);\n\t      } else {\n\t        var mod = __webpack_require__(1142);\n\t        resolve(mod.__esModule ? mod.default : mod)\n\t      }\n\t    });\n\t  });\n\t}\n\n/***/ },\n\n/***/ 1158:\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = function (namespace) {\n\t  return new Promise(function (resolve) {\n\t    __webpack_require__.e/* nsure */(26, function (require) {\n\t      if (namespace) {\n\t        resolve(__webpack_require__(1143)[namespace]);\n\t      } else {\n\t        var mod = __webpack_require__(1143);\n\t        resolve(mod.__esModule ? mod.default : mod)\n\t      }\n\t    });\n\t  });\n\t}\n\n/***/ },\n\n/***/ 1147:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar core_1 = __webpack_require__(30);\r\n\tvar router_1 = __webpack_require__(58);\r\n\t//console.log('`AMHRouting` component loaded asynchronously');\r\n\tvar AMHRouting = (function () {\r\n\t    function AMHRouting() {\r\n\t    }\r\n\t    AMHRouting.prototype.ngOnInit = function () {\r\n\t        // console.log('hello `AMH Routing` component');\r\n\t        // static data that is bundled\r\n\t        // var mockData = require('assets/mock-data/mock-data.json');\r\n\t        // console.log('mockData', mockData);\r\n\t        // if you're working with mock data you can also use http.get('assets/mock-data/mock-data.json')\r\n\t        // this.asyncDataWithWebpack();\r\n\t    };\r\n\t    AMHRouting.prototype.asyncDataWithWebpack = function () {\r\n\t        // you can also async load mock data with 'es6-promise-loader'\r\n\t        // you would do this if you don't want the mock-data bundled\r\n\t        // remember that 'es6-promise-loader' is a promise\r\n\t        // var asyncMockDataPromiseFactory = require('es6-promise!assets/mock-data/mock-data.json');\r\n\t        // setTimeout(() => {\r\n\t        //\r\n\t        //   let asyncDataPromise = asyncMockDataPromiseFactory();\r\n\t        //   asyncDataPromise.then(json => {\r\n\t        //     console.log('async mockData', json);\r\n\t        //   });\r\n\t        //\r\n\t        // });\r\n\t    };\r\n\t    AMHRouting = __decorate([\r\n\t        core_1.Component({\r\n\t            selector: 'amh-routing',\r\n\t            //   styles: [`\r\n\t            //     h1 {\r\n\t            //       font-family: Arial, Helvetica, sans-serif\r\n\t            //     }\r\n\t            //   `],\r\n\t            directives: [router_1.ROUTER_DIRECTIVES],\r\n\t            template: \"\\n    <router-outlet></router-outlet>\\n  \"\r\n\t        }),\r\n\t        router_1.RouteConfig([\r\n\t            { path: '/', name: 'AMHHome', loader: function () { return __webpack_require__(1158)('AMHHome'); }, useAsDefault: true },\r\n\t            { path: '/assignment-list', name: 'AMHAssignmentList', loader: function () { return __webpack_require__(1157)('AMHAssignmentList'); } },\r\n\t            { path: '/assignment/create', name: 'AMHAssignmentCreate', loader: function () { return __webpack_require__(919)('AMHAssignmentComponent'); } },\r\n\t            { path: '/assignment/edit', name: 'AMHAssignmentEdit', loader: function () { return __webpack_require__(919)('AMHAssignmentComponent'); } },\r\n\t            { path: '/rule/create', name: 'AMHRuleCreate', loader: function () { return __webpack_require__(921)('AMHRuleComponent'); } },\r\n\t            { path: '/rule/:code/edit', name: 'AMHRuleEdit', loader: function () { return __webpack_require__(921)('AMHRuleComponent'); } },\r\n\t            { path: '/export', name: 'AMHExport', loader: function () { return __webpack_require__(920)('AMHExportImportComponent'); } },\r\n\t            { path: '/import', name: 'AMHImport', loader: function () { return __webpack_require__(920)('AMHExportImportComponent'); } },\r\n\t            { path: '/simulation', name: 'AMHSimulation', loader: function () { return __webpack_require__(1160)('AMHSimulatorComponent'); } },\r\n\t            { path: '/rule-overview', name: 'AMHRuleOverview', loader: function () { return __webpack_require__(1159)('AMHRuleOverviewComponent'); } }\r\n\t        ]), \r\n\t        __metadata('design:paramtypes', [])\r\n\t    ], AMHRouting);\r\n\t    return AMHRouting;\r\n\t}());\r\n\texports.AMHRouting = AMHRouting;\r\n\n\n/***/ },\n\n/***/ 901:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar http_1 = __webpack_require__(257);\r\n\tvar core_1 = __webpack_require__(30);\r\n\tvar Observable_1 = __webpack_require__(14);\r\n\tvar routing_amh_1 = __webpack_require__(880);\r\n\tvar simulation_1 = __webpack_require__(927);\r\n\tvar tree_view_1 = __webpack_require__(1136);\r\n\tvar services_1 = __webpack_require__(38);\r\n\tvar browser_1 = __webpack_require__(541);\r\n\tvar AMHRoutingService = (function () {\r\n\t    function AMHRoutingService(http, config, logger) {\r\n\t        this.http = http;\r\n\t        this.config = config;\r\n\t        this.logger = logger;\r\n\t        this.query = \" \\n    {\\n  \\\"query\\\": {\\n    \\\"bool\\\": {\\n      \\\"should\\\": [\\n        {\\n          \\\"match\\\": {\\n            \\\"name\\\": {\\n              \\\"query\\\": \\\"##TO_REPLACE##\\\",\\n              \\\"analyzer\\\": \\\"id_analyzer\\\",\\n              \\\"operator\\\": \\\"and\\\"\\n            }\\n          }\\n        }\\n      ]\\n    }\\n  },\\n  \\\"from\\\": 0,\\n  \\\"size\\\": 1000,\\n  \\\"sort\\\": [\\n    {\\n      \\\"name\\\": {\\n        \\\"order\\\": \\\"asc\\\"\\n      }\\n    }\\n  ]\\n}\\n  \";\r\n\t        this.criterias = [\r\n\t            new tree_view_1.TreeNode(\"transaction\", \"Transaction\", \"Transaction\", [\r\n\t                new tree_view_1.TreeNode(\"transactiondirection\", \"direction\", \"Direction\"),\r\n\t                new tree_view_1.TreeNode(\"transactionreceiveraddress\", \"receiverAddress\", \"Receiver Address\"),\r\n\t                new tree_view_1.TreeNode(\"transactionmessagetype\", \"messageType/code\", \"Message Type\"),\r\n\t                new tree_view_1.TreeNode(\"transactionswiftparameters\", \"SwiftParameters\", \"Swift Parameters\", [\r\n\t                    new tree_view_1.TreeNode(\"swiftparametersrequestreference\", \"swiftParameters/requestReference\", \"Request Reference\"),\r\n\t                    new tree_view_1.TreeNode(\"swiftparametersservice\", \"swiftParameters/service\", \"Service\")\r\n\t                ]),\r\n\t                new tree_view_1.TreeNode(\"transactionsenderaddress\", \"senderAddress\", \"Sender Address\"),\r\n\t                /*new TreeNode(\"transactionadditionalparameterslabel\",\"AdditionalParameters\",\"Additional Parameters\"),\r\n\t                new TreeNode(\"transactionamlstatuslabel\",\"AmlStatus\",\"Aml Status\"),\r\n\t                new TreeNode(\"transactionarchivedlabel\",\"Archived\",\"Archived\"),\r\n\t                new TreeNode(\"transactionbackendchannellabel\",\"BackendChannel\",\"Backend Channel\"),\r\n\t                new TreeNode(\"transactionbulkdetailslabel\",\"BulkDetails\",\"Bulk Details\"),\r\n\t                new TreeNode(\"transactionbulkfiletransactionlabel\",\"BulkFileTransaction\",\"Bulk File Transaction\"),\r\n\t                new TreeNode(\"transactionbusinessdetailslabel\",\"BusinessDetails\",\"Business Details\"),\r\n\t                new TreeNode(\"transactionbusinessstatuslabel\",\"BusinessStatus\",\"Business Status\"),\r\n\t                new TreeNode(\"transactioncommunicationparameterslabel\",\"CommunicationParameters\",\"Communication Parameters\"),\r\n\t                new TreeNode(\"transactioncommunicationprioritylevellabel\",\"CommunicationPriorityLevel\",\"Communication Priority Level\"),\r\n\t                new TreeNode(\"transactioncreationdatelabel\",\"CreationDate\",\"Creation Date\"),\r\n\t                new TreeNode(\"transactioncustomerdetailslabel\",\"CustomerDetails\",\"Customer Details\"),\r\n\t                new TreeNode(\"transactiondatedeliveredlabel\",\"DateDelivered\",\"Date Delivered\"),\r\n\t                new TreeNode(\"transactiondatereceivedlabel\",\"DateReceived\",\"Date Received\"),\r\n\t                new TreeNode(\"transactiondecisionlabel\",\"Decision\",\"Decision\"),\r\n\t                new TreeNode(\"transactiondecisionmakerlabel\",\"DecisionMaker\",\"Decision Maker\"),\r\n\t                new TreeNode(\"transactiondocumentlabel\",\"Document\",\"Document\"),\r\n\t                new TreeNode(\"transactionduplicatecheckoverridelabel\",\"DuplicateCheckOverride\",\"Duplicate Check Override\"),\r\n\t                new TreeNode(\"transactionextractedfieldslabel\",\"ExtractedFields\",\"Extracted Fields\"),\r\n\t                */\r\n\t                new tree_view_1.TreeNode(\"transactionfinparameterslabel\", \"FINParameters/messageType\", \"FIN Parameters\"),\r\n\t                /*new TreeNode(\"transactionfieldextractionprofilelabel\",\"FieldExtractionProfile\",\"Field Extraction Profile\"),\r\n\t                new TreeNode(\"transactionfiletypeparameterslabel\",\"FileTypeParameters\",\"File Type Parameters\"),\r\n\t                new TreeNode(\"transactionflexfieldslabel\",\"FlexFields\",\"Flex Fields\"),\r\n\t                new TreeNode(\"transactionippcontrollabel\",\"IPPControl\",\"IPP control\"),\r\n\t                new TreeNode(\"transactionippoidlabel\",\"IPPOID\",\"IPP OID\"),\r\n\t                new TreeNode(\"transactioninstructionlabel\",\"Instruction\",\"Instruction\"),\r\n\t                new TreeNode(\"transactioninternalreferencelabel\",\"InternalReference\",\"Internal Reference\"),\r\n\t                new TreeNode(\"transactionlastmodificationdatelabel\",\"LastModificationDate\",\"Last Modification Date\"),\r\n\t                new TreeNode(\"transactionlastmodifiernamelabel\",\"LastModifierName\",\"Last Modifier Name\"),\r\n\t                new TreeNode(\"transactionlastupdatetimestamplabel\",\"LastUpdateTimestamp\",\"Last Update Timestamp\"),\r\n\t                new TreeNode(\"transactionlockcodelabel\",\"LockCode\",\"Lock Code\"),\r\n\t                new TreeNode(\"transactionlogicalnodelabel\",\"LogicalNode\",\"Logical Node\"),\r\n\t                new TreeNode(\"transactionmqinparameterslabel\",\"MQInParameters\",\"MQ In Parameters\"),\r\n\t                new TreeNode(\"transactionmqoutparameterslabel\",\"MQOutParameters\",\"MQ Out Parameters\"),\r\n\t                new TreeNode(\"transactionmessagecategorylabel\",\"MessageCategory\",\"Message Category\"),\r\n\t                new TreeNode(\"transactionmessageformatlabel\",\"MessageFormat\",\"Message Format\"),\r\n\t                new TreeNode(\"transactionmessagereferencelabel\",\"MessageReference\",\"Message Reference\"),\r\n\t                new TreeNode(\"transactionmessagetypelabel\",\"MessageType\",\"Message Type\"),\r\n\t                new TreeNode(\"transactionnetworkchannellabel\",\"NetworkChannel\",\"Network Channel\"),\r\n\t                new TreeNode(\"transactionnetworkprioritylabel\",\"NetworkPriority\",\"Network Priority\"),\r\n\t                */ new tree_view_1.TreeNode(\"transactionnetworkprotocollabel\", \"networkProtocol\", \"Network Protocol\"),\r\n\t            ])\r\n\t        ];\r\n\t        this.logger.log(\" retrieving config\");\r\n\t        this.logger.log(\"simulationBackUrl value: \" + config.get('simulationBackUrl'));\r\n\t    }\r\n\t    AMHRoutingService.prototype.findMessageByNameQuery = function (name) {\r\n\t        return \"{\" + services_1.Elastic4js.query(services_1.Elastic4js.bool([\r\n\t            services_1.Elastic4js.should([\r\n\t                services_1.Elastic4js.match(\"name\", name)\r\n\t            ])\r\n\t        ])) + \"}\";\r\n\t    };\r\n\t    AMHRoutingService.prototype.findMessagesByGroupQuery = function (groupNames) {\r\n\t        return \"{\" + services_1.Elastic4js.query(services_1.Elastic4js.bool([\r\n\t            services_1.Elastic4js.should(groupNames.map(function (groupName) {\r\n\t                return services_1.Elastic4js.match(\"group\", groupName);\r\n\t            }))\r\n\t        ])) + \"}\";\r\n\t    };\r\n\t    AMHRoutingService.prototype.findAssignmentByID = function (productID) {\r\n\t        return this.http.get('/products/${productID}').map(function (res) { return res.json(); });\r\n\t    };\r\n\t    //TODO: \r\n\t    /*\r\n\t     *  + remove limit size=100 for all http request, use pagination instead\r\n\t    */\r\n\t    AMHRoutingService.prototype.findAssignments = function () {\r\n\t        return this.http.post(this.config.get(\"esBackUrl\") + \"/amhrouting/assignments/_search?size=1000\", '{\"sort\": [{\"sequence\": {\"order\": \"asc\"}}]}').map(function (res) { return res.json(); });\r\n\t    };\r\n\t    AMHRoutingService.prototype.findRuleByCode = function (code) {\r\n\t        var _this = this;\r\n\t        this.logger.log(\">> looking for \" + code);\r\n\t        var found = new routing_amh_1.AMHRule(\"\", \"\");\r\n\t        return this.findRules().flatMap(function (data) {\r\n\t            var rule = AMHRoutingService.getFromSource(data).find(function (r) {\r\n\t                return r.code.toLowerCase() == (code ? code.toLocaleLowerCase() : '');\r\n\t            });\r\n\t            _this.logger.log(\">> elastic return  \" + rule);\r\n\t            if (rule) {\r\n\t                return Observable_1.Observable.create(function (observer) {\r\n\t                    observer.next(rule);\r\n\t                    observer.complete();\r\n\t                    // Any cleanup logic might go here\r\n\t                    return function () { return _this.logger.log('disposed found'); };\r\n\t                });\r\n\t            }\r\n\t            else {\r\n\t                return Observable_1.Observable.create(function (observer) {\r\n\t                    observer.next(new routing_amh_1.AMHRule(\"\", \"\"));\r\n\t                    _this.logger.log(\"returning to observer code=empty\");\r\n\t                    observer.complete();\r\n\t                    // Any cleanup logic might go here\r\n\t                    return function () { return _this.logger.log('disposed not found'); };\r\n\t                });\r\n\t            }\r\n\t        });\r\n\t        // return Observable.from(this.findAMHRuleByCode(code));\r\n\t    };\r\n\t    AMHRoutingService.prototype.findRules = function () {\r\n\t        return this.http.get(this.config.get(\"esBackUrl\") + \"/amhrouting/rules/_search?size=1000\").map(function (res) { return res.json(); });\r\n\t    };\r\n\t    AMHRoutingService.prototype.findMessages = function () {\r\n\t        return this.http.get(this.config.get(\"esBackUrl\") + \"/messages/amh/_search?size=1000\")\r\n\t            .map(function (res) { return res.json(); })\r\n\t            .flatMap(this.toHits);\r\n\t    };\r\n\t    AMHRoutingService.prototype.findGroupMessages = function () {\r\n\t        return this.http.get(this.config.get(\"esBackUrl\") + \"/messages/group/_search?size=100000\")\r\n\t            .map(function (res) { return res.json(); })\r\n\t            .flatMap(this.toHits);\r\n\t    };\r\n\t    AMHRoutingService.prototype.findMessage = function (messageId) {\r\n\t        return this.http.get(this.config.get(\"esBackUrl\") + \"/messages/amh/\" + messageId)\r\n\t            .map(function (res) { return res.json(); })\r\n\t            .map(function (res) { return res._source; });\r\n\t    };\r\n\t    AMHRoutingService.prototype.replacerFor = function (fields) {\r\n\t        var replacer = function (key, value) {\r\n\t            fields.forEach(function (field) {\r\n\t                if (value && value[field]) {\r\n\t                    //this.logger.log(\" [replacer] instanceof \" + (value[field] instanceof Array));\r\n\t                    if (value[field] instanceof Array) {\r\n\t                        value[field] = value[field][0];\r\n\t                    }\r\n\t                    else {\r\n\t                    }\r\n\t                }\r\n\t            });\r\n\t            return value;\r\n\t        };\r\n\t        return replacer;\r\n\t    };\r\n\t    // replacer(key: any, value: any) : any {\r\n\t    //   if ( value && value[\"userId\"] ) {\r\n\t    //     this.logger.log(\" instanceof \"+(value[\"userId\"] instanceof Array));\r\n\t    //     if ( value[\"userId\"] instanceof Array ) {\r\n\t    //        value[\"userId\"] = value[\"userId\"][0];\r\n\t    //     } else {\r\n\t    //       this.logger.log(\" userId is not array\");\r\n\t    //     }\r\n\t    //   }\r\n\t    //   return value;\r\n\t    // } \r\n\t    AMHRoutingService.prototype.saveMessage = function (message, user) {\r\n\t        var _this = this;\r\n\t        var headers = new http_1.Headers({ 'Content-Type': 'application/json' });\r\n\t        var options = new http_1.RequestOptions({ headers: headers });\r\n\t        var payload = JSON.stringify(message.toWriteModel(user.username), this.replacerFor([\"userId\"]));\r\n\t        // let payload : string = this.convertToText(message.toWriteModel(user.username));\r\n\t        this.logger.log(\" save message  sent: \" + payload);\r\n\t        return this.http.put(this.config.get(\"simulationBackUrl\") + \"/messages/amh/\" + message.id, payload, options).map(function (res) { _this.logger.log(\" from message save \" + res.json()); res.json(); });\r\n\t    };\r\n\t    AMHRoutingService.prototype.createMessage = function (message, user) {\r\n\t        var _this = this;\r\n\t        var headers = new http_1.Headers({ 'Content-Type': 'application/json' });\r\n\t        var options = new http_1.RequestOptions({ headers: headers });\r\n\t        var payload = JSON.stringify(message.toWriteModel(user.username), this.replacerFor([\"userId\"]));\r\n\t        this.logger.log(\" create message sent: \" + payload);\r\n\t        return this.http.post(this.config.get(\"simulationBackUrl\") + \"/messages/amh\", payload, options).map(function (res) { _this.logger.log(\" from message create \" + res.json()); res.json(); });\r\n\t    };\r\n\t    AMHRoutingService.prototype.deleteMessages = function (ids, user, groupId) {\r\n\t        var _this = this;\r\n\t        var headers = new http_1.Headers({\r\n\t            'Content-Type': 'application/json',\r\n\t            'userId': user.username,\r\n\t            'time': Date.now(),\r\n\t            'groupId': groupId,\r\n\t            'ids': ids.join(\";\")\r\n\t        });\r\n\t        var options = new http_1.RequestOptions({ headers: headers });\r\n\t        return this.http.delete(this.config.get(\"simulationBackUrl\") + \"/messages/amh\", options).map(function (res) { _this.logger.log(\" from message delete \" + res.json()); res.json(); });\r\n\t    };\r\n\t    AMHRoutingService.prototype.findMessageMatches = function (text) {\r\n\t        return this.findMessageMatchesJson(text)\r\n\t            .flatMap(this.toHits)\r\n\t            .reduce(function (acc, R) { acc.push(R); return acc; }, new Array());\r\n\t    };\r\n\t    AMHRoutingService.prototype.findMessageByName = function (name) {\r\n\t        var payload = this.findMessageByNameQuery(name);\r\n\t        return this.http.post(this.config.get(\"esBackUrl\") + \"/messages/amh/_search\", payload)\r\n\t            .map(function (res) { return res.json(); })\r\n\t            .flatMap(this.toFoundHits)\r\n\t            .map(function (resp) {\r\n\t            if (resp.found) {\r\n\t                var message = resp.hits.find(function (hit) { return hit.name.toLowerCase() == name.toLowerCase(); });\r\n\t                if (message) {\r\n\t                    return { \"found\": true, \"message\": message };\r\n\t                }\r\n\t            }\r\n\t            return { \"found\": false };\r\n\t        });\r\n\t    };\r\n\t    AMHRoutingService.prototype.loadFlatGroupMessages = function (groupNames, indexName) {\r\n\t        if (groupNames === void 0) { groupNames = []; }\r\n\t        if (indexName === void 0) { indexName = \"messages/group\"; }\r\n\t        if (groupNames.length == 0) {\r\n\t            // console.debug(\"returning found false\");\r\n\t            return Observable_1.Observable.from([{ \"found\": false }]);\r\n\t        }\r\n\t        var payload = this.findMessagesByGroupQuery(groupNames);\r\n\t        return this.http.post(this.config.get(\"esBackUrl\") + \"/\" + indexName + \"/_search?size=200000\", payload)\r\n\t            .map(function (res) { return res.json(); })\r\n\t            .flatMap(this.toFoundHits)\r\n\t            .map(function (resp) { return resp.found ? { \"found\": true, \"messages\": resp.hits } : { \"found\": false }; });\r\n\t    };\r\n\t    AMHRoutingService.prototype.loadGroupMessages = function (groupNames, indexName) {\r\n\t        if (groupNames === void 0) { groupNames = []; }\r\n\t        if (indexName === void 0) { indexName = \"messages/group\"; }\r\n\t        var payload = groupNames.length > 0 ? this.findMessagesByGroupQuery(groupNames) : \"{}\";\r\n\t        return this.http.post(this.config.get(\"esBackUrl\") + \"/\" + indexName + \"/_search?size=200000\", payload)\r\n\t            .map(function (res) { return res.json(); })\r\n\t            .flatMap(this.toFoundHits)\r\n\t            .map(function (resp) {\r\n\t            if (resp.found) {\r\n\t                var messages = resp.hits.reduce(function (mapped, current) {\r\n\t                    if (mapped.get(current.group) == undefined) {\r\n\t                        mapped = mapped.set(current.group, [current]);\r\n\t                    }\r\n\t                    else {\r\n\t                        //   console.debug(\"current.group \"+current.group+ \" != undefined actual size \"+mapped.get(current.group));\r\n\t                        mapped.get(current.group).push(current);\r\n\t                    }\r\n\t                    //console.debug(\"mapped [\"+current.group+\"] =\"+mapped.get(current.group));  \r\n\t                    return mapped;\r\n\t                }, new Map());\r\n\t                return { \"found\": true, \"messages\": messages };\r\n\t            }\r\n\t            return { \"found\": false };\r\n\t        });\r\n\t    };\r\n\t    //TODO: check how to pass 'this' in the context to user this.logger instead of console\r\n\t    AMHRoutingService.prototype.toFoundHits = function (match) {\r\n\t        var totalHits = match.hits.total;\r\n\t        //console.debug(\"totalHits : \"+totalHits);\r\n\t        if (totalHits > 0) {\r\n\t            var hits = match['hits'].hits.map(function (hit) { return hit[\"_source\"]; });\r\n\t            //console.debug(\"from  \"+ JSON.stringify(hits));\r\n\t            return Observable_1.Observable.from([{ \"found\": true, \"hits\": hits }]);\r\n\t        }\r\n\t        else {\r\n\t            //console.debug(\"returning empty hits[] \");\r\n\t            return Observable_1.Observable.from([{ \"found\": false, \"hits\": [] }]);\r\n\t        }\r\n\t    };\r\n\t    AMHRoutingService.prototype.findMessageMatchesJson = function (text) {\r\n\t        if (text && text.length > 1) {\r\n\t            var payload = this.query.replace(/##TO_REPLACE##/g, text);\r\n\t            //this.logger.debug(\"findPointMatches payload \"+ payload);\r\n\t            return this.http.post(this.config.get(\"esBackUrl\") + \"/messages/amh/_search?size=1000\", payload).map(function (res) { return res.json(); });\r\n\t        }\r\n\t        else {\r\n\t            return this.http.post(this.config.get(\"esBackUrl\") + \"/messages/amh/_search?size=100\", '{\"sort\": [{\"name\": {\"order\": \"asc\"}}]}').map(function (res) { return res.json(); });\r\n\t        }\r\n\t    };\r\n\t    AMHRoutingService.prototype.findJobs = function (user, launcherId, instantLimit, jobStatus) {\r\n\t        var headers = new http_1.Headers({\r\n\t            'Content-Type': 'application/json',\r\n\t            'userId': user.username,\r\n\t            'time': Date.now(),\r\n\t            'job_status': jobStatus,\r\n\t            'job_threshold': instantLimit,\r\n\t            'job_launcher': launcherId\r\n\t        });\r\n\t        var options = new http_1.RequestOptions({ headers: headers });\r\n\t        return this.http.get(this.config.get(\"simulationBackUrl\") + \"/jobs/amh/users/\" + user.username, options)\r\n\t            .map(function (res) { return res.json(); })\r\n\t            .flatMap(function (res) {\r\n\t            var cjobs = res.jobs\r\n\t                .map(function (job) {\r\n\t                var s = simulation_1.SimulationJob.fromJson(job);\r\n\t                return s;\r\n\t            });\r\n\t            return cjobs;\r\n\t        });\r\n\t    };\r\n\t    AMHRoutingService.prototype.createJob = function (job, user) {\r\n\t        var headers = new http_1.Headers({\r\n\t            'Content-Type': 'application/json',\r\n\t            'userId': user.username,\r\n\t            'time': Date.now()\r\n\t        });\r\n\t        var options = new http_1.RequestOptions({ headers: headers });\r\n\t        var payload = JSON.stringify(job.toWriteModel(), this.replacerFor([\"user\"]));\r\n\t        return this.http.post(this.config.get(\"simulationBackUrl\") + \"/jobs/amh\", payload, options)\r\n\t            .map(function (res) { return res.json(); });\r\n\t    };\r\n\t    AMHRoutingService.prototype.cancelJob = function (jobId, user) {\r\n\t        var headers = new http_1.Headers({\r\n\t            'Content-Type': 'application/json',\r\n\t            'userId': user.username,\r\n\t            'time': Date.now()\r\n\t        });\r\n\t        var options = new http_1.RequestOptions({ headers: headers });\r\n\t        //let payload = JSON.stringify(job.toWriteModel());\r\n\t        return this.http.delete(this.config.get(\"simulationBackUrl\") + \"/jobs/amh/\" + jobId, options)\r\n\t            .map(function (res) { return res.json(); });\r\n\t    };\r\n\t    AMHRoutingService.prototype.reExecuteJob = function (jobId, user) {\r\n\t        var headers = new http_1.Headers({\r\n\t            'Content-Type': 'application/json',\r\n\t            'userId': user.username,\r\n\t            'time': Date.now()\r\n\t        });\r\n\t        var options = new http_1.RequestOptions({ headers: headers });\r\n\t        var payload = JSON.stringify({});\r\n\t        return this.http.put(this.config.get(\"simulationBackUrl\") + \"/jobs/amh/\" + jobId, payload, options)\r\n\t            .map(function (res) { return res.json(); });\r\n\t    };\r\n\t    AMHRoutingService.prototype.exportJobResults = function (jobId, user) {\r\n\t        var headers = new http_1.Headers({\r\n\t            'Content-Type': 'application/json',\r\n\t            'userId': user.username,\r\n\t            'time': Date.now()\r\n\t        });\r\n\t        var options = new http_1.RequestOptions({ headers: headers });\r\n\t        var payload = JSON.stringify({});\r\n\t        return this.http.post(this.config.get(\"simulationBackUrl\") + \"/jobs/amh/export/\" + jobId, payload, options)\r\n\t            .map(function (res) { return res.json(); });\r\n\t    };\r\n\t    AMHRoutingService.prototype.loadAMHRuleGrammar = function (fileName) {\r\n\t        return this.http.get(this.config.get(\"simulationBackUrl\") + \"/jobs/amh/export/\" + fileName)\r\n\t            .map(function (data) { return data.text(); })\r\n\t            .map(function (fileContent) {\r\n\t            var methodName = (typeof browser_1.pegjs.generate === 'function') ? 'generate' : 'buildParser';\r\n\t            try {\r\n\t                return browser_1.pegjs[methodName](fileContent);\r\n\t            }\r\n\t            catch (e) {\r\n\t                console.error(e.message);\r\n\t            }\r\n\t        });\r\n\t    };\r\n\t    AMHRoutingService.prototype.exportSimulationResults = function (results, user) {\r\n\t        /*\r\n\t        Hit(fileName : String, selectionSequence : Long, selectionCode : String,\r\n\t                   ruleSequence : Long, ruleName : String, ruleExpression : String,\r\n\t                   backendSequences : String, backendNames : String) {\r\n\t        */\r\n\t        var headers = new http_1.Headers({\r\n\t            'Content-Type': 'application/json',\r\n\t            'userId': user.username,\r\n\t            'time': Date.now()\r\n\t        });\r\n\t        var options = new http_1.RequestOptions({ headers: headers });\r\n\t        var hits = results.map(function (res) { return res.toWriteModel(); });\r\n\t        var payload = JSON.stringify(hits);\r\n\t        return this.http.post(this.config.get(\"simulationBackUrl\") + \"/jobs/amh/export\", payload, options)\r\n\t            .map(function (res) { return res.json(); });\r\n\t    };\r\n\t    AMHRoutingService.prototype.toHits = function (match) {\r\n\t        return Observable_1.Observable.from(match['hits'].hits)\r\n\t            .map(function (hit) { return hit[\"_source\"]; });\r\n\t    };\r\n\t    AMHRoutingService.prototype.findBackends = function () {\r\n\t        this.logger.log(\"findBackends url = \" + this.config.get(\"esBackUrl\"));\r\n\t        return this.http.get(this.config.get(\"esBackUrl\") + \"/amhrouting/backends/_search?size=1000\").map(function (res) { return res.json(); });\r\n\t    };\r\n\t    AMHRoutingService.prototype.findAssignmentsBySequence = function (sequence) {\r\n\t        var _this = this;\r\n\t        return this.findAssignments().flatMap(function (data) {\r\n\t            var assignments = AMHRoutingService.getFromSource(data);\r\n\t            var found = [];\r\n\t            var assignBySequenceFound = assignments.find(function (assignment) { return assignment.sequence == sequence; });\r\n\t            if (assignBySequenceFound) {\r\n\t                found.push(assignBySequenceFound);\r\n\t            }\r\n\t            _this.logger.log(\"assignmentBySequence \" + found);\r\n\t            return Observable_1.Observable.from(found);\r\n\t        });\r\n\t    };\r\n\t    AMHRoutingService.prototype.findAssignmentsByCode = function (code) {\r\n\t        var _this = this;\r\n\t        return this.findAssignments().flatMap(function (data) {\r\n\t            var assignments = AMHRoutingService.getFromSource(data);\r\n\t            var found = [];\r\n\t            var assignByCodeFound = assignments.find(function (assignment) { return assignment.code == code; });\r\n\t            if (assignByCodeFound) {\r\n\t                found.push(assignByCodeFound);\r\n\t            }\r\n\t            _this.logger.log(\"assignmentByCode \" + found);\r\n\t            return Observable_1.Observable.from(found);\r\n\t        });\r\n\t    };\r\n\t    AMHRoutingService.prototype.findAssignmentsByBackendPK = function (pk) {\r\n\t        var _this = this;\r\n\t        return this.findAssignments().flatMap(function (data) {\r\n\t            var assignments = AMHRoutingService.getFromSource(data);\r\n\t            var found = [];\r\n\t            for (var i = 0; i < assignments.length; i++) {\r\n\t                var existingBackend = assignments[i];\r\n\t                if (existingBackend.backendPrimaryKey.code === pk.code && existingBackend.backendPrimaryKey.direction === pk.direction) {\r\n\t                    found.push(existingBackend);\r\n\t                    break;\r\n\t                }\r\n\t            }\r\n\t            _this.logger.log(\"[flatMap] returning \" + found);\r\n\t            return Observable_1.Observable.from(found);\r\n\t        });\r\n\t    };\r\n\t    AMHRoutingService.prototype.findAllCriterias = function () {\r\n\t        this.logger.log(\"returning findAllCriterias...\");\r\n\t        return this.http.get(this.config.get(\"esBackUrl\") + \"/amhreference/criteria/_search?size=1000\")\r\n\t            .map(function (res) { return res.json(); })\r\n\t            .flatMap(this.toHits)\r\n\t            .map(function (tree) { return tree_view_1.TreeNode.fromJson(tree); });\r\n\t    };\r\n\t    AMHRoutingService.prototype.saveRule = function (rule, user) {\r\n\t        var _this = this;\r\n\t        var headers = new http_1.Headers({\r\n\t            'Content-Type': 'application/json',\r\n\t            'userId': user.username,\r\n\t            'time': Date.now()\r\n\t        });\r\n\t        var options = new http_1.RequestOptions({ headers: headers });\r\n\t        var payload = JSON.stringify(rule.addAuditValue(user.username, String(Date.now())).toWriteModel());\r\n\t        this.logger.log(\" save rule sent: \" + payload);\r\n\t        return this.http.put(this.config.get(\"backUrl\") + \"/amhrouting/rules/\" + rule.code, payload, options).map(function (res) { _this.logger.log(\" from save \" + res.json()); res.json(); });\r\n\t    };\r\n\t    AMHRoutingService.prototype.createRule = function (rule, user) {\r\n\t        var _this = this;\r\n\t        var headers = new http_1.Headers({\r\n\t            'Content-Type': 'application/json',\r\n\t            'userId': user.username,\r\n\t            'time': Date.now()\r\n\t        });\r\n\t        var options = new http_1.RequestOptions({ headers: headers });\r\n\t        var payload = JSON.stringify(rule.addAuditValue(user.username, String(Date.now()), user.username, String(Date.now())).toWriteModel());\r\n\t        this.logger.log(\" create rule sent: \" + payload);\r\n\t        return this.http.post(this.config.get(\"backUrl\") + \"/amhrouting/rules/\" + rule.code, payload, options).map(function (res) { _this.logger.log(\" from create \" + res.json()); res.json(); });\r\n\t    };\r\n\t    AMHRoutingService.prototype.saveAssignment = function (assignment, user) {\r\n\t        var _this = this;\r\n\t        var headers = new http_1.Headers({\r\n\t            'Content-Type': 'application/json',\r\n\t            'userId': user.username,\r\n\t            'time': Date.now()\r\n\t        });\r\n\t        var options = new http_1.RequestOptions({ headers: headers });\r\n\t        var payload = this.assignToWriteModel(assignment, user.username, String(Date.now()));\r\n\t        this.logger.log(\" save assignment sent: \" + payload);\r\n\t        return this.http.put(this.config.get(\"backUrl\") + \"/amhrouting/assignments/\" + assignment.code, payload, options).map(function (res) { _this.logger.log(\" from save \" + res.json()); res.json(); });\r\n\t    };\r\n\t    AMHRoutingService.prototype.createAssignment = function (assignment, user) {\r\n\t        var _this = this;\r\n\t        var headers = new http_1.Headers({\r\n\t            'Content-Type': 'application/json',\r\n\t            'userId': user.username,\r\n\t            'time': Date.now()\r\n\t        });\r\n\t        var options = new http_1.RequestOptions({ headers: headers });\r\n\t        var payload = this.assignToWriteModel(assignment, user.username, String(Date.now()), user.username, String(Date.now()));\r\n\t        this.logger.log(\" create assignment sent: \" + payload);\r\n\t        return this.http.post(this.config.get(\"backUrl\") + \"/amhrouting/assignments/\" + assignment.code, payload, options).map(function (res) { _this.logger.log(\" from create \" + res.json()); return res.json(); });\r\n\t    };\r\n\t    AMHRoutingService.prototype.export = function (env, version, fileName, user) {\r\n\t        var _this = this;\r\n\t        var headers = new http_1.Headers({ 'Content-Type': 'application/json' });\r\n\t        var options = new http_1.RequestOptions({ headers: headers });\r\n\t        var payload = JSON.stringify({\r\n\t            filePath: \"useless\",\r\n\t            fileName: fileName,\r\n\t            env: env,\r\n\t            version: version,\r\n\t            \"time\": String(Date.now()),\r\n\t            \"userId\": user.username\r\n\t        }, this.replacerFor([\"userId\"]));\r\n\t        //  let payload: string = JSON.stringify(message.toWriteModel(user.username), this.replacerFor([\"userId\"]));\r\n\t        this.logger.log(\" export sent: \" + payload);\r\n\t        return this.http.post(this.config.get(\"backUrl\") + \"/amhrouting/export\", payload, options)\r\n\t            .map(function (res) {\r\n\t            _this.logger.log(\" from export \" + res.json().response);\r\n\t            return res.json();\r\n\t        });\r\n\t    };\r\n\t    AMHRoutingService.prototype.getExportedFile = function (fileName) {\r\n\t        return this.http.get(this.config.get(\"backUrl\") + \"/amhrouting/export/\" + fileName).map(function (res) { return res.json(); });\r\n\t    };\r\n\t    AMHRoutingService.prototype.import = function (filePath) {\r\n\t        var _this = this;\r\n\t        var headers = new http_1.Headers({ 'Content-Type': 'application/json' });\r\n\t        var options = new http_1.RequestOptions({ headers: headers });\r\n\t        var payload = JSON.stringify({\r\n\t            filePath: filePath\r\n\t        });\r\n\t        this.logger.log(\" import sent: \" + payload);\r\n\t        return this.http.post(this.config.get(\"backUrl\") + \"/amhrouting/import\", payload, options).map(function (res) { _this.logger.log(\" from import \" + res.json()); return res.json(); });\r\n\t    };\r\n\t    AMHRoutingService.prototype.assignToWriteModel = function (assignment, modificationUserId, modificationDate, creationUserId, creationDate) {\r\n\t        var _this = this;\r\n\t        var writeModelObj = {\r\n\t            sequence: assignment.sequence,\r\n\t            backCode: assignment.backendPrimaryKey.code,\r\n\t            backDirection: assignment.backendPrimaryKey.direction,\r\n\t            active: String(assignment.active),\r\n\t            dataOwner: assignment.dataOwner,\r\n\t            lockCode: assignment.lockCode,\r\n\t            description: assignment.description,\r\n\t            modificationUserId: modificationUserId,\r\n\t            modificationDate: modificationDate,\r\n\t            creationUserId: creationUserId,\r\n\t            creationDate: creationDate,\r\n\t            rules: []\r\n\t        };\r\n\t        var rules = assignment.rules || [];\r\n\t        rules.forEach(function (rule) {\r\n\t            var ruleWriteModel = _this.assigRuleToModel(assignment.code, rule);\r\n\t            writeModelObj.rules.push(ruleWriteModel);\r\n\t        });\r\n\t        return JSON.stringify(writeModelObj);\r\n\t    };\r\n\t    //  code: String, sequence: Long, ruleCode: String,\r\n\t    //                                    dataOwner: Option[String], lockCode: Option[String],\r\n\t    //                                    environment: Option[String] = None, //lastModification: Option[Date] = None, creationDate: Option[Date] = None,\r\n\t    //                                    createdBy: Option[String] = None, lastModifiedBy: Option[String] = None, version: Option[Long] = None\r\n\t    //  public code: string;\r\n\t    //   public dataOwner: string;\r\n\t    //   public lockCode: string;\r\n\t    //   public sequence: number;\r\n\t    //   public expression:string;\r\n\t    AMHRoutingService.prototype.assigRuleToModel = function (backendCode, assignmentRule) {\r\n\t        this.logger.log(\"assigRuleToModel with code \" + backendCode + \" assignmentRule.sequence \" + assignmentRule.sequence\r\n\t            + \" assignmentRule.code \" + assignmentRule.code + \" assignmentRule.dataOwner \" + assignmentRule.dataOwner + \" assignmentRule.lockCode \" + assignmentRule.lockCode);\r\n\t        return {\r\n\t            code: backendCode,\r\n\t            sequence: assignmentRule.sequence,\r\n\t            ruleCode: assignmentRule.code,\r\n\t            dataOwner: assignmentRule.dataOwner,\r\n\t            lockCode: assignmentRule.lockCode\r\n\t        };\r\n\t    };\r\n\t    AMHRoutingService.getFromSource = function (data) {\r\n\t        var hitArray = data['hits'].hits;\r\n\t        var resp = hitArray.map(function (s) { return s._source; });\r\n\t        return resp;\r\n\t    };\r\n\t    AMHRoutingService = __decorate([\r\n\t        core_1.Injectable(), \r\n\t        __metadata('design:paramtypes', [http_1.Http, services_1.Config, services_1.Logger])\r\n\t    ], AMHRoutingService);\r\n\t    return AMHRoutingService;\r\n\t}());\r\n\texports.AMHRoutingService = AMHRoutingService;\r\n\n\n/***/ },\n\n/***/ 1159:\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = function (namespace) {\n\t  return new Promise(function (resolve) {\n\t    __webpack_require__.e/* nsure */(17, function (require) {\n\t      if (namespace) {\n\t        resolve(__webpack_require__(1144)[namespace]);\n\t      } else {\n\t        var mod = __webpack_require__(1144);\n\t        resolve(mod.__esModule ? mod.default : mod)\n\t      }\n\t    });\n\t  });\n\t}\n\n/***/ },\n\n/***/ 921:\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = function (namespace) {\n\t  return new Promise(function (resolve) {\n\t    __webpack_require__.e/* nsure */(14, function (require) {\n\t      if (namespace) {\n\t        resolve(__webpack_require__(1145)[namespace]);\n\t      } else {\n\t        var mod = __webpack_require__(1145);\n\t        resolve(mod.__esModule ? mod.default : mod)\n\t      }\n\t    });\n\t  });\n\t}\n\n/***/ },\n\n/***/ 1160:\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = function (namespace) {\n\t  return new Promise(function (resolve) {\n\t    __webpack_require__.e/* nsure */(11, function (require) {\n\t      if (namespace) {\n\t        resolve(__webpack_require__(1146)[namespace]);\n\t      } else {\n\t        var mod = __webpack_require__(1146);\n\t        resolve(mod.__esModule ? mod.default : mod)\n\t      }\n\t    });\n\t  });\n\t}\n\n/***/ },\n\n/***/ 529:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tfunction __export(m) {\r\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n\t}\r\n\t__export(__webpack_require__(1147));\r\n\t__export(__webpack_require__(901));\r\n\n\n/***/ },\n\n/***/ 1136:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tfunction __export(m) {\r\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n\t}\r\n\t__export(__webpack_require__(1152));\r\n\t__export(__webpack_require__(917));\r\n\t__export(__webpack_require__(918));\r\n\n\n/***/ },\n\n/***/ 917:\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar TreeNode = (function () {\r\n\t    function TreeNode(searchCode, code, description, children) {\r\n\t        this.leaf = false;\r\n\t        this.expanded = true;\r\n\t        this.code = code;\r\n\t        this.searchCode = searchCode;\r\n\t        this.description = description;\r\n\t        this.children = children;\r\n\t        this.leaf = this.children == undefined || this.children.length == 0;\r\n\t    }\r\n\t    TreeNode.prototype.toggle = function () {\r\n\t        this.expanded = !this.expanded;\r\n\t    };\r\n\t    TreeNode.prototype.clone = function () {\r\n\t        var children = undefined;\r\n\t        if (this.children && this.children.length > 0) {\r\n\t            children = this.children.map(function (child) { return child.clone(); });\r\n\t            return new TreeNode(this.searchCode, this.code, this.description, children);\r\n\t        }\r\n\t        return new TreeNode(this.searchCode, this.code, this.description);\r\n\t    };\r\n\t    TreeNode.cloneTree = function (treeNodeList) {\r\n\t        return treeNodeList.map(function (node) { return node.clone(); });\r\n\t    };\r\n\t    TreeNode.fromJson = function (json) {\r\n\t        return new TreeNode(json.searchCode, json.code, json.description, json.children\r\n\t            .map(function (child) {\r\n\t            return TreeNode.fromJson(child);\r\n\t        }));\r\n\t    };\r\n\t    return TreeNode;\r\n\t}());\r\n\texports.TreeNode = TreeNode;\r\n\n\n/***/ },\n\n/***/ 1152:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar core_1 = __webpack_require__(1);\r\n\tvar common_1 = __webpack_require__(8);\r\n\t//import {Component, Directive, Input, Output, EventEmitter} from '@angular/core';\r\n\tvar tree_view_node_model_1 = __webpack_require__(917);\r\n\t// import {NgClass, ControlValueAccessor} from '@angular/common';\r\n\tvar tree_service_1 = __webpack_require__(918);\r\n\tvar di_1 = __webpack_require__(79);\r\n\tvar services_1 = __webpack_require__(38);\r\n\tvar TreeView = (function () {\r\n\t    function TreeView(treeSelectionService, logger) {\r\n\t        this.treeSelectionService = treeSelectionService;\r\n\t        this.logger = logger;\r\n\t        this.buy = new core_1.EventEmitter();\r\n\t        this.selectedNode = new tree_view_node_model_1.TreeNode(\"\", \"\", \"\");\r\n\t    }\r\n\t    TreeView.prototype.nodeSelected = function (node) {\r\n\t        this.buy.emit(node.code);\r\n\t        this.selectedNode = node;\r\n\t        this.treeSelectionService.selectionDone(this.selectedNode.code);\r\n\t        this.logger.log(\"nodeSelection emitted \" + this.selectedNode.code);\r\n\t    };\r\n\t    TreeView.prototype.selectedCode = function () {\r\n\t        this.logger.log(\"treeView::selectedCode called, returning : \" + this.selectedNode.code);\r\n\t        return this.selectedNode.code;\r\n\t    };\r\n\t    TreeView.prototype.writeNodeValue = function (v) {\r\n\t        this.logger.log(\"writeNodeValue \" + v);\r\n\t    };\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Array)\r\n\t    ], TreeView.prototype, \"nodes\", void 0);\r\n\t    TreeView = __decorate([\r\n\t        core_1.Component({\r\n\t            selector: 'tree-view',\r\n\t            template: __webpack_require__(1163),\r\n\t            directives: [TreeView, common_1.NgClass],\r\n\t            events: ['buy']\r\n\t        }), \r\n\t        __metadata('design:paramtypes', [tree_service_1.TreeSelectionService, services_1.Logger])\r\n\t    ], TreeView);\r\n\t    return TreeView;\r\n\t}());\r\n\texports.TreeView = TreeView;\r\n\tvar CUSTOM_VALUE_ACCESSOR = new core_1.Provider(common_1.NG_VALUE_ACCESSOR, { useExisting: di_1.forwardRef(function () { return TreeViewAccessor; }), multi: true });\r\n\tvar TreeViewAccessor = (function () {\r\n\t    function TreeViewAccessor(host, logger) {\r\n\t        this.host = host;\r\n\t        this.logger = logger;\r\n\t        this.onChange = function (_) { };\r\n\t        this.onTouched = function () { };\r\n\t    }\r\n\t    TreeViewAccessor.prototype.writeValue = function (value) {\r\n\t        this.logger.log(\"writing...\");\r\n\t        this.host.writeNodeValue(value);\r\n\t    };\r\n\t    TreeViewAccessor.prototype.registerOnChange = function (fn) { this.onChange = fn; };\r\n\t    TreeViewAccessor.prototype.registerOnTouched = function (fn) { this.onTouched = fn; };\r\n\t    TreeViewAccessor = __decorate([\r\n\t        core_1.Directive({\r\n\t            selector: 'tree-view',\r\n\t            host: { '(buy)': 'onChange($event)' },\r\n\t            providers: [CUSTOM_VALUE_ACCESSOR]\r\n\t        }), \r\n\t        __metadata('design:paramtypes', [TreeView, services_1.Logger])\r\n\t    ], TreeViewAccessor);\r\n\t    return TreeViewAccessor;\r\n\t}());\r\n\texports.TreeViewAccessor = TreeViewAccessor;\r\n\n\n/***/ },\n\n/***/ 1163:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"    <!--[checked]=\\\"node.checked\\\" (click)=\\\"node.check()\\\"-->\\r\\n<ul>\\r\\n  <li *ngFor=\\\"let node of nodes\\\">\\r\\n    <span *ngIf=\\\"!node.leaf\\\" ><i class=\\\"fa\\\" [ngClass] = \\\" { 'fa-caret-right' : node.expanded , 'fa-caret-down': !node.expanded} \\\"></i></span>\\r\\n    <span *ngIf=\\\"node.leaf\\\" ><input type=\\\"radio\\\" name=\\\"toto\\\" (click)=\\\"nodeSelected(node)\\\"/></span>\\r\\n    <span (click)=\\\"node.toggle()\\\">{{ node.description }}</span>\\r\\n    <div *ngIf=\\\"node.expanded\\\">\\r\\n      <!--<ul>\\r\\n        <li *ngFor=\\\"let child of node.children\\\">{{child.description}}</li>\\r\\n      </ul>-->\\r\\n      <tree-view [nodes]=\\\"node.children\\\"></tree-view>\\r\\n    </div>\\r\\n  </li>\\r\\n</ul>\"\n\n/***/ },\n\n/***/ 918:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar core_1 = __webpack_require__(30);\r\n\tvar services_1 = __webpack_require__(38);\r\n\tvar TreeSelectionService = (function () {\r\n\t    function TreeSelectionService(logger) {\r\n\t        this.logger = logger;\r\n\t    }\r\n\t    TreeSelectionService.prototype.selectionDone = function (criteriaCode) {\r\n\t        this.logger.log(\"saving selection \" + criteriaCode);\r\n\t        this.selection = criteriaCode;\r\n\t    };\r\n\t    TreeSelectionService.prototype.getSelection = function () {\r\n\t        this.logger.log(\"returning \" + this.selection);\r\n\t        return this.selection;\r\n\t    };\r\n\t    TreeSelectionService = __decorate([\r\n\t        core_1.Injectable(), \r\n\t        __metadata('design:paramtypes', [services_1.Logger])\r\n\t    ], TreeSelectionService);\r\n\t    return TreeSelectionService;\r\n\t}());\r\n\texports.TreeSelectionService = TreeSelectionService;\r\n\n\n/***/ },\n\n/***/ 1168:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar assignment_type_model_ts_1 = __webpack_require__(886);\r\n\tvar AssignmentConfig = (function () {\r\n\t    function AssignmentConfig(type, maxBackendsAllowed) {\r\n\t        this.type = type;\r\n\t        this.maxBackendsAllowed = this.calculeMaxBackendsAllowed(type, maxBackendsAllowed);\r\n\t    }\r\n\t    AssignmentConfig.prototype.calculeMaxBackendsAllowed = function (type, maxBackendsAllowed) {\r\n\t        if (maxBackendsAllowed) {\r\n\t            return maxBackendsAllowed;\r\n\t        }\r\n\t        switch (type) {\r\n\t            case assignment_type_model_ts_1.AssignType.BK_CHANNEL:\r\n\t                return 1;\r\n\t            case assignment_type_model_ts_1.AssignType.DTN_COPY:\r\n\t            case assignment_type_model_ts_1.AssignType.FEED_DTN_COPY:\r\n\t                return 1000;\r\n\t        }\r\n\t    };\r\n\t    AssignmentConfig.prototype.isTypeDifferent = function (type) {\r\n\t        return type != assignment_type_model_ts_1.AssignType[this.type];\r\n\t    };\r\n\t    AssignmentConfig.prototype.typeAsString = function () {\r\n\t        return assignment_type_model_ts_1.AssignType[this.type];\r\n\t    };\r\n\t    AssignmentConfig.prototype.showExtraFields = function () {\r\n\t        switch (this.type) {\r\n\t            case assignment_type_model_ts_1.AssignType.BK_CHANNEL:\r\n\t                return false;\r\n\t            case assignment_type_model_ts_1.AssignType.DTN_COPY:\r\n\t            case assignment_type_model_ts_1.AssignType.FEED_DTN_COPY:\r\n\t                return true;\r\n\t        }\r\n\t    };\r\n\t    return AssignmentConfig;\r\n\t}());\r\n\texports.AssignmentConfig = AssignmentConfig;\r\n\n\n/***/ },\n\n/***/ 1169:\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar AssignmentList = (function () {\r\n\t    function AssignmentList(active, code, backCode, backDirection, backName, backSequence, ruleCode, ruleExpressions, ruleSequence, environment, version) {\r\n\t        this.active = active;\r\n\t        this.code = code;\r\n\t        this.backCode = backCode;\r\n\t        this.backDirection = backDirection;\r\n\t        this.backName = backName;\r\n\t        this.backSequence = backSequence;\r\n\t        this.ruleCode = ruleCode;\r\n\t        this.ruleExpressions = ruleExpressions;\r\n\t        this.ruleSequence = ruleSequence;\r\n\t        this.environment = environment;\r\n\t        this.version = version;\r\n\t    }\r\n\t    return AssignmentList;\r\n\t}());\r\n\texports.AssignmentList = AssignmentList;\r\n\n\n/***/ },\n\n/***/ 1170:\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar AssignmentRule = (function () {\r\n\t    function AssignmentRule(code, dataOwner, lockCode, sequence, environment, version, expression) {\r\n\t        this.code = code;\r\n\t        this.dataOwner = dataOwner;\r\n\t        this.lockCode = lockCode;\r\n\t        this.sequence = sequence;\r\n\t        this.environment = environment;\r\n\t        this.version = version;\r\n\t        this.expression = expression;\r\n\t    }\r\n\t    return AssignmentRule;\r\n\t}());\r\n\texports.AssignmentRule = AssignmentRule;\r\n\n\n/***/ },\n\n/***/ 886:\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\t(function (AssignType) {\r\n\t    AssignType[AssignType[\"BK_CHANNEL\"] = 1] = \"BK_CHANNEL\";\r\n\t    AssignType[AssignType[\"DTN_COPY\"] = 2] = \"DTN_COPY\";\r\n\t    AssignType[AssignType[\"FEED_DTN_COPY\"] = 4] = \"FEED_DTN_COPY\";\r\n\t})(exports.AssignType || (exports.AssignType = {}));\r\n\tvar AssignType = exports.AssignType;\r\n\n\n/***/ },\n\n/***/ 1130:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar assignment_type_model_1 = __webpack_require__(886);\r\n\tvar AssignmentUniqueBackend = (function () {\r\n\t    function AssignmentUniqueBackend(code, direction, dataOwner, lockCode) {\r\n\t        this.code = code;\r\n\t        this.direction = direction;\r\n\t        this.dataOwner = dataOwner;\r\n\t        this.lockCode = lockCode;\r\n\t    }\r\n\t    AssignmentUniqueBackend.prototype.toWriteModel = function (type, assignmentCode, environment, version, modificationUserId, modificationDate, creationUserId, creationDate) {\r\n\t        switch (type) {\r\n\t            case assignment_type_model_1.AssignType.DTN_COPY:\r\n\t            case assignment_type_model_1.AssignType.FEED_DTN_COPY:\r\n\t                return {\r\n\t                    code: assignmentCode,\r\n\t                    backCode: this.code,\r\n\t                    backDirection: this.direction,\r\n\t                    dataOwner: this.dataOwner,\r\n\t                    lockCode: this.lockCode,\r\n\t                    environment: environment,\r\n\t                    version: version,\r\n\t                    modificationUserId: modificationUserId,\r\n\t                    modificationDate: modificationDate,\r\n\t                    creationUserId: creationUserId,\r\n\t                    creationDate: creationDate\r\n\t                };\r\n\t            default:\r\n\t                return {};\r\n\t        }\r\n\t    };\r\n\t    AssignmentUniqueBackend.fromJson = function (json) {\r\n\t        return new AssignmentUniqueBackend(json.code, json.direction, json.dataOwner, json.lockCode);\r\n\t    };\r\n\t    return AssignmentUniqueBackend;\r\n\t}());\r\n\texports.AssignmentUniqueBackend = AssignmentUniqueBackend;\r\n\n\n/***/ },\n\n/***/ 1131:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar assignment_type_model_1 = __webpack_require__(886);\r\n\tvar AssignmentUniqueRule = (function () {\r\n\t    function AssignmentUniqueRule(code, dataOwner, lockCode, sequence, expression) {\r\n\t        this.code = code;\r\n\t        this.dataOwner = dataOwner;\r\n\t        this.lockCode = lockCode;\r\n\t        this.sequence = sequence;\r\n\t        this.expression = expression;\r\n\t    }\r\n\t    AssignmentUniqueRule.prototype.toWriteModel = function (type, assignmentCode, environment, version, modificationUserId, modificationDate, creationUserId, creationDate) {\r\n\t        switch (type) {\r\n\t            case assignment_type_model_1.AssignType.BK_CHANNEL:\r\n\t            case assignment_type_model_1.AssignType.DTN_COPY:\r\n\t            case assignment_type_model_1.AssignType.FEED_DTN_COPY:\r\n\t                return {\r\n\t                    code: assignmentCode,\r\n\t                    sequence: this.sequence,\r\n\t                    ruleCode: this.code,\r\n\t                    dataOwner: this.dataOwner,\r\n\t                    lockCode: this.lockCode,\r\n\t                    environment: environment,\r\n\t                    version: version,\r\n\t                    modificationUserId: modificationUserId,\r\n\t                    modificationDate: modificationDate,\r\n\t                    creationUserId: creationUserId,\r\n\t                    creationDate: creationDate\r\n\t                };\r\n\t        }\r\n\t    };\r\n\t    AssignmentUniqueRule.fromJson = function (json) {\r\n\t        return new AssignmentUniqueRule(json.code, json.dataOwner, json.lockCode, json.sequence, json.expression);\r\n\t    };\r\n\t    return AssignmentUniqueRule;\r\n\t}());\r\n\texports.AssignmentUniqueRule = AssignmentUniqueRule;\r\n\n\n/***/ },\n\n/***/ 1171:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar assignment_unique_backend_model_1 = __webpack_require__(1130);\r\n\tvar assignment_unique_rule_model_1 = __webpack_require__(1131);\r\n\tvar assignment_type_model_1 = __webpack_require__(886);\r\n\tvar AssignmentUnique = (function () {\r\n\t    function AssignmentUnique(active, backendPrimaryKey, code, dataOwner, description, lockCode, sequence, copies, name, environment, version, rules, backends) {\r\n\t        this.active = active;\r\n\t        this.backendPrimaryKey = backendPrimaryKey;\r\n\t        this.code = code;\r\n\t        this.dataOwner = dataOwner;\r\n\t        this.description = description;\r\n\t        this.lockCode = lockCode;\r\n\t        this.sequence = sequence || undefined;\r\n\t        this.copies = copies || undefined;\r\n\t        this.name = name;\r\n\t        this.environment = environment;\r\n\t        this.version = version;\r\n\t        this.rules = rules || [];\r\n\t        this.backends = backends || [];\r\n\t    }\r\n\t    AssignmentUnique.prototype.backendCodeList = function () {\r\n\t        return this.backendPrimaryKey ? [this.backendPrimaryKey.code] : this.backends.map(function (backend) { return backend.code; });\r\n\t    };\r\n\t    AssignmentUnique.prototype.toWriteModel = function (type, environment, version, modificationUserId, modificationDate, creationUserId, creationDate) {\r\n\t        var _this = this;\r\n\t        var rules = this.rules || [];\r\n\t        rules = rules.map(function (rule) { return rule.toWriteModel(type, _this.code, environment, version, modificationUserId, modificationDate, creationUserId, creationDate); });\r\n\t        var backends = this.backends || [];\r\n\t        backends = backends.map(function (backend) { return backend.toWriteModel(type, _this.code, environment, version, modificationUserId, modificationDate, creationUserId, creationDate); });\r\n\t        var writeModelObj = {\r\n\t            sequence: this.sequence,\r\n\t            active: String(this.active),\r\n\t            dataOwner: this.dataOwner,\r\n\t            lockCode: this.lockCode,\r\n\t            description: this.description,\r\n\t            environment: environment,\r\n\t            version: version,\r\n\t            rules: rules,\r\n\t            modificationUserId: modificationUserId,\r\n\t            modificationDate: modificationDate,\r\n\t            creationUserId: creationUserId,\r\n\t            creationDate: creationDate\r\n\t        };\r\n\t        switch (type) {\r\n\t            case assignment_type_model_1.AssignType.BK_CHANNEL:\r\n\t                writeModelObj[\"backCode\"] = this.backendPrimaryKey.code;\r\n\t                writeModelObj[\"backDirection\"] = this.backendPrimaryKey.direction;\r\n\t                break;\r\n\t            case assignment_type_model_1.AssignType.DTN_COPY:\r\n\t            case assignment_type_model_1.AssignType.FEED_DTN_COPY:\r\n\t                writeModelObj[\"copies\"] = this.copies;\r\n\t                writeModelObj[\"name\"] = this.name;\r\n\t                writeModelObj[\"backends\"] = backends;\r\n\t                break;\r\n\t        }\r\n\t        return writeModelObj;\r\n\t    };\r\n\t    AssignmentUnique.fromJson = function (json) {\r\n\t        var rules = json.rules || [];\r\n\t        var backends = json.backends || [];\r\n\t        return new AssignmentUnique(json.active, json.backendPrimaryKey, json.code, json.dataOwner, json.description, json.lockCode, json.sequence, json.copies, json.name, json.environment, json.version, rules.map(function (rule) { return assignment_unique_rule_model_1.AssignmentUniqueRule.fromJson(rule); }), backends.map(function (backend) { return assignment_unique_backend_model_1.AssignmentUniqueBackend.fromJson(backend); }));\r\n\t    };\r\n\t    return AssignmentUnique;\r\n\t}());\r\n\texports.AssignmentUnique = AssignmentUnique;\r\n\n\n/***/ },\n\n/***/ 1172:\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Assignment = (function () {\r\n\t    function Assignment(active, backendPrimaryKey, code, dataOwner, description, lockCode, sequence, environment, version, rules) {\r\n\t        this.active = active;\r\n\t        this.backendPrimaryKey = backendPrimaryKey;\r\n\t        this.code = code;\r\n\t        this.dataOwner = dataOwner;\r\n\t        this.description = description;\r\n\t        this.lockCode = lockCode;\r\n\t        this.sequence = sequence;\r\n\t        this.environment = environment;\r\n\t        this.version = version;\r\n\t        this.rules = rules || [];\r\n\t    }\r\n\t    return Assignment;\r\n\t}());\r\n\texports.Assignment = Assignment;\r\n\n\n/***/ },\n\n/***/ 1173:\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar BackendPK = (function () {\r\n\t    function BackendPK(code, direction) {\r\n\t        this.code = code;\r\n\t        this.direction = direction;\r\n\t    }\r\n\t    BackendPK.hashPK = function (pk) {\r\n\t        return pk.code.toString() + \"@\" + pk.direction.toString();\r\n\t    };\r\n\t    BackendPK.hash = function (code, direction) {\r\n\t        return code.toString() + \"@\" + direction.toString();\r\n\t    };\r\n\t    return BackendPK;\r\n\t}());\r\n\texports.BackendPK = BackendPK;\r\n\n\n/***/ },\n\n/***/ 1174:\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Backend = (function () {\r\n\t    function Backend(pkCode, pkDirection, code, dataOwner, description, lockCode, name) {\r\n\t        this.pkCode = pkCode;\r\n\t        this.pkDirection = pkDirection;\r\n\t        this.code = code;\r\n\t        this.dataOwner = dataOwner;\r\n\t        this.description = description;\r\n\t        this.lockCode = lockCode;\r\n\t        this.name = name;\r\n\t    }\r\n\t    return Backend;\r\n\t}());\r\n\texports.Backend = Backend;\r\n\n\n/***/ },\n\n/***/ 880:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tfunction __export(m) {\r\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n\t}\r\n\t__export(__webpack_require__(1170));\r\n\t__export(__webpack_require__(1172));\r\n\t__export(__webpack_require__(1169));\r\n\t__export(__webpack_require__(1173));\r\n\t__export(__webpack_require__(1174));\r\n\t__export(__webpack_require__(1176));\r\n\t__export(__webpack_require__(1171));\r\n\t__export(__webpack_require__(1131));\r\n\t__export(__webpack_require__(1130));\r\n\t__export(__webpack_require__(886));\r\n\t__export(__webpack_require__(1168));\r\n\t__export(__webpack_require__(1175));\r\n\n\n/***/ },\n\n/***/ 1175:\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\t(function (RuleAssignType) {\r\n\t    RuleAssignType[RuleAssignType[\"ALL\"] = 1] = \"ALL\";\r\n\t    RuleAssignType[RuleAssignType[\"ASSIGNED\"] = 2] = \"ASSIGNED\";\r\n\t    RuleAssignType[RuleAssignType[\"UNASSIGNED\"] = 4] = \"UNASSIGNED\";\r\n\t})(exports.RuleAssignType || (exports.RuleAssignType = {}));\r\n\tvar RuleAssignType = exports.RuleAssignType;\r\n\n\n/***/ },\n\n/***/ 1176:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar audit_1 = __webpack_require__(542);\r\n\tvar AMHRule = (function (_super) {\r\n\t    __extends(AMHRule, _super);\r\n\t    function AMHRule(code, expression, dataOwner, lockCode, type, environment, version) {\r\n\t        _super.call(this);\r\n\t        //UI fields\r\n\t        this.selected = false;\r\n\t        this.code = code;\r\n\t        this.dataOwner = dataOwner;\r\n\t        this.expression = expression;\r\n\t        this.lockCode = lockCode;\r\n\t        this.type = type;\r\n\t    }\r\n\t    AMHRule.prototype.toWriteModel = function () {\r\n\t        return {\r\n\t            expression: this.expression,\r\n\t            dataOwner: this.dataOwner,\r\n\t            lockCode: this.lockCode,\r\n\t            ruleType: this.type,\r\n\t            environment: this.environment,\r\n\t            version: this.version,\r\n\t            modificationUserId: this.modificationUserId,\r\n\t            modificationDate: this.modificationDate,\r\n\t            creationUserId: this.creationUserId,\r\n\t            creationDate: this.creationDate\r\n\t        };\r\n\t    };\r\n\t    ;\r\n\t    AMHRule.prototype.setEnvAndVersion = function (environment, version) {\r\n\t        this.environment = environment;\r\n\t        this.version = version;\r\n\t    };\r\n\t    AMHRule.prototype.cloneWithUpperCaseCode = function () {\r\n\t        return new AMHRule(this.code.toUpperCase(), this.expression, this.dataOwner, this.lockCode, this.type, this.environment, this.version);\r\n\t    };\r\n\t    AMHRule.fromJson = function (json) {\r\n\t        return new AMHRule(json.code, json.expression, json.dataOwner, json.lockCode, json.type, json.environment, json.version);\r\n\t    };\r\n\t    return AMHRule;\r\n\t}(audit_1.BaseAudit));\r\n\texports.AMHRule = AMHRule;\r\n\n\n/***/ },\n\n/***/ 927:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tfunction __export(m) {\r\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n\t}\r\n\t__export(__webpack_require__(1155));\r\n\t__export(__webpack_require__(1156));\r\n\t__export(__webpack_require__(1154));\r\n\n\n/***/ },\n\n/***/ 1154:\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar SimulationJob = (function () {\r\n\t    function SimulationJob(id, user, creationDate, startDate, endDate, status, numOfMessages, fileName, comment, params, output, outputAsArray, jobLauncherSystem) {\r\n\t        if (jobLauncherSystem === void 0) { jobLauncherSystem = SimulationJob.AMH_SYSTEM_ID; }\r\n\t        this.id = id;\r\n\t        this.user = user;\r\n\t        this.creationDate = creationDate;\r\n\t        this.startDate = startDate;\r\n\t        this.endDate = endDate;\r\n\t        this.status = status;\r\n\t        this.numOfMessages = numOfMessages;\r\n\t        this.fileName = fileName;\r\n\t        this.comment = comment;\r\n\t        this.params = params;\r\n\t        this.output = output;\r\n\t        this.outputAsArray = outputAsArray;\r\n\t        this.jobLauncherSystem = jobLauncherSystem;\r\n\t    }\r\n\t    SimulationJob.fromJson = function (json) {\r\n\t        return new SimulationJob(json.id, json.user, json.creationDate, json.startDate, json.endDate, json.status, json.numOfMessages, json.fileName, json.comment, json.params, json.output, json.outputAsArray, json.jobLauncherSystem);\r\n\t    };\r\n\t    SimulationJob.prototype.toWriteModel = function (status) {\r\n\t        if (status === void 0) { status = 1; }\r\n\t        var isUserArray = Array.isArray(this.user);\r\n\t        //isUserArray ? this.user[0] : this.user,\r\n\t        return {\r\n\t            user: this.user,\r\n\t            status: this.status || status,\r\n\t            numOfMessages: this.numOfMessages,\r\n\t            jobLauncher: this.jobLauncherSystem,\r\n\t            params: this.params\r\n\t        };\r\n\t    };\r\n\t    SimulationJob.SAA_SYSTEM_ID = 1;\r\n\t    SimulationJob.AMH_SYSTEM_ID = 2;\r\n\t    return SimulationJob;\r\n\t}());\r\n\texports.SimulationJob = SimulationJob;\r\n\n\n/***/ },\n\n/***/ 1155:\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Message = (function () {\r\n\t    function Message(id, name, content, group, itemMap, messages, groupCount) {\r\n\t        this.id = id;\r\n\t        this.name = name;\r\n\t        this.content = content;\r\n\t        this.group = group;\r\n\t        this.groupCount = groupCount;\r\n\t        this.itemMap = itemMap;\r\n\t        this.messages = messages;\r\n\t    }\r\n\t    //  static objToString (obj) {\r\n\t    //     var tabjson=[];\r\n\t    //     for (var p in obj) {\r\n\t    //         if (obj.hasOwnProperty(p)) {\r\n\t    //             tabjson.push('\"'+p +'\"'+ ':' + obj[p]);\r\n\t    //         }\r\n\t    //     }  tabjson.push()\r\n\t    //     return '{'+tabjson.join(',')+'}';\r\n\t    // }\r\n\t    //  static toString(value : any) : string {\r\n\t    //     if (value ) {\r\n\t    //       if (value.isArray && value.length > 0) {\r\n\t    //         return value[0];\r\n\t    //       }\r\n\t    //       if (value.isArray && value.length == 0) {\r\n\t    //         return \"\";\r\n\t    //       }\r\n\t    //       return value;\r\n\t    //     }\r\n\t    //     return \"\";\r\n\t    //   }\r\n\t    Message.prototype.toWriteModel = function (username) {\r\n\t        return {\r\n\t            \"userId\": username,\r\n\t            \"creationDate\": new String(Date.now()),\r\n\t            \"fileName\": this.name,\r\n\t            \"content\": this.content,\r\n\t            \"group\": this.group\r\n\t        };\r\n\t    };\r\n\t    return Message;\r\n\t}());\r\n\texports.Message = Message;\r\n\tfunction getItem(field, itemMap) {\r\n\t    return itemMap.get(field);\r\n\t}\r\n\texports.getItem = getItem;\r\n\n\n/***/ },\n\n/***/ 1156:\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar SimulationResult = (function () {\r\n\t    function SimulationResult(selectionSequence, selectionCode, ruleSequence, ruleName, ruleExpression, backendSequence, backendName, selectionType, messageReference) {\r\n\t        this.selectionSequence = selectionSequence;\r\n\t        this.selectionCode = selectionCode;\r\n\t        this.ruleSequence = ruleSequence;\r\n\t        this.ruleName = ruleName;\r\n\t        this.ruleExpression = ruleExpression;\r\n\t        this.backendSequence = backendSequence;\r\n\t        this.backendName = backendName;\r\n\t        this.selectionType = selectionType;\r\n\t        this.messageReference = messageReference;\r\n\t    }\r\n\t    SimulationResult.prototype.toWriteModel = function () {\r\n\t        return { \"fileName\": this.messageNameHit,\r\n\t            \"selectionSequence\": this.selectionSequence,\r\n\t            \"selectionCode\": this.selectionCode,\r\n\t            \"ruleSequence\": this.ruleSequence,\r\n\t            \"ruleName\": this.ruleName,\r\n\t            \"ruleExpression\": this.ruleExpression,\r\n\t            \"backendSequences\": \"\",\r\n\t            \"backendNames\": this.backendName,\r\n\t            \"selectionType\": this.selectionType,\r\n\t            \"messageReference\": this.messageReference\r\n\t        };\r\n\t    };\r\n\t    SimulationResult.prototype.clone = function () {\r\n\t        var newSimuResult = new SimulationResult(this.selectionSequence, this.selectionCode, this.ruleSequence, this.ruleName, this.ruleExpression, this.backendSequence, this.backendName, this.selectionType, this.messageReference);\r\n\t        newSimuResult.messageNameHit = this.messageNameHit;\r\n\t        newSimuResult.messageName = this.messageName;\r\n\t        newSimuResult.hit = this.hit;\r\n\t        newSimuResult.withError = this.withError;\r\n\t        newSimuResult.errorMsg = this.errorMsg;\r\n\t        return newSimuResult;\r\n\t    };\r\n\t    return SimulationResult;\r\n\t}());\r\n\texports.SimulationResult = SimulationResult;\r\n\n\n/***/ }\n\n});\n\n\n// WEBPACK FOOTER //\n// 2.04e3ae8bbd9e09b2ea90.chunk.js","module.exports = function (namespace) {\n  return new Promise(function (resolve) {\n    require.ensure([], function (require) {\n      if (namespace) {\n        resolve(require(\"!!C:\\\\dev\\\\projects\\\\angular\\\\groupaxis\\\\01-RELEASE-v1.0\\\\node_modules\\\\awesome-typescript-loader\\\\dist.babel\\\\entry.js!C:\\\\dev\\\\projects\\\\angular\\\\groupaxis\\\\01-RELEASE-v1.0\\\\src\\\\app\\\\amh-routing\\\\amh-assignment-list\\\\index.ts\")[namespace]);\n      } else {\n        var mod = require(\"!!C:\\\\dev\\\\projects\\\\angular\\\\groupaxis\\\\01-RELEASE-v1.0\\\\node_modules\\\\awesome-typescript-loader\\\\dist.babel\\\\entry.js!C:\\\\dev\\\\projects\\\\angular\\\\groupaxis\\\\01-RELEASE-v1.0\\\\src\\\\app\\\\amh-routing\\\\amh-assignment-list\\\\index.ts\");\n        resolve(mod.__esModule ? mod.default : mod)\n      }\n    });\n  });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es6-promise-loader!./src/app/amh-routing/amh-assignment-list/index.ts\n// module id = 1157\n// module chunks = 2 8 9 10 12 13","module.exports = function (namespace) {\n  return new Promise(function (resolve) {\n    require.ensure([], function (require) {\n      if (namespace) {\n        resolve(require(\"!!C:\\\\dev\\\\projects\\\\angular\\\\groupaxis\\\\01-RELEASE-v1.0\\\\node_modules\\\\awesome-typescript-loader\\\\dist.babel\\\\entry.js!C:\\\\dev\\\\projects\\\\angular\\\\groupaxis\\\\01-RELEASE-v1.0\\\\src\\\\app\\\\amh-routing\\\\amh-assignment\\\\index.ts\")[namespace]);\n      } else {\n        var mod = require(\"!!C:\\\\dev\\\\projects\\\\angular\\\\groupaxis\\\\01-RELEASE-v1.0\\\\node_modules\\\\awesome-typescript-loader\\\\dist.babel\\\\entry.js!C:\\\\dev\\\\projects\\\\angular\\\\groupaxis\\\\01-RELEASE-v1.0\\\\src\\\\app\\\\amh-routing\\\\amh-assignment\\\\index.ts\");\n        resolve(mod.__esModule ? mod.default : mod)\n      }\n    });\n  });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es6-promise-loader!./src/app/amh-routing/amh-assignment/index.ts\n// module id = 919\n// module chunks = 2 8 9 10 12 13","module.exports = function (namespace) {\n  return new Promise(function (resolve) {\n    require.ensure([], function (require) {\n      if (namespace) {\n        resolve(require(\"!!C:\\\\dev\\\\projects\\\\angular\\\\groupaxis\\\\01-RELEASE-v1.0\\\\node_modules\\\\awesome-typescript-loader\\\\dist.babel\\\\entry.js!C:\\\\dev\\\\projects\\\\angular\\\\groupaxis\\\\01-RELEASE-v1.0\\\\src\\\\app\\\\amh-routing\\\\amh-export-import\\\\index.ts\")[namespace]);\n      } else {\n        var mod = require(\"!!C:\\\\dev\\\\projects\\\\angular\\\\groupaxis\\\\01-RELEASE-v1.0\\\\node_modules\\\\awesome-typescript-loader\\\\dist.babel\\\\entry.js!C:\\\\dev\\\\projects\\\\angular\\\\groupaxis\\\\01-RELEASE-v1.0\\\\src\\\\app\\\\amh-routing\\\\amh-export-import\\\\index.ts\");\n        resolve(mod.__esModule ? mod.default : mod)\n      }\n    });\n  });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es6-promise-loader!./src/app/amh-routing/amh-export-import/index.ts\n// module id = 920\n// module chunks = 2 8 9 10 12 13","module.exports = function (namespace) {\n  return new Promise(function (resolve) {\n    require.ensure([], function (require) {\n      if (namespace) {\n        resolve(require(\"!!C:\\\\dev\\\\projects\\\\angular\\\\groupaxis\\\\01-RELEASE-v1.0\\\\node_modules\\\\awesome-typescript-loader\\\\dist.babel\\\\entry.js!C:\\\\dev\\\\projects\\\\angular\\\\groupaxis\\\\01-RELEASE-v1.0\\\\src\\\\app\\\\amh-routing\\\\amh-home\\\\index.ts\")[namespace]);\n      } else {\n        var mod = require(\"!!C:\\\\dev\\\\projects\\\\angular\\\\groupaxis\\\\01-RELEASE-v1.0\\\\node_modules\\\\awesome-typescript-loader\\\\dist.babel\\\\entry.js!C:\\\\dev\\\\projects\\\\angular\\\\groupaxis\\\\01-RELEASE-v1.0\\\\src\\\\app\\\\amh-routing\\\\amh-home\\\\index.ts\");\n        resolve(mod.__esModule ? mod.default : mod)\n      }\n    });\n  });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es6-promise-loader!./src/app/amh-routing/amh-home/index.ts\n// module id = 1158\n// module chunks = 2 8 9 10 12 13","import {Component} from 'angular2/core';\r\nimport {ROUTER_DIRECTIVES, RouteConfig, RouteParams} from 'angular2/router';\r\n\r\n//console.log('`AMHRouting` component loaded asynchronously');\r\n\r\n@Component({\r\n  selector: 'amh-routing',\r\n//   styles: [`\r\n//     h1 {\r\n//       font-family: Arial, Helvetica, sans-serif\r\n//     }\r\n//   `],\r\n  directives: [ROUTER_DIRECTIVES],\r\n  template: `\r\n    <router-outlet></router-outlet>\r\n  `\r\n})\r\n@RouteConfig([\r\n  { path: '/', name: 'AMHHome', loader: () => require('es6-promise!./amh-home')('AMHHome'), useAsDefault: true },\r\n  { path: '/assignment-list', name: 'AMHAssignmentList', loader: () => require('es6-promise!./amh-assignment-list')('AMHAssignmentList') },\r\n  { path: '/assignment/create', name: 'AMHAssignmentCreate', loader: () => require('es6-promise!./amh-assignment')('AMHAssignmentComponent') },\r\n  { path: '/assignment/edit', name: 'AMHAssignmentEdit', loader: () => require('es6-promise!./amh-assignment')('AMHAssignmentComponent') },  \r\n  { path: '/rule/create', name: 'AMHRuleCreate', loader: () => require('es6-promise!./amh-rule')('AMHRuleComponent') },\r\n  { path: '/rule/:code/edit', name: 'AMHRuleEdit', loader: () => require('es6-promise!./amh-rule')('AMHRuleComponent') },\r\n  { path: '/export', name: 'AMHExport', loader: () => require('es6-promise!./amh-export-import')('AMHExportImportComponent') },\r\n  { path: '/import', name: 'AMHImport', loader: () => require('es6-promise!./amh-export-import')('AMHExportImportComponent') },\r\n  { path: '/simulation', name: 'AMHSimulation', loader: () => require('es6-promise!./amh-simulator')('AMHSimulatorComponent') },\r\n  { path: '/rule-overview', name: 'AMHRuleOverview', loader: () => require('es6-promise!./amh-rule-overview')('AMHRuleOverviewComponent') }\r\n])\r\nexport class AMHRouting {\r\n  constructor() {\r\n  }\r\n\r\n  ngOnInit() {\r\n    // console.log('hello `AMH Routing` component');\r\n    // static data that is bundled\r\n    // var mockData = require('assets/mock-data/mock-data.json');\r\n    // console.log('mockData', mockData);\r\n    // if you're working with mock data you can also use http.get('assets/mock-data/mock-data.json')\r\n    // this.asyncDataWithWebpack();\r\n  }\r\n  asyncDataWithWebpack() {\r\n    // you can also async load mock data with 'es6-promise-loader'\r\n    // you would do this if you don't want the mock-data bundled\r\n    // remember that 'es6-promise-loader' is a promise\r\n    // var asyncMockDataPromiseFactory = require('es6-promise!assets/mock-data/mock-data.json');\r\n    // setTimeout(() => {\r\n    //\r\n    //   let asyncDataPromise = asyncMockDataPromiseFactory();\r\n    //   asyncDataPromise.then(json => {\r\n    //     console.log('async mockData', json);\r\n    //   });\r\n    //\r\n    // });\r\n  }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/amh-routing/amh-routing.component.ts","import { Headers, RequestOptions, Http } from 'angular2/http';\r\nimport { Injectable } from 'angular2/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Assignment, AssignmentRule, AssignmentList, AMHRule, Backend, BackendPK, AssignType } from '../models/routing-amh';\r\nimport { SimulationJob, SimulationResult } from '../models/simulation';\r\nimport { Message } from '../models/simulation';\r\nimport { User } from '../models/users';\r\nimport { Option } from '../models/referential/option';\r\nimport { TreeNode } from '../common/components/ui/widgets/tree-view';\r\nimport { Elastic4js, Config, Logger } from '../common/components/services';\r\nimport { pegjs } from '../../platform/browser';\r\n\r\n@Injectable()\r\nexport class AMHRoutingService {\r\n  private query: string = ` \r\n    {\r\n  \"query\": {\r\n    \"bool\": {\r\n      \"should\": [\r\n        {\r\n          \"match\": {\r\n            \"name\": {\r\n              \"query\": \"##TO_REPLACE##\",\r\n              \"analyzer\": \"id_analyzer\",\r\n              \"operator\": \"and\"\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    }\r\n  },\r\n  \"from\": 0,\r\n  \"size\": 1000,\r\n  \"sort\": [\r\n    {\r\n      \"name\": {\r\n        \"order\": \"asc\"\r\n      }\r\n    }\r\n  ]\r\n}\r\n  `;\r\n\r\n  private findMessageByNameQuery(name: string): string {\r\n    return \"{\" + Elastic4js.query(\r\n      Elastic4js.bool([\r\n        Elastic4js.should([\r\n          Elastic4js.match(\"name\", name)\r\n        ])\r\n      ])\r\n    ) + \"}\";\r\n  }\r\n\r\n  private findMessagesByGroupQuery(groupNames: Array<string>): string {\r\n    return \"{\" + Elastic4js.query(\r\n      Elastic4js.bool([\r\n        Elastic4js.should(\r\n          groupNames.map(groupName => {\r\n            return Elastic4js.match(\"group\", groupName);\r\n          })\r\n        )\r\n      ])\r\n    ) + \"}\";\r\n  }\r\n\r\n  constructor(private http: Http, private config: Config, private logger: Logger) {\r\n    this.logger.log(\" retrieving config\");\r\n    this.logger.log(\"simulationBackUrl value: \" + config.get('simulationBackUrl'));\r\n  }\r\n\r\n  findAssignmentByID(productID: string): Observable<any> {\r\n    return this.http.get('/products/${productID}').map(res => res.json());\r\n  }\r\n\r\n  //TODO: \r\n  /*\r\n   *  + remove limit size=100 for all http request, use pagination instead  \r\n  */\r\n\r\n  findAssignments(): Observable<any> {\r\n    return this.http.post(this.config.get(\"esBackUrl\") + \"/amhrouting/assignments/_search?size=1000\", '{\"sort\": [{\"sequence\": {\"order\": \"asc\"}}]}').map(res => res.json());\r\n  }\r\n\r\n  findRuleByCode(code: string): Observable<any> {\r\n    this.logger.log(\">> looking for \" + code);\r\n    let found = new AMHRule(\"\", \"\");\r\n    return this.findRules().flatMap(\r\n      (data) => {\r\n        let rule = AMHRoutingService.getFromSource(data).find(r => {\r\n          return r.code.toLowerCase() == (code ? code.toLocaleLowerCase() : '');\r\n        });\r\n        this.logger.log(\">> elastic return  \" + rule);\r\n        if (rule) {\r\n          return Observable.create(observer => {\r\n            observer.next(rule);\r\n            observer.complete();\r\n            // Any cleanup logic might go here\r\n            return () => this.logger.log('disposed found')\r\n          });\r\n        } else {\r\n          return Observable.create(observer => {\r\n            observer.next(new AMHRule(\"\", \"\"));\r\n            this.logger.log(\"returning to observer code=empty\");\r\n            observer.complete();\r\n            // Any cleanup logic might go here\r\n            return () => this.logger.log('disposed not found')\r\n          });\r\n        }\r\n      }\r\n    );\r\n    // return Observable.from(this.findAMHRuleByCode(code));\r\n  }\r\n\r\n  findRules(): Observable<any> {\r\n    return this.http.get(this.config.get(\"esBackUrl\") + \"/amhrouting/rules/_search?size=1000\").map(res => res.json());\r\n  }\r\n\r\n  findMessages(): Observable<any> {\r\n    return this.http.get(this.config.get(\"esBackUrl\") + \"/messages/amh/_search?size=1000\")\r\n      .map(res => res.json())\r\n      .flatMap(this.toHits);\r\n  }\r\n\r\n  findGroupMessages(): Observable<any> {\r\n    return this.http.get(this.config.get(\"esBackUrl\") + \"/messages/group/_search?size=100000\")\r\n      .map(res => res.json())\r\n      .flatMap(this.toHits);\r\n  }\r\n\r\n  findMessage(messageId: string): Observable<Message> {\r\n    return this.http.get(this.config.get(\"esBackUrl\") + \"/messages/amh/\" + messageId)\r\n      .map(res => res.json())\r\n      .map(res => res._source);\r\n  }\r\n\r\n  private replacerFor(fields: Array<string>): (key: string, value: any) => any {\r\n\r\n    let replacer =\r\n      function (key: string, value: any): any {\r\n        fields.forEach(field => {\r\n          if (value && value[field]) {\r\n            //this.logger.log(\" [replacer] instanceof \" + (value[field] instanceof Array));\r\n            if (value[field] instanceof Array) {\r\n              value[field] = value[field][0];\r\n            } else {\r\n              // this.logger.log(field + \"  [replacer] is not array\");\r\n            }\r\n          }\r\n        });\r\n\r\n        return value;\r\n      };\r\n\r\n    return replacer;\r\n  }\r\n\r\n  // replacer(key: any, value: any) : any {\r\n  //   if ( value && value[\"userId\"] ) {\r\n  //     this.logger.log(\" instanceof \"+(value[\"userId\"] instanceof Array));\r\n  //     if ( value[\"userId\"] instanceof Array ) {\r\n  //        value[\"userId\"] = value[\"userId\"][0];\r\n  //     } else {\r\n  //       this.logger.log(\" userId is not array\");\r\n  //     }\r\n  //   }\r\n  //   return value;\r\n  // } \r\n\r\n  saveMessage(message: Message, user: User): Observable<any> {\r\n    let headers = new Headers({ 'Content-Type': 'application/json' });\r\n    let options = new RequestOptions({ headers: headers });\r\n\r\n\r\n    let payload: string = JSON.stringify(message.toWriteModel(user.username), this.replacerFor([\"userId\"]));\r\n    // let payload : string = this.convertToText(message.toWriteModel(user.username));\r\n    this.logger.log(\" save message  sent: \" + payload);\r\n    return this.http.put(this.config.get(\"simulationBackUrl\") + \"/messages/amh/\" + message.id, payload, options).map(res => { this.logger.log(\" from message save \" + res.json()); res.json(); })\r\n  }\r\n\r\n  createMessage(message: Message, user: User): Observable<any> {\r\n    let headers = new Headers({ 'Content-Type': 'application/json' });\r\n    let options = new RequestOptions({ headers: headers });\r\n\r\n    let payload: string = JSON.stringify(message.toWriteModel(user.username), this.replacerFor([\"userId\"]));\r\n    this.logger.log(\" create message sent: \" + payload);\r\n    return this.http.post(this.config.get(\"simulationBackUrl\") + \"/messages/amh\", payload, options).map(res => { this.logger.log(\" from message create \" + res.json()); res.json(); })\r\n  }\r\n\r\n  deleteMessages(ids: Array<string>, user: User, groupId?: string): Observable<any> {\r\n    let headers = new Headers(\r\n      {\r\n        'Content-Type': 'application/json',\r\n        'userId': user.username,\r\n        'time': Date.now(),\r\n        'groupId': groupId,\r\n        'ids': ids.join(\";\")\r\n      });\r\n    let options = new RequestOptions({ headers: headers });\r\n\r\n    return this.http.delete(this.config.get(\"simulationBackUrl\") + \"/messages/amh\", options).map(res => { this.logger.log(\" from message delete \" + res.json()); res.json(); })\r\n  }\r\n\r\n  findMessageMatches(text?: string): Observable<Array<Message>> {\r\n    return this.findMessageMatchesJson(text)\r\n      .flatMap(this.toHits)\r\n      .reduce((acc, R) => { acc.push(R); return acc; }, new Array<Message>());\r\n  }\r\n\r\n  findMessageByName(name: string): Observable<any> {\r\n    let payload = this.findMessageByNameQuery(name);\r\n    return this.http.post(this.config.get(\"esBackUrl\") + \"/messages/amh/_search\", payload)\r\n      .map(res => res.json())\r\n      .flatMap(this.toFoundHits)\r\n      .map(resp => {\r\n        if (resp.found) {\r\n          let message = resp.hits.find(hit => hit.name.toLowerCase() == name.toLowerCase());\r\n          if (message) {\r\n            return { \"found\": true, \"message\": message };\r\n          }\r\n        }\r\n        return { \"found\": false };\r\n      });\r\n  }\r\n\r\n  loadFlatGroupMessages(groupNames: Array<string> = [], indexName: string = \"messages/group\"): Observable<any> {\r\n    if (groupNames.length == 0) {\r\n      // console.debug(\"returning found false\");\r\n      return Observable.from([{ \"found\": false }]);\r\n    }\r\n\r\n    let payload = this.findMessagesByGroupQuery(groupNames);\r\n\r\n    return this.http.post(this.config.get(\"esBackUrl\") + \"/\" + indexName + \"/_search?size=200000\", payload)\r\n      .map(res => res.json())\r\n      .flatMap(this.toFoundHits)\r\n      .map(resp => { return resp.found ? { \"found\": true, \"messages\": resp.hits } : { \"found\": false }; });\r\n\r\n  }\r\n\r\n  loadGroupMessages(groupNames: Array<string> = [], indexName: string = \"messages/group\"): Observable<any> {\r\n    let payload = groupNames.length > 0 ? this.findMessagesByGroupQuery(groupNames) : \"{}\";\r\n\r\n    return this.http.post(this.config.get(\"esBackUrl\") + \"/\" + indexName + \"/_search?size=200000\", payload)\r\n      .map(res => res.json())\r\n      .flatMap(this.toFoundHits)\r\n      .map(resp => {\r\n        if (resp.found) {\r\n          let messages = resp.hits.reduce(function (mapped, current) {\r\n\r\n            if (mapped.get(current.group) == undefined) {\r\n              mapped = mapped.set(current.group, [current]);\r\n            } else {\r\n              //   console.debug(\"current.group \"+current.group+ \" != undefined actual size \"+mapped.get(current.group));\r\n              mapped.get(current.group).push(current);\r\n            }\r\n            //console.debug(\"mapped [\"+current.group+\"] =\"+mapped.get(current.group));  \r\n            return mapped;\r\n          }, new Map<string, any[]>());\r\n          return { \"found\": true, \"messages\": messages };\r\n        }\r\n\r\n        return { \"found\": false };\r\n      });\r\n\r\n  }\r\n\r\n  //TODO: check how to pass 'this' in the context to user this.logger instead of console\r\n  private toFoundHits(match): Observable<any> {\r\n    let totalHits = match.hits.total;\r\n    //console.debug(\"totalHits : \"+totalHits);\r\n    if (totalHits > 0) {\r\n      let hits = match['hits'].hits.map(hit => hit[\"_source\"]);\r\n      //console.debug(\"from  \"+ JSON.stringify(hits));\r\n      return Observable.from([{ \"found\": true, \"hits\": hits }]);\r\n    } else {\r\n      //console.debug(\"returning empty hits[] \");\r\n      return Observable.from([{ \"found\": false, \"hits\": [] }]);\r\n    }\r\n  }\r\n\r\n  private findMessageMatchesJson(text?: string): Observable<any> {\r\n    if (text && text.length > 1) { //BUGFIX- show all messages when no filter text\r\n      let payload = this.query.replace(/##TO_REPLACE##/g, text);\r\n      //this.logger.debug(\"findPointMatches payload \"+ payload);\r\n      return this.http.post(this.config.get(\"esBackUrl\") + \"/messages/amh/_search?size=1000\", payload).map(res => res.json());\r\n    } else {\r\n      return this.http.post(this.config.get(\"esBackUrl\") + \"/messages/amh/_search?size=100\", '{\"sort\": [{\"name\": {\"order\": \"asc\"}}]}').map(res => res.json());\r\n    }\r\n\r\n  }\r\n\r\n\r\n  findJobs(user: User, launcherId : number,  instantLimit?: number, jobStatus?: number): Observable<SimulationJob> {\r\n    let headers = new Headers(\r\n      {\r\n        'Content-Type': 'application/json',\r\n        'userId': user.username,\r\n        'time': Date.now(),\r\n        'job_status': jobStatus,\r\n        'job_threshold': instantLimit,\r\n        'job_launcher': launcherId\r\n      });\r\n    let options = new RequestOptions({ headers: headers });\r\n    return this.http.get(this.config.get(\"simulationBackUrl\") + \"/jobs/amh/users/\" + user.username, options)\r\n      .map(res => res.json())\r\n      .flatMap(res => {\r\n        let cjobs: Array<SimulationJob> = res.jobs\r\n          .map(job => {\r\n            let s: SimulationJob = SimulationJob.fromJson(job);\r\n            return s;\r\n          });\r\n        return cjobs;\r\n      });\r\n  }\r\n\r\n  createJob(job: SimulationJob, user: User): Observable<any> {\r\n    let headers = new Headers(\r\n      {\r\n        'Content-Type': 'application/json',\r\n        'userId': user.username,\r\n        'time': Date.now()\r\n      });\r\n    let options = new RequestOptions({ headers: headers });\r\n    let payload = JSON.stringify(job.toWriteModel(), this.replacerFor([\"user\"]));\r\n    return this.http.post(this.config.get(\"simulationBackUrl\") + \"/jobs/amh\", payload, options)\r\n      .map(res => res.json());\r\n  }\r\n\r\n  cancelJob(jobId: number, user: User): Observable<any> {\r\n    let headers = new Headers(\r\n      {\r\n        'Content-Type': 'application/json',\r\n        'userId': user.username,\r\n        'time': Date.now()\r\n      });\r\n    let options = new RequestOptions({ headers: headers });\r\n    //let payload = JSON.stringify(job.toWriteModel());\r\n    return this.http.delete(this.config.get(\"simulationBackUrl\") + \"/jobs/amh/\" + jobId, options)\r\n      .map(res => res.json());\r\n  }\r\n\r\n  reExecuteJob(jobId: number, user: User): Observable<any> {\r\n    let headers = new Headers(\r\n      {\r\n        'Content-Type': 'application/json',\r\n        'userId': user.username,\r\n        'time': Date.now()\r\n      });\r\n    let options = new RequestOptions({ headers: headers });\r\n    let payload = JSON.stringify({});\r\n    return this.http.put(this.config.get(\"simulationBackUrl\") + \"/jobs/amh/\" + jobId, payload, options)\r\n      .map(res => res.json());\r\n  }\r\n\r\n  exportJobResults(jobId: number, user: User): Observable<any> {\r\n    let headers = new Headers(\r\n      {\r\n        'Content-Type': 'application/json',\r\n        'userId': user.username,\r\n        'time': Date.now()\r\n      });\r\n    let options = new RequestOptions({ headers: headers });\r\n    let payload = JSON.stringify({});\r\n    return this.http.post(this.config.get(\"simulationBackUrl\") + \"/jobs/amh/export/\" + jobId, payload, options)\r\n      .map(res => res.json());\r\n  }\r\n\r\n  loadAMHRuleGrammar(fileName: string): Observable<any> {\r\n    return this.http.get(this.config.get(\"simulationBackUrl\") + \"/jobs/amh/export/\" + fileName)\r\n      .map(data => data.text())\r\n      .map(fileContent => {\r\n        let methodName = (typeof pegjs.generate === 'function') ? 'generate' : 'buildParser';\r\n        try {\r\n          return pegjs[methodName](fileContent);\r\n        } catch (e) {\r\n          console.error(e.message);\r\n        }\r\n      });\r\n  }\r\n\r\n  exportSimulationResults(results: Array<SimulationResult>, user: User) {\r\n    /*\r\n    Hit(fileName : String, selectionSequence : Long, selectionCode : String,\r\n               ruleSequence : Long, ruleName : String, ruleExpression : String,\r\n               backendSequences : String, backendNames : String) {\r\n    */\r\n    let headers = new Headers(\r\n      {\r\n        'Content-Type': 'application/json',\r\n        'userId': user.username,\r\n        'time': Date.now()\r\n      });\r\n    let options = new RequestOptions({ headers: headers });\r\n\r\n    let hits = results.map(res => res.toWriteModel())\r\n    let payload = JSON.stringify(hits);\r\n    return this.http.post(this.config.get(\"simulationBackUrl\") + \"/jobs/amh/export\", payload, options)\r\n      .map(res => res.json());\r\n\r\n  }\r\n\r\n  private toHits(match): Observable<any> {\r\n    return Observable.from(match['hits'].hits)\r\n      .map(hit => hit[\"_source\"])\r\n  }\r\n\r\n  findBackends(): Observable<any> {\r\n    this.logger.log(\"findBackends url = \" + this.config.get(\"esBackUrl\"));\r\n    return this.http.get(this.config.get(\"esBackUrl\") + \"/amhrouting/backends/_search?size=1000\").map(res => res.json());\r\n  }\r\n\r\n\r\n  findAssignmentsBySequence(sequence: number): Observable<any> {\r\n    return this.findAssignments().flatMap(\r\n      (data) => {\r\n        let assignments = AMHRoutingService.getFromSource(data);\r\n        let found = [];\r\n        let assignBySequenceFound = assignments.find(assignment => assignment.sequence == sequence);\r\n        if (assignBySequenceFound) {\r\n          found.push(assignBySequenceFound);\r\n        }\r\n        this.logger.log(\"assignmentBySequence \" + found);\r\n        return Observable.from(found);\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n  findAssignmentsByCode(code: string): Observable<any> {\r\n    return this.findAssignments().flatMap(\r\n      (data) => {\r\n        let assignments = AMHRoutingService.getFromSource(data);\r\n        let found = [];\r\n        let assignByCodeFound = assignments.find(assignment => assignment.code == code);\r\n        if (assignByCodeFound) {\r\n          found.push(assignByCodeFound);\r\n        }\r\n        this.logger.log(\"assignmentByCode \" + found);\r\n        return Observable.from(found);\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n  findAssignmentsByBackendPK(pk: BackendPK): Observable<any> {\r\n    return this.findAssignments().flatMap(\r\n      (data) => {\r\n        let assignments = AMHRoutingService.getFromSource(data);\r\n        let found = [];\r\n        for (var i = 0; i < assignments.length; i++) {\r\n          var existingBackend = assignments[i];\r\n          if (existingBackend.backendPrimaryKey.code === pk.code && existingBackend.backendPrimaryKey.direction === pk.direction) {\r\n            found.push(existingBackend);\r\n            break;\r\n          }\r\n        }\r\n        this.logger.log(\"[flatMap] returning \" + found);\r\n        return Observable.from(found);\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n  findAllCriterias(): Observable<TreeNode> {\r\n    this.logger.log(\"returning findAllCriterias...\");\r\n    return this.http.get(this.config.get(\"esBackUrl\") + \"/amhreference/criteria/_search?size=1000\")\r\n      .map(res => res.json())\r\n      .flatMap(this.toHits)\r\n      .map(tree => TreeNode.fromJson(tree));\r\n\r\n  }\r\n\r\n  saveRule(rule: AMHRule, user: User): Observable<any> {\r\n    let headers = new Headers({\r\n      'Content-Type': 'application/json',\r\n      'userId': user.username,\r\n      'time': Date.now()\r\n    });\r\n    let options = new RequestOptions({ headers: headers });\r\n\r\n    let payload: string = JSON.stringify(rule.addAuditValue(user.username, String(Date.now())).toWriteModel());\r\n    this.logger.log(\" save rule sent: \" + payload);\r\n    return this.http.put(this.config.get(\"backUrl\") + \"/amhrouting/rules/\" + rule.code, payload, options).map(res => { this.logger.log(\" from save \" + res.json()); res.json(); })\r\n  }\r\n\r\n  createRule(rule: AMHRule, user: User): Observable<any> {\r\n    let headers = new Headers({\r\n      'Content-Type': 'application/json',\r\n      'userId': user.username,\r\n      'time': Date.now()\r\n    });\r\n    let options = new RequestOptions({ headers: headers });\r\n\r\n    let payload: string = JSON.stringify(rule.addAuditValue(user.username, String(Date.now()), user.username, String(Date.now())).toWriteModel());\r\n    this.logger.log(\" create rule sent: \" + payload);\r\n    return this.http.post(this.config.get(\"backUrl\") + \"/amhrouting/rules/\" + rule.code, payload, options).map(res => { this.logger.log(\" from create \" + res.json()); res.json(); })\r\n  }\r\n\r\n  saveAssignment(assignment: Assignment, user: User): Observable<any> {\r\n    let headers = new Headers({\r\n      'Content-Type': 'application/json',\r\n      'userId': user.username,\r\n      'time': Date.now()\r\n    });\r\n    let options = new RequestOptions({ headers: headers });\r\n\r\n    let payload: string = this.assignToWriteModel(assignment, user.username, String(Date.now()));\r\n    this.logger.log(\" save assignment sent: \" + payload);\r\n    return this.http.put(this.config.get(\"backUrl\") + \"/amhrouting/assignments/\" + assignment.code, payload, options).map(res => { this.logger.log(\" from save \" + res.json()); res.json(); })\r\n  }\r\n\r\n  createAssignment(assignment: Assignment, user: User): Observable<any> {\r\n    let headers = new Headers({\r\n      'Content-Type': 'application/json',\r\n      'userId': user.username,\r\n      'time': Date.now()\r\n    });\r\n    let options = new RequestOptions({ headers: headers });\r\n\r\n    let payload: string = this.assignToWriteModel(assignment, user.username, String(Date.now()), user.username, String(Date.now()));\r\n    this.logger.log(\" create assignment sent: \" + payload);\r\n    return this.http.post(this.config.get(\"backUrl\") + \"/amhrouting/assignments/\" + assignment.code, payload, options).map(res => { this.logger.log(\" from create \" + res.json()); return res.json(); })\r\n  }\r\n\r\n  export(env: string, version: string, fileName: string, user: User): Observable<any> {\r\n    let headers = new Headers({ 'Content-Type': 'application/json' });\r\n    let options = new RequestOptions({ headers: headers });\r\n\r\n    let payload: string = JSON.stringify({\r\n      filePath: \"useless\",\r\n      fileName: fileName,\r\n      env: env,\r\n      version: version,\r\n      \"time\": String(Date.now()),\r\n      \"userId\": user.username\r\n    }, this.replacerFor([\"userId\"]));\r\n    //  let payload: string = JSON.stringify(message.toWriteModel(user.username), this.replacerFor([\"userId\"]));\r\n    this.logger.log(\" export sent: \" + payload);\r\n    return this.http.post(this.config.get(\"backUrl\") + \"/amhrouting/export\", payload, options)\r\n      .map(res => {\r\n        this.logger.log(\" from export \" + res.json().response);\r\n        return res.json();\r\n      });\r\n  }\r\n\r\n  getExportedFile(fileName: string): Observable<any> {\r\n    return this.http.get(this.config.get(\"backUrl\") + \"/amhrouting/export/\" + fileName).map(res => res.json());\r\n  }\r\n\r\n  import(filePath: string): Observable<any> {\r\n    let headers = new Headers({ 'Content-Type': 'application/json' });\r\n    let options = new RequestOptions({ headers: headers });\r\n\r\n    let payload: string = JSON.stringify({\r\n      filePath: filePath\r\n    });\r\n    this.logger.log(\" import sent: \" + payload);\r\n    return this.http.post(this.config.get(\"backUrl\") + \"/amhrouting/import\", payload, options).map(res => { this.logger.log(\" from import \" + res.json()); return res.json(); })\r\n  }\r\n\r\n  private assignToWriteModel(assignment: Assignment, modificationUserId: string, modificationDate: string, creationUserId?: string, creationDate?: string): string {\r\n\r\n    let writeModelObj = {\r\n      sequence: assignment.sequence,\r\n      backCode: assignment.backendPrimaryKey.code,\r\n      backDirection: assignment.backendPrimaryKey.direction,\r\n      active: String(assignment.active),\r\n      dataOwner: assignment.dataOwner,\r\n      lockCode: assignment.lockCode,\r\n      description: assignment.description,\r\n      modificationUserId: modificationUserId,\r\n      modificationDate: modificationDate,\r\n      creationUserId: creationUserId,\r\n      creationDate: creationDate,\r\n      rules: []\r\n    };\r\n\r\n    let rules = assignment.rules || [];\r\n    rules.forEach(rule => {\r\n      let ruleWriteModel = this.assigRuleToModel(assignment.code, rule);\r\n      writeModelObj.rules.push(ruleWriteModel);\r\n    });\r\n\r\n    return JSON.stringify(writeModelObj);\r\n  }\r\n\r\n  //  code: String, sequence: Long, ruleCode: String,\r\n  //                                    dataOwner: Option[String], lockCode: Option[String],\r\n  //                                    environment: Option[String] = None, //lastModification: Option[Date] = None, creationDate: Option[Date] = None,\r\n  //                                    createdBy: Option[String] = None, lastModifiedBy: Option[String] = None, version: Option[Long] = None\r\n\r\n\r\n  //  public code: string;\r\n  //   public dataOwner: string;\r\n  //   public lockCode: string;\r\n  //   public sequence: number;\r\n  //   public expression:string;\r\n\r\n  private assigRuleToModel(backendCode: string, assignmentRule: AssignmentRule): any {\r\n    this.logger.log(\"assigRuleToModel with code \" + backendCode + \" assignmentRule.sequence \" + assignmentRule.sequence\r\n      + \" assignmentRule.code \" + assignmentRule.code + \" assignmentRule.dataOwner \" + assignmentRule.dataOwner + \" assignmentRule.lockCode \" + assignmentRule.lockCode);\r\n    return {\r\n      code: backendCode,\r\n      sequence: assignmentRule.sequence,\r\n      ruleCode: assignmentRule.code,\r\n      dataOwner: assignmentRule.dataOwner,\r\n      lockCode: assignmentRule.lockCode\r\n    };\r\n  }\r\n\r\n  static getFromSource(data: any): (Array<any>) {\r\n    let hitArray = data['hits'].hits;\r\n    let resp = hitArray.map(s => s._source)\r\n    return resp;\r\n  }\r\n\r\n  private criterias: Array<TreeNode> = [\r\n    new TreeNode(\"transaction\", \"Transaction\", \"Transaction\", [\r\n      new TreeNode(\"transactiondirection\", \"direction\", \"Direction\"),\r\n      new TreeNode(\"transactionreceiveraddress\", \"receiverAddress\", \"Receiver Address\"),\r\n      new TreeNode(\"transactionmessagetype\", \"messageType/code\", \"Message Type\"),\r\n      new TreeNode(\"transactionswiftparameters\", \"SwiftParameters\", \"Swift Parameters\", [\r\n        new TreeNode(\"swiftparametersrequestreference\", \"swiftParameters/requestReference\", \"Request Reference\"),\r\n        new TreeNode(\"swiftparametersservice\", \"swiftParameters/service\", \"Service\")\r\n      ]),\r\n      new TreeNode(\"transactionsenderaddress\", \"senderAddress\", \"Sender Address\"),\r\n      /*new TreeNode(\"transactionadditionalparameterslabel\",\"AdditionalParameters\",\"Additional Parameters\"),\r\n      new TreeNode(\"transactionamlstatuslabel\",\"AmlStatus\",\"Aml Status\"),\r\n      new TreeNode(\"transactionarchivedlabel\",\"Archived\",\"Archived\"),\r\n      new TreeNode(\"transactionbackendchannellabel\",\"BackendChannel\",\"Backend Channel\"),\r\n      new TreeNode(\"transactionbulkdetailslabel\",\"BulkDetails\",\"Bulk Details\"),\r\n      new TreeNode(\"transactionbulkfiletransactionlabel\",\"BulkFileTransaction\",\"Bulk File Transaction\"),\r\n      new TreeNode(\"transactionbusinessdetailslabel\",\"BusinessDetails\",\"Business Details\"),\r\n      new TreeNode(\"transactionbusinessstatuslabel\",\"BusinessStatus\",\"Business Status\"),\r\n      new TreeNode(\"transactioncommunicationparameterslabel\",\"CommunicationParameters\",\"Communication Parameters\"),\r\n      new TreeNode(\"transactioncommunicationprioritylevellabel\",\"CommunicationPriorityLevel\",\"Communication Priority Level\"),\r\n      new TreeNode(\"transactioncreationdatelabel\",\"CreationDate\",\"Creation Date\"),\r\n      new TreeNode(\"transactioncustomerdetailslabel\",\"CustomerDetails\",\"Customer Details\"),\r\n      new TreeNode(\"transactiondatedeliveredlabel\",\"DateDelivered\",\"Date Delivered\"),\r\n      new TreeNode(\"transactiondatereceivedlabel\",\"DateReceived\",\"Date Received\"),\r\n      new TreeNode(\"transactiondecisionlabel\",\"Decision\",\"Decision\"),\r\n      new TreeNode(\"transactiondecisionmakerlabel\",\"DecisionMaker\",\"Decision Maker\"),\r\n      new TreeNode(\"transactiondocumentlabel\",\"Document\",\"Document\"),\r\n      new TreeNode(\"transactionduplicatecheckoverridelabel\",\"DuplicateCheckOverride\",\"Duplicate Check Override\"),\r\n      new TreeNode(\"transactionextractedfieldslabel\",\"ExtractedFields\",\"Extracted Fields\"),\r\n      */\r\n      new TreeNode(\"transactionfinparameterslabel\", \"FINParameters/messageType\", \"FIN Parameters\"),\r\n    /*new TreeNode(\"transactionfieldextractionprofilelabel\",\"FieldExtractionProfile\",\"Field Extraction Profile\"),\r\n    new TreeNode(\"transactionfiletypeparameterslabel\",\"FileTypeParameters\",\"File Type Parameters\"),\r\n    new TreeNode(\"transactionflexfieldslabel\",\"FlexFields\",\"Flex Fields\"),\r\n    new TreeNode(\"transactionippcontrollabel\",\"IPPControl\",\"IPP control\"),\r\n    new TreeNode(\"transactionippoidlabel\",\"IPPOID\",\"IPP OID\"),\r\n    new TreeNode(\"transactioninstructionlabel\",\"Instruction\",\"Instruction\"),\r\n    new TreeNode(\"transactioninternalreferencelabel\",\"InternalReference\",\"Internal Reference\"),\r\n    new TreeNode(\"transactionlastmodificationdatelabel\",\"LastModificationDate\",\"Last Modification Date\"),\r\n    new TreeNode(\"transactionlastmodifiernamelabel\",\"LastModifierName\",\"Last Modifier Name\"),\r\n    new TreeNode(\"transactionlastupdatetimestamplabel\",\"LastUpdateTimestamp\",\"Last Update Timestamp\"),\r\n    new TreeNode(\"transactionlockcodelabel\",\"LockCode\",\"Lock Code\"),\r\n    new TreeNode(\"transactionlogicalnodelabel\",\"LogicalNode\",\"Logical Node\"),\r\n    new TreeNode(\"transactionmqinparameterslabel\",\"MQInParameters\",\"MQ In Parameters\"),\r\n    new TreeNode(\"transactionmqoutparameterslabel\",\"MQOutParameters\",\"MQ Out Parameters\"),\r\n    new TreeNode(\"transactionmessagecategorylabel\",\"MessageCategory\",\"Message Category\"),\r\n    new TreeNode(\"transactionmessageformatlabel\",\"MessageFormat\",\"Message Format\"),\r\n    new TreeNode(\"transactionmessagereferencelabel\",\"MessageReference\",\"Message Reference\"),\r\n    new TreeNode(\"transactionmessagetypelabel\",\"MessageType\",\"Message Type\"),\r\n    new TreeNode(\"transactionnetworkchannellabel\",\"NetworkChannel\",\"Network Channel\"),\r\n    new TreeNode(\"transactionnetworkprioritylabel\",\"NetworkPriority\",\"Network Priority\"),\r\n    */new TreeNode(\"transactionnetworkprotocollabel\", \"networkProtocol\", \"Network Protocol\"),\r\n    /*new TreeNode(\"transactionnextactivitylabel\",\"NextActivity\",\"Next Activity\"),\r\n    new TreeNode(\"transactiononlysendfinalacklabel\",\"OnlySendFinalAck\",\"Only Send Final Ack\"),\r\n    new TreeNode(\"transactionoriginatingapplicationlabel\",\"OriginatingApplication\",\"Originating Application\"),\r\n    new TreeNode(\"transactionpdeindicationlabel\",\"PDEIndication\",\"PDE Indication\"),\r\n    new TreeNode(\"transactionprocessprioritylabel\",\"ProcessPriority\",\"Process Priority\"),\r\n    new TreeNode(\"transactionprocessingchannellabel\",\"ProcessingChannel\",\"Processing Channel\"),\r\n    new TreeNode(\"transactionprocessingstatelabel\",\"ProcessingState\",\"Processing State\"),\r\n    new TreeNode(\"transactionprocessingtypelabel\",\"ProcessingType\",\"Processing Type\"),\r\n    new TreeNode(\"transactionreceiveraddresslabel\",\"ReceiverAddress\",\"Receiver Address\"),\r\n    new TreeNode(\"transactionresponsedocumentlabel\",\"ResponseDocument\",\"Response Document\"),\r\n    new TreeNode(\"transactionsecomparameterslabel\",\"SECOMParameters\",\"SECOM Parameters\"),\r\n    new TreeNode(\"transactionsixnetworkparameterslabel\",\"SIXNetworkParameters\",\"SIX Network Parameters\"),\r\n    new TreeNode(\"transactionstpenginelabel\",\"STPEngine\",\"STP Engine\"),\r\n    new TreeNode(\"transactionstpversionlabel\",\"STPVersion\",\"STP Version\"),\r\n    new TreeNode(\"transactionstpwbeventsequencelabel\",\"STPWBEventSequence\",\"STP-WB Event Sequence\"),\r\n    new TreeNode(\"transactionsanctionfilterdetaillabel\",\"SanctionFilterDetail\",\"Sanction Filter Detail\"),\r\n    new TreeNode(\"transactionsenderaddresslabel\",\"SenderAddress\",\"Sender Address\"),\r\n    new TreeNode(\"transactionstrandedlabel\",\"Stranded\",\"Stranded\"),\r\n    new TreeNode(\"transactiontestandtraininglabel\",\"TestAndTraining\",\"TestAndTraining\"),\r\n    new TreeNode(\"transactiontimertasklabel\",\"TimerTask\",\"Timer Task\"),\r\n    new TreeNode(\"transactiontransactionreferencelabel\",\"TransactionReference\",\"Transaction Reference\"),\r\n    new TreeNode(\"transactiontransactionstatuslabel\",\"TransactionStatus\",\"Transaction Status\"),\r\n    new TreeNode(\"transactiontransferreferencelabel\",\"TransferReference\",\"Transfer Reference\"),\r\n    new TreeNode(\"transactionworkflowlabel\",\"Workflow\",\"Workflow\"),\r\n    new TreeNode(\"transactionworkflowprogresslabel\",\"WorkflowProgress\",\"Workflow Progress\"),\r\n    new TreeNode(\"transactionlabel\",\"label\",\"Transaction\"),\r\n    new TreeNode(\"transactionounttotalnumberoftransactionslabel\",\"TransactionCount/TotalNumberOfTransactions\",\"Total Number Of Transactions\"),\r\n    new TreeNode(\"transactionountlabel\",\"TransactionCount\",\"Transaction Count\"),\r\n    new TreeNode(\"transactionountaudittotalnumberoftransactionslabel\",\"TransactionCountAudit/TotalNumberOfTransactions\",\"Total Number Of Transactions\"),\r\n    new TreeNode(\"transactionountauditlabel\",\"TransactionCountAudit\",\"Transaction Count Audit\"),\r\n    new TreeNode(\"transactionountgroupingcriteriatotalnumberoftransactionslabel\",\"TransactionCountGroupingCriteria/TotalNumberOfTransactions\",\"Total Number Of Transactions\"),\r\n    new TreeNode(\"transactioncountgroupingcriterialabel\",\"TransactionCountGroupingCriteria\",\"Transaction Count Grouping Criteria\"),\r\n    new TreeNode(\"transactioncountgroupingcriteriaaudittotalnumberoftransactionslabel\",\"TransactionCountGroupingCriteriaAudit/TotalNumberOfTransactions\",\"Total Number Of Transactions\"),\r\n    new TreeNode(\"transactioncountgroupingcriteriaauditlabel\",\"TransactionCountGroupingCriteriaAudit\",\"Transaction Count Grouping Criteria Audit\"),\r\n    new TreeNode(\"transactioneventcreationdatelabel\",\"TransactionEvent/CreationDate\",\"Creation Date\"),\r\n    new TreeNode(\"transactioneventeventcountlabel\",\"TransactionEvent/EventCount\",\"Event Count\")\r\n   */ ])\r\n  ];\r\n\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/amh-routing/amh-routing.service.ts","module.exports = function (namespace) {\n  return new Promise(function (resolve) {\n    require.ensure([], function (require) {\n      if (namespace) {\n        resolve(require(\"!!C:\\\\dev\\\\projects\\\\angular\\\\groupaxis\\\\01-RELEASE-v1.0\\\\node_modules\\\\awesome-typescript-loader\\\\dist.babel\\\\entry.js!C:\\\\dev\\\\projects\\\\angular\\\\groupaxis\\\\01-RELEASE-v1.0\\\\src\\\\app\\\\amh-routing\\\\amh-rule-overview\\\\index.ts\")[namespace]);\n      } else {\n        var mod = require(\"!!C:\\\\dev\\\\projects\\\\angular\\\\groupaxis\\\\01-RELEASE-v1.0\\\\node_modules\\\\awesome-typescript-loader\\\\dist.babel\\\\entry.js!C:\\\\dev\\\\projects\\\\angular\\\\groupaxis\\\\01-RELEASE-v1.0\\\\src\\\\app\\\\amh-routing\\\\amh-rule-overview\\\\index.ts\");\n        resolve(mod.__esModule ? mod.default : mod)\n      }\n    });\n  });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es6-promise-loader!./src/app/amh-routing/amh-rule-overview/index.ts\n// module id = 1159\n// module chunks = 2 8 9 10 12 13","module.exports = function (namespace) {\n  return new Promise(function (resolve) {\n    require.ensure([], function (require) {\n      if (namespace) {\n        resolve(require(\"!!C:\\\\dev\\\\projects\\\\angular\\\\groupaxis\\\\01-RELEASE-v1.0\\\\node_modules\\\\awesome-typescript-loader\\\\dist.babel\\\\entry.js!C:\\\\dev\\\\projects\\\\angular\\\\groupaxis\\\\01-RELEASE-v1.0\\\\src\\\\app\\\\amh-routing\\\\amh-rule\\\\index.ts\")[namespace]);\n      } else {\n        var mod = require(\"!!C:\\\\dev\\\\projects\\\\angular\\\\groupaxis\\\\01-RELEASE-v1.0\\\\node_modules\\\\awesome-typescript-loader\\\\dist.babel\\\\entry.js!C:\\\\dev\\\\projects\\\\angular\\\\groupaxis\\\\01-RELEASE-v1.0\\\\src\\\\app\\\\amh-routing\\\\amh-rule\\\\index.ts\");\n        resolve(mod.__esModule ? mod.default : mod)\n      }\n    });\n  });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es6-promise-loader!./src/app/amh-routing/amh-rule/index.ts\n// module id = 921\n// module chunks = 2 8 9 10 12 13","module.exports = function (namespace) {\n  return new Promise(function (resolve) {\n    require.ensure([], function (require) {\n      if (namespace) {\n        resolve(require(\"!!C:\\\\dev\\\\projects\\\\angular\\\\groupaxis\\\\01-RELEASE-v1.0\\\\node_modules\\\\awesome-typescript-loader\\\\dist.babel\\\\entry.js!C:\\\\dev\\\\projects\\\\angular\\\\groupaxis\\\\01-RELEASE-v1.0\\\\src\\\\app\\\\amh-routing\\\\amh-simulator\\\\index.ts\")[namespace]);\n      } else {\n        var mod = require(\"!!C:\\\\dev\\\\projects\\\\angular\\\\groupaxis\\\\01-RELEASE-v1.0\\\\node_modules\\\\awesome-typescript-loader\\\\dist.babel\\\\entry.js!C:\\\\dev\\\\projects\\\\angular\\\\groupaxis\\\\01-RELEASE-v1.0\\\\src\\\\app\\\\amh-routing\\\\amh-simulator\\\\index.ts\");\n        resolve(mod.__esModule ? mod.default : mod)\n      }\n    });\n  });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/es6-promise-loader!./src/app/amh-routing/amh-simulator/index.ts\n// module id = 1160\n// module chunks = 2 8 9 10 12 13","export * from './amh-routing.component';\r\nexport * from './amh-routing.service';\n\n\n// WEBPACK FOOTER //\n// ./src/app/amh-routing/index.ts","export * from './tree-view.component';\r\nexport * from './tree-view-node.model';\r\nexport * from './tree.service';\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/common/components/ui/widgets/tree-view/index.ts","\r\nexport class TreeNode {\r\n    public searchCode: string;\r\n    public code: string;\r\n    public description: string;\r\n    public leaf: boolean = false;\r\n    public children: TreeNode[];\r\n    expanded: boolean = true;\r\n\r\n\r\n    constructor(searchCode: string, code: string, description: string, children?: TreeNode[]) {\r\n        this.code = code;\r\n        this.searchCode = searchCode;\r\n        this.description = description;\r\n        this.children = children;\r\n        this.leaf = this.children == undefined || this.children.length == 0;\r\n    }\r\n\r\n    toggle() {\r\n        this.expanded = !this.expanded;\r\n    }\r\n    \r\n    clone() {\r\n        let children = undefined\r\n        if (this.children && this.children.length > 0) {\r\n            children = this.children.map(child =>  child.clone() );\r\n            return new TreeNode(this.searchCode, this.code, this.description, children);\r\n        } \r\n        \r\n        return new TreeNode(this.searchCode, this.code, this.description);\r\n    }\r\n    \r\n    static cloneTree(treeNodeList : TreeNode[]) {\r\n        return treeNodeList.map(node => node.clone() );\r\n    }\r\n\r\n    static fromJson(json : any) : TreeNode {\r\n        return new TreeNode(\r\n            json.searchCode, \r\n            json.code, \r\n            json.description, \r\n            json.children\r\n            .map(child => {\r\n                return TreeNode.fromJson(child)\r\n            } ))\r\n    }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/common/components/ui/widgets/tree-view/tree-view-node.model.ts","import {  Injectable, Provider, ContentChild, Host, Component, Directive, ElementRef, Renderer, Input, Output, EventEmitter, provide} from '@angular/core';\r\nimport { NG_VALUE_ACCESSOR, ControlValueAccessor, CORE_DIRECTIVES, NgClass, NgFormControl, NgForm, NG_VALIDATORS} from '@angular/common';\r\n//import {Component, Directive, Input, Output, EventEmitter} from '@angular/core';\r\nimport {TreeNode} from './tree-view-node.model';\r\n// import {NgClass, ControlValueAccessor} from '@angular/common';\r\nimport {TreeSelectionService} from \"./tree.service\";\r\nimport {forwardRef} from '@angular/core/src/di';\r\nimport {Logger} from \"../../../services\";\r\n\r\n\r\n@Component({\r\n    selector: 'tree-view',\r\n    template: require('./tree-view.html'),\r\n    directives: [TreeView, NgClass],\r\n    events:['buy']\r\n})\r\nexport class TreeView {\r\n    @Input() nodes: Array<TreeNode>;\r\n\r\n     buy: EventEmitter <string> = new EventEmitter<string>();\r\n\r\n    private selectedNode: TreeNode = new TreeNode(\"\", \"\", \"\");\r\n\r\n    constructor(private treeSelectionService: TreeSelectionService, private logger : Logger) {}\r\n\r\n    private nodeSelected(node: TreeNode) {\r\n        this.buy.emit(node.code);\r\n        this.selectedNode = node;\r\n        this.treeSelectionService.selectionDone(this.selectedNode.code);\r\n        this.logger.log(\"nodeSelection emitted \" + this.selectedNode.code);\r\n    }\r\n\r\n    selectedCode() {\r\n        this.logger.log(\"treeView::selectedCode called, returning : \" + this.selectedNode.code);\r\n        return this.selectedNode.code;\r\n    }\r\n    \r\n    writeNodeValue(v : string) {\r\n        this.logger.log(\"writeNodeValue \"+ v);\r\n    }\r\n}\r\n\r\nconst CUSTOM_VALUE_ACCESSOR = new Provider(NG_VALUE_ACCESSOR, {useExisting: forwardRef(() => TreeViewAccessor), multi: true});\r\n\r\n@Directive({\r\n  selector: 'tree-view',\r\n  host: {'(buy)': 'onChange($event)'},\r\n  providers: [CUSTOM_VALUE_ACCESSOR]\r\n})\r\nexport class TreeViewAccessor implements ControlValueAccessor {\r\n  onChange = (_) => {};\r\n  onTouched = () => {};\r\n      \r\n  constructor(private host: TreeView, private logger : Logger) {\r\n\r\n  }\r\n\r\n  writeValue(value: any): void {\r\n      this.logger.log(\"writing...\");\r\n    this.host.writeNodeValue(value);\r\n  }\r\n\r\n  registerOnChange(fn: (_: any) => void): void { this.onChange = fn; }\r\n  registerOnTouched(fn: () => void): void { this.onTouched = fn; }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/common/components/ui/widgets/tree-view/tree-view.component.ts","module.exports = \"    <!--[checked]=\\\"node.checked\\\" (click)=\\\"node.check()\\\"-->\\r\\n<ul>\\r\\n  <li *ngFor=\\\"let node of nodes\\\">\\r\\n    <span *ngIf=\\\"!node.leaf\\\" ><i class=\\\"fa\\\" [ngClass] = \\\" { 'fa-caret-right' : node.expanded , 'fa-caret-down': !node.expanded} \\\"></i></span>\\r\\n    <span *ngIf=\\\"node.leaf\\\" ><input type=\\\"radio\\\" name=\\\"toto\\\" (click)=\\\"nodeSelected(node)\\\"/></span>\\r\\n    <span (click)=\\\"node.toggle()\\\">{{ node.description }}</span>\\r\\n    <div *ngIf=\\\"node.expanded\\\">\\r\\n      <!--<ul>\\r\\n        <li *ngFor=\\\"let child of node.children\\\">{{child.description}}</li>\\r\\n      </ul>-->\\r\\n      <tree-view [nodes]=\\\"node.children\\\"></tree-view>\\r\\n    </div>\\r\\n  </li>\\r\\n</ul>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/common/components/ui/widgets/tree-view/tree-view.html\n// module id = 1163\n// module chunks = 2 8 9 10 12 13","import {Injectable} from 'angular2/core';\r\nimport {Logger} from \"../../../services\";\r\n\r\n@Injectable()\r\nexport class TreeSelectionService {\r\n  private selection : string;\r\n    \r\n  constructor(private logger : Logger) { }\r\n\r\n  selectionDone(criteriaCode: string) {\r\n    this.logger.log(\"saving selection \"+criteriaCode);\r\n    this.selection = criteriaCode;\r\n  }\r\n  \r\n  getSelection() {\r\n    this.logger.log(\"returning \"+ this.selection);\r\n    return this.selection;\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/common/components/ui/widgets/tree-view/tree.service.ts","import {AssignType} from './assignment-type.model.ts';\r\n\r\nexport class AssignmentConfig {\r\n  public maxBackendsAllowed: number;\r\n  public type: AssignType;\r\n  \r\n  constructor(type : AssignType, maxBackendsAllowed?: number) {\r\n    this.type = type;\r\n    this.maxBackendsAllowed = this.calculeMaxBackendsAllowed(type, maxBackendsAllowed);\r\n  }\r\n\r\n  private calculeMaxBackendsAllowed(type : AssignType, maxBackendsAllowed: number) {\r\n    if (maxBackendsAllowed) {\r\n      return maxBackendsAllowed;\r\n    }\r\n\r\n    switch (type) {\r\n      case AssignType.BK_CHANNEL:\r\n        return 1;\r\n      case AssignType.DTN_COPY:\r\n      case AssignType.FEED_DTN_COPY:\r\n        return 1000;  \r\n    }\r\n  }\r\n\r\n  public isTypeDifferent(type: string) : boolean {\r\n    return  type != AssignType[this.type];\r\n  }\r\n\r\n  public typeAsString() : string {\r\n    return AssignType[this.type];\r\n  }\r\n\r\n  public showExtraFields() : boolean {\r\n    switch (this.type) {\r\n      case AssignType.BK_CHANNEL:\r\n        return false;\r\n      case AssignType.DTN_COPY:\r\n      case AssignType.FEED_DTN_COPY:\r\n        return true;  \r\n    }\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/models/routing-amh/assignment-config.model.ts","\r\n \r\nexport class AssignmentList {\r\n  public active: boolean;\r\n  public code: string;\r\n  public backCode: string;\r\n  public backDirection: string;\r\n  public backName: string;\r\n  public backSequence: number;\r\n  public ruleCode: string;\r\n  public ruleExpressions: string;\r\n  public ruleSequence: number;\r\n  public environment: string;\r\n  public version: string;\r\n  \r\n  constructor(active: boolean, code: string, backCode: string, backDirection: string, backName: string, backSequence: number, \r\n              ruleCode: string, ruleExpressions: string, ruleSequence: number, environment : string, version : string ) {\r\n    this.active = active;\r\n    this.code = code;\r\n    this.backCode = backCode;\r\n    this.backDirection = backDirection;\r\n    this.backName = backName;\r\n    this.backSequence = backSequence;\r\n    this.ruleCode = ruleCode;\r\n    this.ruleExpressions = ruleExpressions;\r\n    this.ruleSequence  = ruleSequence;\r\n    this.environment = environment;\r\n    this.version = version;\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/models/routing-amh/assignment-list.model.ts","\r\nexport class AssignmentRule {\r\n  public code: string;\r\n  public dataOwner: string;\r\n  public lockCode: string;\r\n  public sequence: number;\r\n  public expression:string;\r\n  public environment: string;\r\n  public version: string;\r\n\r\n  constructor(code: string, dataOwner: string, lockCode: string, sequence: number,  environment: string, version: string, expression?:string) {\r\n    this.code = code;\r\n    this.dataOwner = dataOwner;\r\n    this.lockCode = lockCode;\r\n    this.sequence = sequence;\r\n    this.environment = environment;\r\n    this.version = version;\r\n    this.expression = expression;\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/models/routing-amh/assignment-rule.model.ts","\r\nexport enum AssignType {\r\n  BK_CHANNEL    = 1 << 0,\r\n  DTN_COPY      = 1 << 1,\r\n  FEED_DTN_COPY = 1 << 2\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/models/routing-amh/assignment-type.model.ts","import {AssignType} from './assignment-type.model';\r\n\r\nexport class AssignmentUniqueBackend {\r\n  public code: string;\r\n  public direction: string;\r\n  public dataOwner: string;\r\n  public lockCode: string;\r\n  \r\n  constructor(code: string, direction:string, dataOwner?: string, lockCode?: string) {\r\n    this.code = code;\r\n    this.direction = direction;\r\n    this.dataOwner = dataOwner;\r\n    this.lockCode = lockCode;\r\n  }\r\n\r\n  public toWriteModel(type: AssignType, assignmentCode: string, environment: string, version: string, modificationUserId : string,  modificationDate: string, creationUserId? : string, creationDate?: string): any {\r\n    switch (type) {\r\n      case AssignType.DTN_COPY:\r\n      case AssignType.FEED_DTN_COPY:\r\n        return {\r\n          code: assignmentCode,\r\n          backCode: this.code,\r\n          backDirection: this.direction,\r\n          dataOwner: this.dataOwner,\r\n          lockCode: this.lockCode,\r\n          environment: environment,\r\n          version: version,\r\n          modificationUserId : modificationUserId,\r\n          modificationDate : modificationDate,\r\n          creationUserId : creationUserId,\r\n          creationDate : creationDate\r\n        }\r\n        default: \r\n        return {}\r\n    }\r\n  }\r\n\r\n  public static fromJson(json : any) : AssignmentUniqueBackend {\r\n      return new AssignmentUniqueBackend(json.code, json.direction, json.dataOwner, json.lockCode); \r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/models/routing-amh/assignment-unique-backend.model.ts","import {AssignType} from './assignment-type.model';\r\n\r\nexport class AssignmentUniqueRule {\r\n  public code: string;\r\n  public dataOwner: string;\r\n  public lockCode: string;\r\n  public sequence: number;\r\n  public expression: string;\r\n //UI properties\r\n public selected : boolean;\r\n \r\n  constructor(code: string, dataOwner: string, lockCode: string, sequence: number, expression?: string) {\r\n    this.code = code;\r\n    this.dataOwner = dataOwner;\r\n    this.lockCode = lockCode;\r\n    this.sequence = sequence;\r\n    this.expression = expression;\r\n  }\r\n\r\n  public toWriteModel(type: AssignType, assignmentCode: string, environment: string, version: string, modificationUserId : string,  modificationDate: string, creationUserId? : string, creationDate?: string): any {\r\n    switch (type) {\r\n      case AssignType.BK_CHANNEL:\r\n      case AssignType.DTN_COPY:\r\n      case AssignType.FEED_DTN_COPY:\r\n        return {\r\n            code: assignmentCode,\r\n            sequence: this.sequence,\r\n            ruleCode: this.code,\r\n            dataOwner: this.dataOwner,\r\n            lockCode: this.lockCode,\r\n            environment: environment,\r\n            version: version,\r\n            modificationUserId : modificationUserId,\r\n            modificationDate : modificationDate,\r\n            creationUserId : creationUserId,\r\n            creationDate : creationDate\r\n          };\r\n    }\r\n  }\r\n\r\n  public static fromJson(json : any) : AssignmentUniqueRule {\r\n      return new AssignmentUniqueRule(json.code, json.dataOwner, json.lockCode, json.sequence, json.expression); \r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/models/routing-amh/assignment-unique-rule.model.ts","import {BackendPK} from './backend-pk.model';\r\nimport {AssignmentUniqueBackend} from './assignment-unique-backend.model';\r\nimport {AssignmentUniqueRule} from './assignment-unique-rule.model';\r\nimport {AssignType} from './assignment-type.model';\r\n\r\nexport class AssignmentUnique {\r\n  public active: boolean;\r\n  public code: string;\r\n  public backendPrimaryKey: BackendPK;\r\n  public dataOwner: string;\r\n  public description: string;\r\n  public lockCode: string;\r\n  public sequence: number;\r\n  public copies: number;\r\n  public name: string;\r\n  public environment: string;\r\n  public version: string;\r\n  public rules: Array<AssignmentUniqueRule>;\r\n  public backends: Array<AssignmentUniqueBackend>;\r\n\r\n  constructor(active?: boolean, backendPrimaryKey?: BackendPK, code?: string, dataOwner?: string, description?: string, lockCode?: string, sequence?: number, copies?: number, name?: string, environment?: string, version?: string, rules?: Array<AssignmentUniqueRule>, backends?: Array<AssignmentUniqueBackend>) {\r\n    this.active = active;\r\n    this.backendPrimaryKey = backendPrimaryKey;\r\n    this.code = code;\r\n    this.dataOwner = dataOwner;\r\n    this.description = description;\r\n    this.lockCode = lockCode;\r\n    this.sequence = sequence || undefined;\r\n    this.copies = copies || undefined;\r\n    this.name = name;\r\n    this.environment = environment;\r\n    this.version = version;\r\n    this.rules = rules || [];\r\n    this.backends = backends || [];\r\n  }\r\n\r\n  public backendCodeList() : Array<string> {\r\n    return this.backendPrimaryKey ? [this.backendPrimaryKey.code] : this.backends.map(backend => backend.code);\r\n  }\r\n\r\n  public toWriteModel(type: AssignType, environment: string, version: string, modificationUserId : string,  modificationDate: string, creationUserId? : string, creationDate?: string): any {\r\n    let rules: Array<AssignmentUniqueRule> = this.rules || [];\r\n    rules = rules.map(rule => rule.toWriteModel(type, this.code, environment, version, modificationUserId,  modificationDate, creationUserId, creationDate));\r\n    \r\n    let backends: Array<AssignmentUniqueBackend> = this.backends || [];\r\n    backends = backends.map(backend => backend.toWriteModel(type, this.code, environment, version, modificationUserId,  modificationDate, creationUserId, creationDate));\r\n\r\n    let writeModelObj = {\r\n      sequence: this.sequence,\r\n      active: String(this.active),\r\n      dataOwner: this.dataOwner,\r\n      lockCode: this.lockCode,\r\n      description: this.description,\r\n      environment: environment,\r\n      version: version,\r\n      rules: rules,\r\n      modificationUserId : modificationUserId,\r\n      modificationDate : modificationDate,\r\n      creationUserId : creationUserId,\r\n      creationDate : creationDate\r\n    };\r\n    \r\n\r\n    switch (type) {\r\n      case AssignType.BK_CHANNEL:\r\n        \r\n        writeModelObj[\"backCode\"] = this.backendPrimaryKey.code;\r\n        writeModelObj[\"backDirection\"] = this.backendPrimaryKey.direction;\r\n        break;\r\n      \r\n      case AssignType.DTN_COPY:\r\n      case AssignType.FEED_DTN_COPY:\r\n\r\n        writeModelObj[\"copies\"] = this.copies;\r\n        writeModelObj[\"name\"] = this.name;\r\n        writeModelObj[\"backends\"] = backends;\r\n        break;\r\n    }\r\n\r\n    return writeModelObj;\r\n  }\r\n\r\n  public static fromJson(json: any): AssignmentUnique {\r\n    let rules: Array<AssignmentUniqueRule> = json.rules || [];\r\n    let backends: Array<AssignmentUniqueBackend> = json.backends || [];\r\n\r\n    return new AssignmentUnique(json.active, json.backendPrimaryKey, json.code, json.dataOwner, json.description, json.lockCode, json.sequence, json.copies, json.name, json.environment, json.version,\r\n      rules.map(rule => AssignmentUniqueRule.fromJson(rule)),\r\n      backends.map(backend => AssignmentUniqueBackend.fromJson(backend)));\r\n  }\r\n \r\n  \r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/models/routing-amh/assignment-unique.model.ts","\r\nimport {BackendPK} from './backend-pk.model';\r\nimport {AssignmentRule} from './assignment-rule.model';\r\n \r\nexport class Assignment {\r\n  public active: boolean;\r\n  public backendPrimaryKey: BackendPK;\r\n  public code: string;\r\n  public dataOwner: string;\r\n  public description: string;\r\n  public lockCode: string;\r\n  public sequence: number;\r\n  public environment: string;\r\n  public version: string;\r\n  public rules: AssignmentRule[];\r\n\r\n  constructor(active?: boolean, backendPrimaryKey?: BackendPK, code?: string, dataOwner?: string, description?: string, lockCode?: string, sequence?: number, environment?: string, version?: string, rules?: AssignmentRule[]) {\r\n    this.active = active;\r\n    this.backendPrimaryKey = backendPrimaryKey;\r\n    this.code = code;\r\n    this.dataOwner = dataOwner;\r\n    this.description = description;\r\n    this.lockCode = lockCode;\r\n    this.sequence = sequence;\r\n    this.environment =environment;\r\n    this.version = version;\r\n    this.rules = rules || [];\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/models/routing-amh/assignment.model.ts","export class BackendPK {\r\n  public code: string;\r\n  public direction: string;\r\n\r\n  constructor(code: string, direction: string) {\r\n    this.code = code;\r\n    this.direction = direction;\r\n  }\r\n\r\n  static hashPK(pk: BackendPK): string {\r\n    return pk.code.toString() + \"@\" + pk.direction.toString();\r\n  }\r\n  \r\n  static hash(code: string, direction: string): string {\r\n    return code.toString() + \"@\" + direction.toString();\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/models/routing-amh/backend-pk.model.ts","import {BackendPK} from './backend-pk.model';\r\n\r\n\r\nexport class Backend {\r\n  public pkCode: string;\r\n  public pkDirection: string;\r\n  public code: string;\r\n  public name: string;\r\n  public dataOwner: string;\r\n  public description: string;\r\n  public lockCode: string;\r\n\r\n  constructor(pkCode:string, pkDirection:string, code?: string, dataOwner?: string, description?: string, lockCode?: string, name?: string) {\r\n    this.pkCode = pkCode;\r\n    this.pkDirection = pkDirection;\r\n    this.code = code;\r\n    this.dataOwner = dataOwner;\r\n    this.description = description;\r\n    this.lockCode = lockCode;\r\n    this.name = name;\r\n  }\r\n\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/models/routing-amh/backend.model.ts","\r\nexport * from './assignment-rule.model';\r\nexport * from './assignment.model';\r\nexport * from './assignment-list.model';\r\nexport * from './backend-pk.model';\r\nexport * from './backend.model';\r\nexport * from './rule.model';\r\nexport * from './assignment-unique.model';\r\nexport * from './assignment-unique-rule.model';\r\nexport * from './assignment-unique-backend.model';\r\nexport * from './assignment-type.model';\r\nexport * from './assignment-config.model';\r\nexport * from './rule-assign-type.model';\n\n\n// WEBPACK FOOTER //\n// ./src/app/models/routing-amh/index.ts","\r\nexport enum RuleAssignType {\r\n  ALL        = 1 << 0,\r\n  ASSIGNED   = 1 << 1,\r\n  UNASSIGNED = 1 << 2\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/models/routing-amh/rule-assign-type.model.ts","import {BaseAudit} from '../audit';\r\n\r\nexport class AMHRule extends BaseAudit {\r\n  public code: string;\r\n  public dataOwner: string;\r\n  public expression: string;\r\n  public lockCode: string;\r\n  public type: string;\r\n  public environment: string;\r\n  public version: string;\r\n  //UI fields\r\n  public selected: boolean = false;\r\n  \r\n constructor(code: string, expression: string, dataOwner?: string,  lockCode?: string, type?: string, environment?: string, version?: string) {\r\n   super();\r\n   this.code=code;\r\n  this.dataOwner=dataOwner;\r\n  this.expression=expression;\r\n  this.lockCode=lockCode;\r\n  this.type=type;\r\n }\r\n \r\n\r\npublic toWriteModel() : any {\r\n   return {\r\n     expression : this.expression,\r\n     dataOwner : this.dataOwner,\r\n     lockCode : this.lockCode,\r\n     ruleType: this.type,\r\n     environment: this.environment,\r\n     version: this.version,\r\n     modificationUserId : this.modificationUserId,\r\n     modificationDate: this.modificationDate, \r\n     creationUserId : this.creationUserId,\r\n    creationDate: this.creationDate \r\n    }\r\n  };\r\n\r\n public setEnvAndVersion(environment: string, version: string) {\r\n    this.environment = environment;\r\n    this.version = version;\r\n  }\r\n\r\n  public cloneWithUpperCaseCode() : AMHRule {\r\n    return new AMHRule(this.code.toUpperCase(), this.expression, this.dataOwner,  this.lockCode, this.type, this.environment, this.version);\r\n  }\r\n\r\n  public static fromJson(json : any) : AMHRule {\r\n      return new AMHRule(json.code, json.expression, json.dataOwner, json.lockCode, json.type, json.environment, json.version); \r\n  }\r\n\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/models/routing-amh/rule.model.ts","export * from './message.model';\r\nexport * from './result.model';\r\nexport * from './job.model';\n\n\n// WEBPACK FOOTER //\n// ./src/app/models/simulation/index.ts","export class SimulationJob {\r\n    public id : number;\r\n\tpublic user : string;\r\n\tpublic creationDate : Date;\r\n\tpublic startDate : Date;\r\n\tpublic endDate : Date;\r\n\tpublic status : number;\r\n\tpublic numOfMessages : number;\r\n    public fileName : string;\r\n    public comment : string;\r\n    public params : string;\r\n    public output : string;\r\n    public outputAsArray : Array<string>;\r\n    public jobLauncherSystem : number;\r\n\r\n    public static SAA_SYSTEM_ID = 1;\r\n    public static AMH_SYSTEM_ID = 2;\r\n\r\n    constructor(\r\n        id : number, user : string, creationDate : Date, startDate : Date, endDate : Date, status : number,\r\n        numOfMessages : number, fileName : string, comment : string, params : string, output : string, \r\n        outputAsArray? : Array<string>, jobLauncherSystem : number = SimulationJob.AMH_SYSTEM_ID) {\r\n        this.id = id;\r\n        this.user = user;\r\n        this.creationDate = creationDate;\r\n        this.startDate = startDate;\r\n        this.endDate = endDate;\r\n        this.status = status;\r\n        this.numOfMessages = numOfMessages;\r\n        this.fileName = fileName;\r\n        this.comment = comment;\r\n        this.params = params;\r\n        this.output = output;\r\n        this.outputAsArray = outputAsArray;\r\n        this.jobLauncherSystem = jobLauncherSystem;\r\n    }\r\n\r\n    public static fromJson(json : any) {\r\n        return new SimulationJob(json.id, json.user, json.creationDate, json.startDate, json.endDate, json.status,\r\n        json.numOfMessages, json.fileName, json.comment, json.params, json.output, json.outputAsArray, json.jobLauncherSystem);\r\n    }\r\n\r\n    public toWriteModel(status : number = 1) {\r\n         let isUserArray = Array.isArray(this.user);\r\n         //isUserArray ? this.user[0] : this.user,\r\n        return {\r\n            user : this.user,\r\n            status : this.status || status,\r\n            numOfMessages : this.numOfMessages,\r\n            jobLauncher : this.jobLauncherSystem,\r\n            params : this.params\r\n        }\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/models/simulation/job.model.ts","export interface IMessage {\r\n    id :string;\r\n    name : string;\r\n    content: string;\r\n    group: string;\r\n    groupCount : number;\r\n}\r\n\r\nexport class Message implements IMessage {\r\n    public id: string;\r\n    public name: string;\r\n    public content: string;\r\n    public group: string;\r\n    public groupCount: number;\r\n    public itemMap : Map<string,string>;\r\n    public messages : Array<Message>;\r\n    /* senderAddress, receiverAddress , swiftParameters_service , messageType_code, swiftParameters_requestReference */\r\n    // UI properties\r\n    public selected : boolean;\r\n    \r\n    constructor(id: string, name: string, content: string, group?: string, itemMap? : Map<string,string>, messages? : Array<Message>, groupCount?: number) {\r\n        this.id = id;\r\n        this.name = name;\r\n        this.content = content;\r\n        this.group = group;\r\n        this.groupCount = groupCount;\r\n        this.itemMap = itemMap;\r\n        this.messages = messages;\r\n    }\r\n\r\n//  static objToString (obj) {\r\n//     var tabjson=[];\r\n//     for (var p in obj) {\r\n//         if (obj.hasOwnProperty(p)) {\r\n//             tabjson.push('\"'+p +'\"'+ ':' + obj[p]);\r\n//         }\r\n//     }  tabjson.push()\r\n//     return '{'+tabjson.join(',')+'}';\r\n// }\r\n//  static toString(value : any) : string {\r\n//     if (value ) {\r\n//       if (value.isArray && value.length > 0) {\r\n//         return value[0];\r\n//       }\r\n//       if (value.isArray && value.length == 0) {\r\n//         return \"\";\r\n//       }\r\n\r\n//       return value;\r\n//     }\r\n\r\n//     return \"\";\r\n//   }\r\n\r\n    public toWriteModel(username : string) {\r\n\r\n        return {\r\n            \"userId\" : username,\r\n            \"creationDate\": new String(Date.now()),\r\n            \"fileName\": this.name,\r\n            \"content\": this.content,\r\n            \"group\": this.group\r\n        };    \r\n    }\r\n\r\n/*\r\nINSERT INTO MAPPING VALUES('senderAddress','<Saa:Sender>.*<Saa:DN>(.*)</Saa:DN>.*</Saa:Sender>',null);\r\nINSERT INTO MAPPING VALUES('receiverAddress','<Saa:Receiver>.*<Saa:DN>(.*)</Saa:DN>.*</Saa:Receiver>',null);\r\nINSERT INTO MAPPING VALUES('swiftParameters/service','<Saa:NetworkInfo>.*<Saa:Service>(.*)</Saa:Service>.*</Saa:NetworkInfo>',null);\r\nINSERT INTO MAPPING VALUES('messageType/code','<Saa:MessageIdentifier>(.*)</Saa:MessageIdentifier>',null);\r\nINSERT INTO MAPPING VALUES('swiftParameters/requestReference','<Saa:SenderReference>(.*)</Saa:SenderReference>',null);\r\n*/    \r\n\r\n}\r\n\r\nexport function getItem(field : string, itemMap : Map<string,string>) : string {\r\n    return itemMap.get(field);\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/models/simulation/message.model.ts","export class SimulationResult {\r\n    public selectionSequence : number;\r\n\tpublic selectionCode : string;\r\n\tpublic ruleSequence : number;\r\n\tpublic ruleName : string;\r\n\tpublic ruleExpression : string;\r\n\tpublic backendSequence : number;\r\n\tpublic backendName : string;\r\n    public selectionType : string;\r\n    public messageReference : string;\r\n    public hit : boolean;\r\n    public withError : boolean;\r\n    public expressionToEvaluate : string;\r\n    public errorMsg : string;\r\n    public paramsSize : number;\r\n    public messageName : string;\r\n    public messageNameHit : string;\r\n    public status : number;\r\n    public selected : boolean;\r\n    \r\n    constructor(selectionSequence : number, selectionCode : string, ruleSequence : number, ruleName : string, ruleExpression : string,\r\n                backendSequence : number, backendName, selectionType : string, messageReference : string) {\r\n        this.selectionSequence = selectionSequence;\r\n        this.selectionCode = selectionCode;\r\n        this.ruleSequence = ruleSequence;\r\n        this.ruleName = ruleName;\r\n        this.ruleExpression = ruleExpression;\r\n        this.backendSequence = backendSequence;\r\n        this.backendName = backendName;\r\n        this.selectionType = selectionType;\r\n        this.messageReference = messageReference;\r\n    }\r\n\r\n\r\n    public toWriteModel() {\r\n       return {\"fileName\":this.messageNameHit,\r\n            \"selectionSequence\":this.selectionSequence,\r\n            \"selectionCode\":this.selectionCode,\r\n            \"ruleSequence\":this.ruleSequence,\r\n            \"ruleName\":this.ruleName,\r\n            \"ruleExpression\":this.ruleExpression,\r\n            \"backendSequences\":\"\",\r\n            \"backendNames\":this.backendName,\r\n            \"selectionType\": this.selectionType,\r\n            \"messageReference\" : this.messageReference\r\n    }\r\n    }\r\n\r\n    public clone() : SimulationResult {\r\n        let newSimuResult =  new SimulationResult(this.selectionSequence, this.selectionCode, this.ruleSequence, this.ruleName, this.ruleExpression, \r\n                    this.backendSequence, this.backendName, this.selectionType, this.messageReference);\r\n        newSimuResult.messageNameHit = this.messageNameHit;\r\n        newSimuResult.messageName = this.messageName;\r\n        newSimuResult.hit = this.hit;\r\n        newSimuResult.withError = this.withError;\r\n        newSimuResult.errorMsg = this.errorMsg;\r\n        return newSimuResult;\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/models/simulation/result.model.ts"],"sourceRoot":""}