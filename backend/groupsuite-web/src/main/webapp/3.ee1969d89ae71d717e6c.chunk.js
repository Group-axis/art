webpackJsonp([3],{903:function(e,t,n){"use strict";var r=n(14),i=n(905);r.Observable.prototype.filter=i.filter},905:function(e,t,n){"use strict";function filter(e,t){return this.lift(new s(e,t))}var r=this&&this.__extends||function(e,t){function __(){this.constructor=e}for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n]);e.prototype=null===t?Object.create(t):(__.prototype=t.prototype,new __)},i=n(70);t.filter=filter;var s=function(){function FilterOperator(e,t){this.predicate=e,this.thisArg=t}return FilterOperator.prototype.call=function(e,t){return t._subscribe(new o(e,this.predicate,this.thisArg))},FilterOperator}(),o=function(e){function FilterSubscriber(t,n,r){e.call(this,t),this.predicate=n,this.thisArg=r,this.count=0,this.predicate=n}return r(FilterSubscriber,e),FilterSubscriber.prototype._next=function(e){var t;try{t=this.predicate.call(this.thisArg,e,this.count++)}catch(e){return void this.destination.error(e)}t&&this.destination.next(e)},FilterSubscriber}(i.Subscriber)},888:function(e,t,n){"use strict";function __export(e){for(var n in e)t.hasOwnProperty(n)||(t[n]=e[n])}__export(n(1153))},1153:function(e,t){"use strict";function updateFields(e,t,n){n.forEach(function(n){return e[n]=t[n]||e[n]})}var n=function(){function ItemContainer(e,t){this.id=e,this.description=t,this.children=[]}return Object.defineProperty(ItemContainer.prototype,"htmlText",{get:function(){return this.description},enumerable:!0,configurable:!0}),ItemContainer.prototype.addChild=function(e){this.children.push(e)},ItemContainer}();t.ItemContainer=n;var r=function(){function ItemChild(e,t){this.id=e,this.description=t}return Object.defineProperty(ItemChild.prototype,"htmlText",{get:function(){return this.description},enumerable:!0,configurable:!0}),ItemChild}();t.ItemChild=r;var i=function(){function IdCodeDescription(e,t,n){this.id=e,this.code=t,this.description=n}return Object.defineProperty(IdCodeDescription.prototype,"htmlText",{get:function(){return this.description},enumerable:!0,configurable:!0}),IdCodeDescription.fromJson=function(e){var t=JSON.parse(e);return new IdCodeDescription(t.id,t.code,t.description)},IdCodeDescription.empty=function(){return new IdCodeDescription(1,"","")},IdCodeDescription.mapToProperty=function(e){return e.code},IdCodeDescription}();t.IdCodeDescription=i,t.updateFields=updateFields},525:function(e,t,n){"use strict";function __export(e){for(var n in e)t.hasOwnProperty(n)||(t[n]=e[n])}__export(n(1137)),__export(n(1135))},1137:function(e,t,n){"use strict";var r=n(30),i=n(58),s=function(){function UserAdmin(){}return UserAdmin.prototype.ngOnInit=function(){},UserAdmin=__decorate([r.Component({selector:"user-admin",directives:[i.ROUTER_DIRECTIVES],template:"\n    <router-outlet></router-outlet>\n  "}),i.RouteConfig([{path:"/",name:"UserHome",loader:function(){return n(1138)("UserHome")},useAsDefault:!0},{path:"/user-overview",name:"UserOverview",loader:function(){return n(1139)("UserOverviewComponent")}},{path:"/user/create",name:"UserCreate",loader:function(){return n(906)("UserManagementComponent")}},{path:"/user/:username/edit",name:"UserEdit",loader:function(){return n(906)("UserManagementComponent")}}]),__metadata("design:paramtypes",[])],UserAdmin)}();t.UserAdmin=s},906:function(e,t,n){e.exports=function(e){return new Promise(function(t){n.e(12,function(r){if(e)t(n(1132)[e]);else{var i=n(1132);t(i.__esModule?i.default:i)}})})}},1138:function(e,t,n){e.exports=function(e){return new Promise(function(t){n.e(21,function(r){if(e)t(n(1133)[e]);else{var i=n(1133);t(i.__esModule?i.default:i)}})})}},1139:function(e,t,n){e.exports=function(e){return new Promise(function(t){n.e(13,function(r){if(e)t(n(1134)[e]);else{var i=n(1134);t(i.__esModule?i.default:i)}})})}},1135:function(e,t,n){"use strict";var r=n(257),i=n(30),s=n(14),o=n(888),a=n(38);n(903);var u=function(){function UserService(e,t,n){this.http=e,this.config=t,this.logger=n,this.query=' \n    {\n      "fields": [\n        "active",\n        "username",\n        "firstName",\n        "lastName",\n        "profiles",\n        "email"\n      ],\n  "query": {\n    "bool": {\n      "should": [\n        {\n          "match": {\n            "username": {\n              "query": "##TO_REPLACE##",\n              "analyzer": "standard",\n              "operator": "and"\n            }\n          }\n        },\n        {\n          "match": {\n            "firstName": {\n              "query": "##TO_REPLACE##",\n              "analyzer": "standard",\n              "operator": "and"\n           }\n         }\n       },\n        {\n          "match": {\n            "lastName": {\n              "query": "##TO_REPLACE##",\n              "analyzer": "standard",\n              "operator": "and"\n           }\n         }\n       }\n\n      ]\n    }\n  },\n  "from": 0,\n  "size": 1000,\n  "sort": [\n    {\n      "username": {\n        "order": "asc"\n      }\n    },\n    {\n      "firstName": {\n        "order": "asc"\n      }\n    },\n    {\n      "lastName": {\n        "order": "asc"\n      }\n    }\n\n  ]\n}\n  ',this.userQuery='\n   {\n      "fields": [\n        "active",\n        "username",\n        "firstName",\n        "lastName",\n        "permissions",\n        "profiles",\n        "email"\n      ],\n        "filter" : {\n            "query" : {\n                "query_string" : {\n                    "query" : "##TO_REPLACE##"\n                }\n            }\n        }\n      }\n  ',this.queryAll=' \n    {\n      "fields": [\n        "active",\n        "username",\n        "firstName",\n        "lastName",\n        "profiles",\n        "email"\n      ],\n  "sort": [\n    {\n      "username": {\n        "order": "asc"\n      }\n    },\n    {\n      "firstName": {\n        "order": "asc"\n      }\n    },\n    {\n      "lastName": {\n        "order": "asc"\n      }\n    }\n\n  ]\n}\n  '}return UserService.prototype.findUserByUsername=function(e){var t=this;this.logger.debug("in findUSerByname");var n=this.userQuery.replace(/##TO_REPLACE##/g,e);return this.http.post(this.config.get("esBackUrl")+"/authentication/routingusers/_search",n).map(function(e){return e.json()}).flatMap(this.toFields).map(function(n){return t.logger.debug(" username "+e.length+" user.username "+n.username.length+" equals "+(e==n.username)),t.logger.debug(" result "+(e==n.username&&"NOT_FOUND"!==n.username)+" found by username ["+e+"] "+JSON.stringify(n)),{found:e==n.username&&"NOT_FOUND"!==n.username,value:n}})},UserService.prototype.findUserMatches=function(e){return this.findUserMatchesJson(e).flatMap(this.toFields).filter(function(e){return"system"!=e.username&&"testing"!=e.username&&"NOT_FOUND"!=e.username})},UserService.prototype.findProfiles=function(){return this.http.get(this.config.get("esBackUrl")+"/authentication/routingprofiles/_search?size=1000").map(function(e){return e.json()})},UserService.prototype.toSearchResult=function(e){var t=e.hits.total;if(0==t)return{found:!1,value:[]};var n=e.hits.hits;return{found:!0,value:n.map(function(e){return e._source})}},UserService.prototype.findAllProfiles=function(){return this.findProfiles().map(this.toSearchResult).flatMap(function(e){return e.found?s.Observable.from(e.value.map(function(e){return new o.IdCodeDescription(e.id,"N/A",e.name)})):s.Observable.from([])})},UserService.prototype.toFields=function(e){var t=e.hits.total,n={username:"NOT_FOUND"},r=t<=0?s.Observable.from([n]):s.Observable.from(e.hits.hits).map(function(e){return e.fields||n});return r.map(function(e){return e.active=e.active&&e.active[0],e})},UserService.prototype.findUserMatchesJson=function(e){if(e){var t=this.query.replace(/##TO_REPLACE##/g,e);return this.http.post(this.config.get("esBackUrl")+"/authentication/routingusers/_search?size=1000",t).map(function(e){return e.json()})}return this.http.post(this.config.get("esBackUrl")+"/authentication/routingusers/_search?size=100",this.queryAll).map(function(e){return e.json()})},UserService.prototype.replacerFor=function(e){var t=function(t,n){return e.forEach(function(e){n&&n[e]&&n[e]instanceof Array&&(n[e]=n[e][0])}),n};return t},UserService.prototype.saveUser=function(e){var t=this,n=new r.Headers;return n.append("Content-Type","application/json; charset=utf-8"),this.getPermissions(e.profiles).flatMap(function(r){var i=JSON.stringify({doc:{active:e.active,username:e.username,firstName:e.firstName,lastName:e.lastName,profiles:e.profiles,permissions:r,email:e.email}},t.replacerFor(["username"]));return t.logger.log(" save user sent: "+i),t.http.post(t.config.get("esBackUrl")+"/authentication/routingusers/"+e.username+"/_update",i,n).map(function(e){return e.json()})})},UserService.prototype.createUser=function(e){var t=this,n=new r.Headers;return n.append("Content-Type","application/json; charset=utf-8"),this.getPermissions(e.profiles).flatMap(function(r){var i=JSON.stringify({active:e.active,password:e.username,oldPassword:e.username,newPassword:"",username:e.username,firstName:e.firstName,lastName:e.lastName,profiles:e.profiles,permissions:r,email:e.email},t.replacerFor(["username"]));return t.logger.log(" create user sent: "+i),t.http.post(t.config.get("esBackUrl")+"/authentication/routingusers/"+e.username,i,n).map(function(e){return e.json()})})},UserService.prototype.updateUserAudit=function(e,t){var n=new r.Headers;n.append("Content-Type","application/json; charset=utf-8");var i=JSON.stringify({time:Date.now(),oldUserEntity:e.toAuditModel,oldUserProfiles:e.toAuditProfiles,newUserEntity:t.toAuditModel,newUserProfiles:t.toAuditProfiles});return this.http.put(this.config.get("auditBackUrl")+"/audit/user",i,n).map(function(e){return e.json()})},UserService.prototype.createUserAudit=function(e){var t=new r.Headers;t.append("Content-Type","application/json; charset=utf-8");var n=JSON.stringify({time:Date.now(),newUserEntity:e.toAuditModel,newUserProfiles:e.toAuditProfiles});return this.http.put(this.config.get("auditBackUrl")+"/audit/user",n,t).map(function(e){return e.json()})},UserService.prototype.getPermissions=function(e){var t=this;s.Observable.from([{id:1,name:"Admin",active:!0,permissions:["amh.import","amh.export","amh.modify.rule","amh.modify.assignment","user.modify","sibes.import","sibes.export","sibes.modify.rule","sibes.modify.point"]},{id:2,name:"Support",active:!0,permissions:["amh.read.only","user.read.only","sibes.read.only"]},{id:3,name:"Operation",active:!0,permissions:["amh.modify.rule","amh.modify.assignment","sibes.modify.rule","sibes.modify.point"]}]);return this.findProfiles().map(this.toSearchResult).flatMap(function(e){return e.found?s.Observable.from(e.value):s.Observable.from([])}).filter(function(n){return t.logger.debug("p=> "+JSON.stringify(n)),e.indexOf(n.id)>=0}).flatMap(function(e){return t.logger.debug("permissions=> "+JSON.stringify(e.permissions)),e.permissions}).reduce(function(e,t){return e.push(t.toString()),e},new Array)},UserService.prototype.resetPassword=function(e){var t=new r.Headers;t.append("Content-Type","application/json; charset=utf-8"),this.logger.debug("user received "+JSON.stringify(e));var n=e.resetPassword().toUpdateModel();return this.logger.debug(" updated user "+JSON.stringify(n)),this.http.post(this.config.get("esBackUrl")+"/authentication/routingusers/"+e.username,n,t).map(function(e){return e.json()})},UserService=__decorate([i.Injectable(),__metadata("design:paramtypes",[r.Http,a.Config,a.Logger])],UserService)}();t.UserService=u}});
//# sourceMappingURL=3.ee1969d89ae71d717e6c.bundle.map