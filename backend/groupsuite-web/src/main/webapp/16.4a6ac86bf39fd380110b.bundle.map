{"version":3,"sources":["webpack:///16.4a6ac86bf39fd380110b.chunk.js","webpack:///./~/angular2-datatable/datatable.js?37b7***","webpack:///./~/angular2-datatable/src/BootstrapPaginator.ts?6fb7***","webpack:///./~/angular2-datatable/src/DataTable.ts?17e5***","webpack:///./~/angular2-datatable/src/DefaultSorter.ts?cde0***","webpack:///./~/angular2-datatable/src/Paginator.ts?cb92***","webpack:///./~/rxjs/add/operator/reduce.js?2671******","webpack:///./~/rxjs/operator/reduce.js?b01b******","webpack:///./src/app/amh-routing/amh-assignment-search/amh-assignment-search.component.ts?0e7c*","webpack:///./src/app/amh-routing/amh-assignment-search/amh-assignment-search.html?3075*","webpack:///./src/app/amh-routing/amh-assignment-search/index.ts?d3fe*","webpack:///./src/app/amh-routing/amh-assignment/amh-assignment-content/amh-assignment-content.component.ts","webpack:///./src/app/amh-routing/amh-assignment/amh-assignment-content/amh-assignment-content.html","webpack:///./src/app/amh-routing/amh-assignment/amh-assignment-content/index.ts","webpack:///./src/app/amh-routing/amh-assignment/amh-assignment.component.ts","webpack:///./src/app/amh-routing/amh-assignment/amh-assignment.html","webpack:///./src/app/amh-routing/amh-assignment/index.ts","webpack:///./src/app/amh-routing/amh-backend-selection/amh-backend-selection.component.ts","webpack:///./src/app/amh-routing/amh-backend-selection/amh-backend-selection.html","webpack:///./src/app/amh-routing/amh-backend-selection/index.ts","webpack:///./src/app/amh-routing/amh-rule-selection/amh-rule-selection.component.ts","webpack:///./src/app/amh-routing/amh-rule-selection/amh-rule-selection.html","webpack:///./src/app/amh-routing/amh-rule-selection/index.ts","webpack:///./src/app/amh-routing/amh-selection-table/amh-selection-table.component.ts?01e3*","webpack:///./src/app/amh-routing/amh-selection-table/amh-selection-table.html?f1de*","webpack:///./src/app/amh-routing/amh-selection-table/index.ts?9f06*","webpack:///./src/app/amh-routing/amh-service/amh-assignment.service.ts?eeaa*","webpack:///./src/app/amh-routing/amh-service/amh-rule.service.ts?c38c*","webpack:///./src/app/amh-routing/amh-service/index.ts?2d72*","webpack:///./src/app/common/components/ui/widgets/dynamic-component/component-factory.component.ts?7341*****","webpack:///./src/app/common/components/ui/widgets/dynamic-component/index.ts?dfe7*****","webpack:///./src/app/common/components/ui/widgets/modal/alert.ts?a1b8*****","webpack:///./src/app/common/components/ui/widgets/modal/index.ts?ea19*****","webpack:///./src/app/common/components/ui/widgets/modal/modal.ts?f826*****","webpack:///./src/app/common/components/ui/widgets/modal/open.component.ts?0ed1*****","webpack:///./src/app/models/referential/option/index.ts?3a1f*","webpack:///./src/app/models/referential/option/option.model.ts?e7e5*"],"names":["webpackJsonp","900","module","exports","__webpack_require__","dataTable_directive","defaultSorter_directive","paginator_component","bootstrapPaginator_component","DataTable","DataEvent","PageEvent","SortEvent","DefaultSorter","Paginator","BootstrapPaginator","DataTableDirectives","1128","__decorate","this","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__metadata","k","v","metadata","core_1","DataTable_1","Paginator_1","_","rowsOnPageSet","minRowsOnPage","prototype","ngOnChanges","changes","min","Input","Component","selector","template","directives","878","inputData","sortBy","sortOrder","rowsOnPage","activePage","mustRecalculateData","onDataChange","EventEmitter","onSortChange","onPageChange","getSort","setSort","emit","getPage","dataLength","setPage","calculateNewActivePage","previousRowsOnPage","currentRowsOnPage","firstRowOnPage","newActivePage","Math","ceil","ngDoCheck","fillData","offset","data","orderBy","slice","Array","Directive","exportAs","1129","mfTable","_this","isSortedByMeAsc","isSortedByMeDesc","subscribe","event","sort","String","899","__param","paramIndex","decorator","injectMfTable","onPageChangeSubscriber","lastPage","inputMfTable","pageNumber","setRowsOnPage","Optional","904","Observable_1","reduce_1","Observable","reduce","922","project","seed","lift","ReduceOperator","__extends","b","__","constructor","p","hasOwnProperty","create","Subscriber_1","call","subscriber","source","_subscribe","ReduceSubscriber","_super","destination","hasValue","acc","hasSeed","_next","value","_tryReduce","result","err","error","_complete","next","complete","Subscriber","1180","amh_service_1","datatable_1","routing_amh_1","services_1","AMHAssignmentSearchComponent","amhAssignmentService","myElement","logger","assignmentType","AssignType","BK_CHANNEL","assignmentSelected","assignments","originalAssignments","bodyMargin","selectedAssignment","AssignmentUnique","selectedPkDirection","debug","JSON","stringify","oldAssignmentType","typeAsString","defaultCode","currentValue","undefined","loadAssignments","updateAssignments","selectAssignment","ngOnInit","type","loadDefaultSelection","findAssignments","resp","AMHAssignmentService","getFromSource","forEach","assignment","push","status","url","handleClick","clickedComponent","inside","nativeElement","parentNode","code","filterText","assignedAssignmentCodeMap","originalAssignmentsMinusAssignedAssignments","filter","valueToFind","toUpperCase","filteredAssignmentCode","item","match","filteredData","uniqueList","found","find","index","array","map","ViewChild","Number","Output","providers","host","(document:click)","ElementRef","Logger","1188","1181","__export","m","1225","common_1","router_1","modal_1","amh_rule_selection_1","amh_backend_selection_1","amh_assignment_search_1","directives_1","AMHAssignmentContentComponent","router","routeParams","auth","enableSaveButtons","assignmentUpdate","saveWork","rollbackSelection","creationStatus","unconfirmedAssignmentCode","assignmentSequenceErrorMsg","assignmentCopiesErrorMsg","assignmentCodeErrorMsg","isDirty","disableInputs","usedBackends","haveRulesErrors","pendingAssignmentSave","pendingNavigationConfig","selectionRollbackType","receivedAssignmentCode","params","assignmentTextFilter","BackendPK","isCreation","hasUserPermissions","hasPermission","config","confirmSelectionTableChanges","saveStatusChange","onSaveStatusOk","onSaveStatusFail","navigateTo","composentName","parameters","initialization","afterSaveNewAssignment","updateDirtyStatus","loadAssignment","actionChangeRuleStatus","rulesStatus","emitDisableEnableSaveButtons","addRule","addedRule","rules","concat","deleteRule","deletedRuleCode","addToBackendChannel","addedBackend","backendPrimaryKey","pkCode","pkDirection","addToMultiBackend","uniqueBackend","AssignmentUniqueBackend","dataOwner","lockCode","backends","addBackend","DTN_COPY","FEED_DTN_COPY","fillBackends","deleteToBackendChannel","backendCodeDeleted","deleteToMultiBackend","deleteBackend","Backend","direction","backend","confirmAssignmentChange","hasThisAssignmentErrors","sequence","doDisableInputs","doEnableInputs","findAssignmentByCode","fromJson","rule1","rule2","warn","createNewAssignment","actionCreateNewAssignment","hasAssignErros","alertPreventLostChanges","disableRuleCreation","isInteger","x","updateAssignmentUniquenessErrorMsg","findAssignmentsBySequence","updateAssignmentCodeUniquenessErrorMsg","findAssignmentsByCode","getRulesUniquenessErrorMsgs","hashRuleCode","errorMessages","rule","assignmentSequenceUpdate","inputElem","numericSeqValue","assignmentCopiesUpdate","numericCopiesValue","copies","isValidCode","rex","RegExp","test","assignmentCodeUpdate","alertLostChanges","cancelResponse","yesResponse","alert","waitIcon","alertFooter","cancelButton","cancelButtonText","cancelButtonResponse","yesButton","yesButtonText","yesButtonResponse","okButton","alertHeader","alertTitle","message","open","okResponse","okButtonText","okButtonResponse","confirmClose","withRollbackType","saveAndContinue","actionRuleNavigation","ruleCode","return_to","targetComponent","parent","navigate","actionSetDirtyTrue","Alert","AssignmentConfig","Auth","NgClass","AMHRuleSelectionComponent","AMHBackendSelectionComponent","Permissions","NotPermissions","DisablePermissions","Router","RouteParams","1262","1226","1227","option_1","menu_1","header_secondary_1","amh_assignment_content_1","amh_selection_table_1","AMHAssignmentComponent","disabledSaveButtons","returnParameters","saveStatus","confirmation","menuConfig","MenuConfig","selectionTables","Option","setReturnTo","addReturnParamter","updateSelectionTable","selectedAssignmentType","assignType","typeSelected","id","name","returnToString","split","alertOpen","closeAlert","withError","cancel","setTimeout","isValidAssigment","isValid","errorMsgs","msgEmptyRules","alertResponse","doSave","navigateUrl","save","assignmentStatus","optionRollback","defaultOption","send","createAssignment","getUser","saveAssignment","msg","closable","actionCancel","verifyAndNavigate","updateDisabledButtons","updateAssignment","option","codeToFind","innerOption","assignmentConfig","rollbackSelectionTable","rollbackCommand","actionUpdateCreationStatus","actionNavigate","link","isAssignmentStatusDirty","AMHSelectionTableComponent","HeaderSecondary","1263","1141","1228","elementRef","maxBackends","disabledParam","backendAdded","backendDeleted","originalBackends","selectedBackend","backendCodeToDelete","disabled","backendDataSource","findBackends","dynamicUpdate","select","description","calculeInputDisabled","calculeBodyMargin","existingBackends","add","confirmBackendDeletion","table","updateBackends","assignedBackendCodeMap","originalBackendsMinusAssignedBackends","filteredBackendExpresssion","filteredBackendCode","Boolean","1264","1229","1233","amh_routing_service_1","amhRoutingService","assignmentCode","existingRules","ruleAdded","ruleDeleted","statusChanged","ruleNavigate","originalRules","selectedRule","AMHRule","selectedExpression","ruleCodeToDelete","ruleErrors","Map","ruleDataSource","findRules","log","isArray","AMHRoutingService","expression","oRule","substr","AssignmentUniqueRule","set","updateRules","assignedRuleCodeMap","originalRulesMinusAssignedRules","filteredRuleExpresssion","filteredRuleCode","cloneWithUpperCaseCode","errorMsg","get","errorMessages2","ruleSequenceUpdate","oldSequence","uniquenessErrors","obj","statusToSend_1","tmpStatus_1","nonDuplicateError","indexOf","confirmRuleDeletion","actionNavigationEmit","1268","1234","1165","tableSelected","selectOption","options","1177","1166","1148","http_1","http","store","fileDownloader","environment","version","persistence","sessionStorage","getAssignmentPath","res","json","_source","post","findRuleByCode","flatMap","toLowerCase","toLocaleLowerCase","observer","assignBySequenceFound","from","assignByCodeFound","findAssignmentsByBackendPK","pk","existingBackend","replacerFor","fields","replacer","field","user","headers","Headers","Content-Type","userId","username","time","Date","now","RequestOptions","payload","toWriteModel","getCurrentEnv","getCurrentVersion","put","assignmentTypePath","hitArray","hits","s","newValue","setItem","getItem","exportOverview","downloadFile","fileNamePath","fileName","download","Injectable","Http","Config","Store","FileDownloader","1178","AMHRuleService","codeExpressionQuery","matchQuery","ruleQuery","ruleAssignTypeQuery","querySize","nested","path","query","replace","content","bool","join","must","should","notMust","e","assignedQuery","RuleAssignType","ALL","assignedText","ASSIGNED","getRuleAssignTypeQuery","getMatchQuery","text","isAllType","assignedParam","fquery","findRulesByAssignType","queryPayload","toHits","R","hit","findRuleMatches","toAssignment","findAssignmmentsByRuleCode","delete","exportRuleOverview","ruleAssignType","1164","907","createComponentFactoryOriginal","resolver","cmpClass","DynamicComponent","decoratedCmp","resolveComponent","createComponentFactory","comp","DynamicHTMLOutlet","vcRef","componentCreation","meta","then","factory","injector","ReflectiveInjector","fromResolvedProviders","parentInjector","componentCreated","createComponent","ComponentMetadata","Type","ViewContainerRef","ComponentResolver","908","909","open_component_1","dcl","_elementRef","alertMessage","isOpen","alertOutput","yes","ok","Open","encapsulation","ViewEncapsulation","None","pipes","DynamicComponentLoader","887","910","dynamic_component_1","Modal","doneSender","modalMessage","modalFooter","modalHeader","modalOutput","saveComponent","component","_hostElement","initialize","subscription","submit","close","childComponentListener","createMetadata","parameter","modalChildComponent","dispose","destroy","unsubscribe","873","isExpanded","toggle","enumerable","configurable","hide","show","display","backDrop","document","getElementsByClassName","body","removeChild","createElement","className","appendChild","HostBinding","926","1167","selected","parse","mapToProperty"],"mappings":"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","file":"16.4a6ac86bf39fd380110b.chunk.js","sourcesContent":["webpackJsonp([16],{\n\n/***/ 900:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar dataTable_directive = __webpack_require__(878);\n\tvar defaultSorter_directive = __webpack_require__(1129);\n\tvar paginator_component = __webpack_require__(899);\n\tvar bootstrapPaginator_component = __webpack_require__(1128);\n\t\n\texports.DataTable = dataTable_directive.DataTable;\n\texports.DataEvent = dataTable_directive.DataEvent;\n\texports.PageEvent = dataTable_directive.PageEvent;\n\texports.SortEvent = dataTable_directive.SortEvent;\n\texports.DefaultSorter = defaultSorter_directive.DefaultSorter;\n\texports.Paginator = paginator_component.Paginator;\n\texports.BootstrapPaginator = bootstrapPaginator_component.BootstrapPaginator;\n\t\n\texports.DataTableDirectives = [\n\t    dataTable_directive.DataTable,\n\t    defaultSorter_directive.DefaultSorter,\n\t    paginator_component.Paginator,\n\t    bootstrapPaginator_component.BootstrapPaginator\n\t];\n\n/***/ },\n\n/***/ 1128:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(1);\n\tvar DataTable_1 = __webpack_require__(878);\n\tvar Paginator_1 = __webpack_require__(899);\n\tvar _ = __webpack_require__(528);\n\tvar BootstrapPaginator = (function () {\n\t    function BootstrapPaginator() {\n\t        this.rowsOnPageSet = [];\n\t        this.minRowsOnPage = 0;\n\t    }\n\t    BootstrapPaginator.prototype.ngOnChanges = function (changes) {\n\t        if (changes.rowsOnPageSet) {\n\t            this.minRowsOnPage = _.min(this.rowsOnPageSet);\n\t        }\n\t    };\n\t    __decorate([\n\t        core_1.Input(\"rowsOnPageSet\"), \n\t        __metadata('design:type', Object)\n\t    ], BootstrapPaginator.prototype, \"rowsOnPageSet\", void 0);\n\t    __decorate([\n\t        core_1.Input(\"mfTable\"), \n\t        __metadata('design:type', DataTable_1.DataTable)\n\t    ], BootstrapPaginator.prototype, \"mfTable\", void 0);\n\t    BootstrapPaginator = __decorate([\n\t        core_1.Component({\n\t            selector: \"mfBootstrapPaginator\",\n\t            template: \"\\n    <mfPaginator #p [mfTable]=\\\"mfTable\\\">\\n        <nav class=\\\"pagination\\\" *ngIf=\\\"p.dataLength > p.rowsOnPage\\\">\\n            <li [class.disabled]=\\\"p.activePage <= 1\\\" (click)=\\\"p.setPage(1)\\\">\\n                <a style=\\\"cursor: pointer\\\">&laquo;</a>\\n            </li>\\n            <li *ngIf=\\\"p.activePage > 4 && p.activePage + 1 > p.lastPage\\\" (click)=\\\"p.setPage(p.activePage - 4)\\\">\\n                <a style=\\\"cursor: pointer\\\">{{p.activePage-4}}</a>\\n            </li>\\n            <li *ngIf=\\\"p.activePage > 3 && p.activePage + 2 > p.lastPage\\\" (click)=\\\"p.setPage(p.activePage - 3)\\\">\\n                <a style=\\\"cursor: pointer\\\">{{p.activePage-3}}</a>\\n            </li>\\n            <li *ngIf=\\\"p.activePage > 2\\\" (click)=\\\"p.setPage(p.activePage - 2)\\\">\\n                <a style=\\\"cursor: pointer\\\">{{p.activePage-2}}</a>\\n            </li>\\n            <li *ngIf=\\\"p.activePage > 1\\\" (click)=\\\"p.setPage(p.activePage - 1)\\\">\\n                <a style=\\\"cursor: pointer\\\">{{p.activePage-1}}</a>\\n            </li>\\n            <li class=\\\"active\\\">\\n                <a style=\\\"cursor: pointer\\\">{{p.activePage}}</a>\\n            </li>\\n            <li *ngIf=\\\"p.activePage + 1 <= p.lastPage\\\" (click)=\\\"p.setPage(p.activePage + 1)\\\">\\n                <a style=\\\"cursor: pointer\\\">{{p.activePage+1}}</a>\\n            </li>\\n            <li *ngIf=\\\"p.activePage + 2 <= p.lastPage\\\" (click)=\\\"p.setPage(p.activePage + 2)\\\">\\n                <a style=\\\"cursor: pointer\\\">{{p.activePage+2}}</a>\\n            </li>\\n            <li *ngIf=\\\"p.activePage + 3 <= p.lastPage && p.activePage < 3\\\" (click)=\\\"p.setPage(p.activePage + 3)\\\">\\n                <a style=\\\"cursor: pointer\\\">{{p.activePage+3}}</a>\\n            </li>\\n            <li *ngIf=\\\"p.activePage + 4 <= p.lastPage && p.activePage < 2\\\" (click)=\\\"p.setPage(p.activePage + 4)\\\">\\n                <a style=\\\"cursor: pointer\\\">{{p.activePage+4}}</a>\\n            </li>\\n            <li [class.disabled]=\\\"p.activePage >= p.lastPage\\\" (click)=\\\"p.setPage(p.lastPage)\\\">\\n                <a style=\\\"cursor: pointer\\\">&raquo;</a>\\n            </li>\\n        </nav>\\n        <nav class=\\\"pagination pull-right\\\" *ngIf=\\\"p.dataLength > minRowsOnPage\\\">\\n            <li *ngFor=\\\"let rows of rowsOnPageSet\\\" [class.active]=\\\"p.rowsOnPage===rows\\\" (click)=\\\"p.setRowsOnPage(rows)\\\">\\n                <a style=\\\"cursor: pointer\\\">{{rows}}</a>\\n            </li>\\n        </nav>\\n    </mfPaginator>\\n    \",\n\t            directives: [Paginator_1.Paginator]\n\t        }), \n\t        __metadata('design:paramtypes', [])\n\t    ], BootstrapPaginator);\n\t    return BootstrapPaginator;\n\t}());\n\texports.BootstrapPaginator = BootstrapPaginator;\n\n\n/***/ },\n\n/***/ 878:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(1);\n\tvar _ = __webpack_require__(528);\n\tvar DataTable = (function () {\n\t    function DataTable() {\n\t        this.inputData = [];\n\t        this.sortBy = \"\";\n\t        this.sortOrder = \"asc\";\n\t        this.rowsOnPage = 1000;\n\t        this.activePage = 1;\n\t        this.mustRecalculateData = false;\n\t        this.onDataChange = new core_1.EventEmitter();\n\t        this.onSortChange = new core_1.EventEmitter();\n\t        this.onPageChange = new core_1.EventEmitter();\n\t    }\n\t    DataTable.prototype.getSort = function () {\n\t        return { sortBy: this.sortBy, sortOrder: this.sortOrder };\n\t    };\n\t    DataTable.prototype.setSort = function (sortBy, sortOrder) {\n\t        if (this.sortBy !== sortBy || this.sortOrder !== sortOrder) {\n\t            this.sortBy = sortBy;\n\t            this.sortOrder = sortOrder;\n\t            this.mustRecalculateData = true;\n\t            this.onSortChange.emit({ sortBy: sortBy, sortOrder: sortOrder });\n\t        }\n\t    };\n\t    DataTable.prototype.getPage = function () {\n\t        return { activePage: this.activePage, rowsOnPage: this.rowsOnPage, dataLength: this.inputData.length };\n\t    };\n\t    DataTable.prototype.setPage = function (activePage, rowsOnPage) {\n\t        if (this.rowsOnPage !== rowsOnPage || this.activePage !== activePage) {\n\t            this.activePage = this.activePage !== activePage ? activePage : this.calculateNewActivePage(this.rowsOnPage, rowsOnPage);\n\t            this.rowsOnPage = rowsOnPage;\n\t            this.mustRecalculateData = true;\n\t            this.onPageChange.emit({ activePage: this.activePage, rowsOnPage: this.rowsOnPage, dataLength: this.inputData.length });\n\t        }\n\t    };\n\t    DataTable.prototype.calculateNewActivePage = function (previousRowsOnPage, currentRowsOnPage) {\n\t        var firstRowOnPage = (this.activePage - 1) * previousRowsOnPage + 1;\n\t        var newActivePage = Math.ceil(firstRowOnPage / currentRowsOnPage);\n\t        return newActivePage;\n\t    };\n\t    DataTable.prototype.ngOnChanges = function (changes) {\n\t        if (changes[\"inputData\"]) {\n\t            this.inputData = this.inputData || [];\n\t            this.onPageChange.emit({\n\t                activePage: this.activePage,\n\t                rowsOnPage: this.rowsOnPage,\n\t                dataLength: this.inputData.length\n\t            });\n\t            this.mustRecalculateData = true;\n\t        }\n\t    };\n\t    DataTable.prototype.ngDoCheck = function () {\n\t        if (this.mustRecalculateData) {\n\t            this.fillData();\n\t            this.mustRecalculateData = false;\n\t        }\n\t    };\n\t    DataTable.prototype.fillData = function () {\n\t        this.activePage = this.activePage;\n\t        this.rowsOnPage = this.rowsOnPage;\n\t        var offset = (this.activePage - 1) * this.rowsOnPage;\n\t        var data = this.inputData;\n\t        data = _.orderBy(data, [this.sortBy], [this.sortOrder]);\n\t        data = _.slice(data, offset, offset + this.rowsOnPage);\n\t        this.data = data;\n\t    };\n\t    __decorate([\n\t        core_1.Input(\"mfData\"), \n\t        __metadata('design:type', Array)\n\t    ], DataTable.prototype, \"inputData\", void 0);\n\t    __decorate([\n\t        core_1.Input(\"mfRowsOnPage\"), \n\t        __metadata('design:type', Object)\n\t    ], DataTable.prototype, \"rowsOnPage\", void 0);\n\t    __decorate([\n\t        core_1.Input(\"mfActivePage\"), \n\t        __metadata('design:type', Object)\n\t    ], DataTable.prototype, \"activePage\", void 0);\n\t    DataTable = __decorate([\n\t        core_1.Directive({\n\t            selector: 'table[mfData]',\n\t            exportAs: 'mfDataTable'\n\t        }), \n\t        __metadata('design:paramtypes', [])\n\t    ], DataTable);\n\t    return DataTable;\n\t}());\n\texports.DataTable = DataTable;\n\n\n/***/ },\n\n/***/ 1129:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar core_1 = __webpack_require__(1);\n\tvar DataTable_1 = __webpack_require__(878);\n\tvar DefaultSorter = (function () {\n\t    function DefaultSorter(mfTable) {\n\t        var _this = this;\n\t        this.mfTable = mfTable;\n\t        this.isSortedByMeAsc = false;\n\t        this.isSortedByMeDesc = false;\n\t        mfTable.onSortChange.subscribe(function (event) {\n\t            _this.isSortedByMeAsc = (event.sortBy === _this.sortBy && event.sortOrder === \"asc\");\n\t            _this.isSortedByMeDesc = (event.sortBy === _this.sortBy && event.sortOrder === \"desc\");\n\t        });\n\t    }\n\t    DefaultSorter.prototype.sort = function () {\n\t        if (this.isSortedByMeAsc) {\n\t            this.mfTable.setSort(this.sortBy, \"desc\");\n\t        }\n\t        else {\n\t            this.mfTable.setSort(this.sortBy, \"asc\");\n\t        }\n\t    };\n\t    __decorate([\n\t        core_1.Input(\"by\"), \n\t        __metadata('design:type', String)\n\t    ], DefaultSorter.prototype, \"sortBy\", void 0);\n\t    DefaultSorter = __decorate([\n\t        core_1.Component({\n\t            selector: \"mfDefaultSorter\",\n\t            template: \"\\n        <a style=\\\"cursor: pointer\\\" (click)=\\\"sort()\\\" class=\\\"text-nowrap\\\">\\n            <ng-content></ng-content>\\n            <span *ngIf=\\\"isSortedByMeAsc\\\" class=\\\"glyphicon glyphicon-triangle-top\\\" aria-hidden=\\\"true\\\"></span>\\n            <span *ngIf=\\\"isSortedByMeDesc\\\" class=\\\"glyphicon glyphicon-triangle-bottom\\\" aria-hidden=\\\"true\\\"></span>\\n        </a>\"\n\t        }), \n\t        __metadata('design:paramtypes', [DataTable_1.DataTable])\n\t    ], DefaultSorter);\n\t    return DefaultSorter;\n\t}());\n\texports.DefaultSorter = DefaultSorter;\n\n\n/***/ },\n\n/***/ 899:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n\t    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n\t    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n\t    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n\t    return c > 3 && r && Object.defineProperty(target, key, r), r;\n\t};\n\tvar __metadata = (this && this.__metadata) || function (k, v) {\n\t    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n\t};\n\tvar __param = (this && this.__param) || function (paramIndex, decorator) {\n\t    return function (target, key) { decorator(target, key, paramIndex); }\n\t};\n\tvar core_1 = __webpack_require__(1);\n\tvar DataTable_1 = __webpack_require__(878);\n\tvar Paginator = (function () {\n\t    function Paginator(injectMfTable) {\n\t        var _this = this;\n\t        this.injectMfTable = injectMfTable;\n\t        this.dataLength = 0;\n\t        this.onPageChangeSubscriber = function (event) {\n\t            _this.activePage = event.activePage;\n\t            _this.rowsOnPage = event.rowsOnPage;\n\t            _this.dataLength = event.dataLength;\n\t            _this.lastPage = Math.ceil(_this.dataLength / _this.rowsOnPage);\n\t        };\n\t    }\n\t    Paginator.prototype.ngOnChanges = function (changes) {\n\t        this.mfTable = this.inputMfTable || this.injectMfTable;\n\t        this.onPageChangeSubscriber(this.mfTable.getPage());\n\t        this.mfTable.onPageChange.subscribe(this.onPageChangeSubscriber);\n\t    };\n\t    Paginator.prototype.setPage = function (pageNumber) {\n\t        this.mfTable.setPage(pageNumber, this.rowsOnPage);\n\t    };\n\t    Paginator.prototype.setRowsOnPage = function (rowsOnPage) {\n\t        this.mfTable.setPage(this.activePage, rowsOnPage);\n\t    };\n\t    __decorate([\n\t        core_1.Input(\"mfTable\"), \n\t        __metadata('design:type', DataTable_1.DataTable)\n\t    ], Paginator.prototype, \"inputMfTable\", void 0);\n\t    Paginator = __decorate([\n\t        core_1.Component({\n\t            selector: \"mfPaginator\",\n\t            template: \"<ng-content></ng-content>\"\n\t        }),\n\t        __param(0, core_1.Optional()), \n\t        __metadata('design:paramtypes', [DataTable_1.DataTable])\n\t    ], Paginator);\n\t    return Paginator;\n\t}());\n\texports.Paginator = Paginator;\n\n\n/***/ },\n\n/***/ 904:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar Observable_1 = __webpack_require__(14);\n\tvar reduce_1 = __webpack_require__(922);\n\tObservable_1.Observable.prototype.reduce = reduce_1.reduce;\n\t//# sourceMappingURL=reduce.js.map\n\n/***/ },\n\n/***/ 922:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\tvar __extends = (this && this.__extends) || function (d, b) {\n\t    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n\t    function __() { this.constructor = d; }\n\t    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n\t};\n\tvar Subscriber_1 = __webpack_require__(70);\n\t/**\n\t * Returns an Observable that applies a specified accumulator function to the first item emitted by a source Observable,\n\t * then feeds the result of that function along with the second item emitted by the source Observable into the same\n\t * function, and so on until all items have been emitted by the source Observable, and emits the final result from\n\t * the final call to your function as its sole item.\n\t * This technique, which is called \"reduce\" here, is sometimes called \"aggregate,\" \"fold,\" \"accumulate,\" \"compress,\" or\n\t * \"inject\" in other programming contexts.\n\t *\n\t * <img src=\"./img/reduce.png\" width=\"100%\">\n\t *\n\t * @param {initialValue} the initial (seed) accumulator value\n\t * @param {accumulator} an accumulator function to be invoked on each item emitted by the source Observable, the\n\t * result of which will be used in the next accumulator call.\n\t * @return {Observable} an Observable that emits a single item that is the result of accumulating the output from the\n\t * items emitted by the source Observable.\n\t * @method reduce\n\t * @owner Observable\n\t */\n\tfunction reduce(project, seed) {\n\t    return this.lift(new ReduceOperator(project, seed));\n\t}\n\texports.reduce = reduce;\n\tvar ReduceOperator = (function () {\n\t    function ReduceOperator(project, seed) {\n\t        this.project = project;\n\t        this.seed = seed;\n\t    }\n\t    ReduceOperator.prototype.call = function (subscriber, source) {\n\t        return source._subscribe(new ReduceSubscriber(subscriber, this.project, this.seed));\n\t    };\n\t    return ReduceOperator;\n\t}());\n\texports.ReduceOperator = ReduceOperator;\n\t/**\n\t * We need this JSDoc comment for affecting ESDoc.\n\t * @ignore\n\t * @extends {Ignored}\n\t */\n\tvar ReduceSubscriber = (function (_super) {\n\t    __extends(ReduceSubscriber, _super);\n\t    function ReduceSubscriber(destination, project, seed) {\n\t        _super.call(this, destination);\n\t        this.hasValue = false;\n\t        this.acc = seed;\n\t        this.project = project;\n\t        this.hasSeed = typeof seed !== 'undefined';\n\t    }\n\t    ReduceSubscriber.prototype._next = function (value) {\n\t        if (this.hasValue || (this.hasValue = this.hasSeed)) {\n\t            this._tryReduce(value);\n\t        }\n\t        else {\n\t            this.acc = value;\n\t            this.hasValue = true;\n\t        }\n\t    };\n\t    ReduceSubscriber.prototype._tryReduce = function (value) {\n\t        var result;\n\t        try {\n\t            result = this.project(this.acc, value);\n\t        }\n\t        catch (err) {\n\t            this.destination.error(err);\n\t            return;\n\t        }\n\t        this.acc = result;\n\t    };\n\t    ReduceSubscriber.prototype._complete = function () {\n\t        if (this.hasValue || this.hasSeed) {\n\t            this.destination.next(this.acc);\n\t        }\n\t        this.destination.complete();\n\t    };\n\t    return ReduceSubscriber;\n\t}(Subscriber_1.Subscriber));\n\texports.ReduceSubscriber = ReduceSubscriber;\n\t//# sourceMappingURL=reduce.js.map\n\n/***/ },\n\n/***/ 1180:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar core_1 = __webpack_require__(30);\r\n\tvar amh_service_1 = __webpack_require__(1164);\r\n\tvar datatable_1 = __webpack_require__(900);\r\n\tvar routing_amh_1 = __webpack_require__(880);\r\n\tvar services_1 = __webpack_require__(38);\r\n\t//this.logger.log('`AMHAssignmentSearch` component loaded asynchronously');\r\n\tvar AMHAssignmentSearchComponent = (function () {\r\n\t    function AMHAssignmentSearchComponent(amhAssignmentService, myElement, logger) {\r\n\t        this.amhAssignmentService = amhAssignmentService;\r\n\t        this.myElement = myElement;\r\n\t        this.logger = logger;\r\n\t        this.assignmentType = routing_amh_1.AssignType.BK_CHANNEL;\r\n\t        this.assignmentSelected = new core_1.EventEmitter();\r\n\t        this.assignments = [];\r\n\t        this.originalAssignments = [];\r\n\t        // private assignmentDataSource: Observable<AssignmentUnique>;\r\n\t        this.bodyMargin = 0;\r\n\t        this.selectedAssignment = new routing_amh_1.AssignmentUnique();\r\n\t        this.selectedPkDirection = \"\";\r\n\t    }\r\n\t    AMHAssignmentSearchComponent.prototype.ngOnChanges = function (changes) {\r\n\t        this.logger.debug(\"changes : \" + JSON.stringify(changes));\r\n\t        if (this.oldAssignmentType != this.typeAsString(this.assignmentType)) {\r\n\t            this.defaultCode = changes[\"defaultCode\"] ? changes[\"defaultCode\"].currentValue : undefined;\r\n\t            this.loadAssignments(changes[\"defaultCode\"] != undefined);\r\n\t            this.oldAssignmentType = this.typeAsString(this.assignmentType);\r\n\t            this.selectedAssignment = new routing_amh_1.AssignmentUnique();\r\n\t        }\r\n\t        else if (changes[\"defaultCode\"]) {\r\n\t            //this.logger.log(\"defaultCode has been changed to \"+this.defaultCode);\r\n\t            this.updateAssignments(this.defaultCode);\r\n\t            if (this.assignments.length == 1) {\r\n\t                this.selectAssignment(this.assignments[0]);\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    AMHAssignmentSearchComponent.prototype.ngOnInit = function () {\r\n\t        //this.logger.log('hello `AMH Assignment Filter` component');\r\n\t        this.loadAssignments();\r\n\t        this.oldAssignmentType = this.typeAsString(this.assignmentType);\r\n\t    };\r\n\t    AMHAssignmentSearchComponent.prototype.typeAsString = function (type) {\r\n\t        return routing_amh_1.AssignType[type];\r\n\t    };\r\n\t    AMHAssignmentSearchComponent.prototype.loadAssignments = function (loadDefaultSelection) {\r\n\t        var _this = this;\r\n\t        //this.logger.log(\"loadAssignments  AssignmentFilter [\" + this.assignmentType + \"]\");\r\n\t        this.originalAssignments = [];\r\n\t        this.assignments = [];\r\n\t        // Get the data from the server\r\n\t        this.amhAssignmentService.findAssignments(this.assignmentType).subscribe(function (data) {\r\n\t            var resp = amh_service_1.AMHAssignmentService.getFromSource(data);\r\n\t            //     this.logger.log(\"Assignment \" + resp + \" received\");\r\n\t            resp.forEach(function (assignment) {\r\n\t                _this.originalAssignments.push(assignment);\r\n\t                //this.assignments.push(assignment);\r\n\t            });\r\n\t        }, function (err) {\r\n\t            return _this.logger.error(\"Can't get assignments type \" + _this.assignmentType + \". Error code: %s, URL: %s \", err.status, err.url);\r\n\t        }, function () {\r\n\t            //  this.logger.log(this.originalAssignments.length +\" Assignment(s) of type '\" + this.assignmentType + \"' are retrieved.\");\r\n\t            _this.updateAssignments(_this.defaultCode);\r\n\t            if (loadDefaultSelection && _this.assignments.length == 1) {\r\n\t                _this.selectAssignment(_this.assignments[0]);\r\n\t            }\r\n\t        });\r\n\t    };\r\n\t    AMHAssignmentSearchComponent.prototype.handleClick = function (event) {\r\n\t        var clickedComponent = event.target;\r\n\t        var inside = false;\r\n\t        do {\r\n\t            // this.logger.log(clickedComponent + \" equals \" + (clickedComponent === this.elementRef.nativeElement) );\r\n\t            if (clickedComponent === this.myElement.nativeElement) {\r\n\t                inside = true;\r\n\t            }\r\n\t            clickedComponent = clickedComponent.parentNode;\r\n\t        } while (clickedComponent);\r\n\t        if (!inside) {\r\n\t            this.assignments = [];\r\n\t            if (!this.selectedAssignment.code) {\r\n\t                this.selectedAssignment = new routing_amh_1.AssignmentUnique();\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    // select(backend: AssignmentUnique) {\r\n\t    //   this.selectedAssignment = new AssignmentUnique(backend.pkCode, backend.pkDirection, backend.code, backend.dataOwner, backend.description);\r\n\t    //   this.selectedPkDirection = backend.pkDirection\r\n\t    //   this.backends = [];\r\n\t    // }\r\n\t    AMHAssignmentSearchComponent.prototype.selectAssignment = function (assignment) {\r\n\t        //this.logger.log(\"selected assignment code \" + assignment.code);\r\n\t        if (!assignment) {\r\n\t            this.logger.error(\"assignment[\" + assignment + \"] missing \");\r\n\t            return;\r\n\t        }\r\n\t        this.assignmentSelected.emit(assignment.code);\r\n\t        this.assignments = [];\r\n\t        this.selectedAssignment = new routing_amh_1.AssignmentUnique();\r\n\t    };\r\n\t    AMHAssignmentSearchComponent.prototype.updateAssignments = function (filterText) {\r\n\t        if (!filterText) {\r\n\t            this.assignments = [];\r\n\t            return;\r\n\t        }\r\n\t        var assignedAssignmentCodeMap = {};\r\n\t        var originalAssignmentsMinusAssignedAssignments = this.originalAssignments.filter(function (assignment) {\r\n\t            return !assignedAssignmentCodeMap[assignment.code];\r\n\t        });\r\n\t        var valueToFind = filterText.toUpperCase();\r\n\t        // let filteredAssignmentSequence:Array<any> = originalAssignmentsMinusAssignedAssignments.filter((item:any) =>\r\n\t        //   item[\"sequence\"].match(valueToFind));\r\n\t        var filteredAssignmentCode = originalAssignmentsMinusAssignedAssignments.filter(function (item) {\r\n\t            return item[\"code\"].toUpperCase().match(valueToFind);\r\n\t        });\r\n\t        // let filteredData =  filteredAssignmentSequence.concat(filteredAssignmentCode);\r\n\t        var filteredData = filteredAssignmentCode;\r\n\t        var uniqueList = [];\r\n\t        filteredData.forEach(function (item) {\r\n\t            var found = uniqueList.find(function (value, index, array) { return item[\"code\"] == value[\"code\"]; });\r\n\t            if (!found) {\r\n\t                uniqueList.push(item);\r\n\t            }\r\n\t        });\r\n\t        //.toUpperCase()\r\n\t        this.assignments = uniqueList.map(function (assignment) { assignment.code = assignment.code; return assignment; });\r\n\t    };\r\n\t    __decorate([\r\n\t        core_1.ViewChild(datatable_1.DataTable), \r\n\t        __metadata('design:type', Object)\r\n\t    ], AMHAssignmentSearchComponent.prototype, \"table\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(\"default-code\"), \r\n\t        __metadata('design:type', String)\r\n\t    ], AMHAssignmentSearchComponent.prototype, \"defaultCode\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(\"assignment-type\"), \r\n\t        __metadata('design:type', Number)\r\n\t    ], AMHAssignmentSearchComponent.prototype, \"assignmentType\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Output(), \r\n\t        __metadata('design:type', core_1.EventEmitter)\r\n\t    ], AMHAssignmentSearchComponent.prototype, \"assignmentSelected\", void 0);\r\n\t    AMHAssignmentSearchComponent = __decorate([\r\n\t        core_1.Component({\r\n\t            selector: 'amh-assignment-search',\r\n\t            template: __webpack_require__(1188),\r\n\t            providers: [amh_service_1.AMHAssignmentService],\r\n\t            host: {\r\n\t                '(document:click)': 'handleClick($event)',\r\n\t            },\r\n\t            directives: [datatable_1.DataTableDirectives]\r\n\t        }), \r\n\t        __metadata('design:paramtypes', [amh_service_1.AMHAssignmentService, core_1.ElementRef, services_1.Logger])\r\n\t    ], AMHAssignmentSearchComponent);\r\n\t    return AMHAssignmentSearchComponent;\r\n\t}());\r\n\texports.AMHAssignmentSearchComponent = AMHAssignmentSearchComponent;\r\n\n\n/***/ },\n\n/***/ 1188:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<!--main content start-->\\r\\n<input [(ngModel)]=\\\"selectedAssignment.code\\\" \\r\\n    (keyup)=\\\"updateAssignments($event.target.value)\\\" style=\\\"margin:5px 5px 10px 0px;\\\"\\r\\n/> &nbsp;\\r\\n<i class=\\\"fa fa-search\\\" aria-hidden=\\\"true\\\"></i> \\r\\n<!---->\\r\\n<div style=\\\"height:200px; overflow: auto; z-index:200;\\\" class=\\\"suggestions\\\" *ngIf=\\\"assignments.length > 0\\\">\\r\\n    <!--*ngFor=\\\"let item of assignments\\\"-->\\r\\n    <!--<ul >\\r\\n        <li>-->\\r\\n            <table style=\\\"width:100%;\\\">\\r\\n                <!--<thead>\\r\\n                    <tr>\\r\\n                        <th style=\\\"width:15%;\\\"> </th>\\r\\n                        <th style=\\\"width:20%;\\\"> </th>\\r\\n                        <th style=\\\"width:65%;\\\"> </th>\\r\\n                    </tr>\\r\\n                </thead>-->\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of assignments\\\" (click)=\\\"selectAssignment(item)\\\"> \\r\\n                        <td style=\\\"width:15%;\\\">  \\r\\n                            <span *ngIf=\\\"item.active\\\"  class=\\\"badge bg-primary\\\">\\r\\n                                <i class=\\\"fa fa-check\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                            </span>\\r\\n                            <span *ngIf=\\\"!item.active\\\" >\\r\\n                                &nbsp;\\r\\n                            </span>\\r\\n                        </td>\\r\\n                        <td style=\\\"width:20%;\\\"> <b>{{item.sequence}}</b> </td>\\r\\n                        <td style=\\\"width:65%;\\\"> {{item.code.toUpperCase()}} </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        <!--</li>\\r\\n    </ul>-->\\r\\n</div>\"\n\n/***/ },\n\n/***/ 1181:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tfunction __export(m) {\r\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n\t}\r\n\t__export(__webpack_require__(1180));\r\n\n\n/***/ },\n\n/***/ 1225:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar core_1 = __webpack_require__(30);\r\n\tvar common_1 = __webpack_require__(8);\r\n\tvar amh_service_1 = __webpack_require__(1164);\r\n\tvar router_1 = __webpack_require__(58);\r\n\tvar datatable_1 = __webpack_require__(900);\r\n\tvar routing_amh_1 = __webpack_require__(880);\r\n\tvar modal_1 = __webpack_require__(887);\r\n\tvar amh_rule_selection_1 = __webpack_require__(1234);\r\n\tvar amh_backend_selection_1 = __webpack_require__(1229);\r\n\tvar amh_assignment_search_1 = __webpack_require__(1181);\r\n\tvar directives_1 = __webpack_require__(258);\r\n\tvar services_1 = __webpack_require__(38);\r\n\t//this.logger.log('`AMHAssignmentContent` component loaded asynchronously');\r\n\tvar AMHAssignmentContentComponent = (function () {\r\n\t    function AMHAssignmentContentComponent(router, routeParams, amhAssignmentService, auth, logger) {\r\n\t        this.router = router;\r\n\t        this.amhAssignmentService = amhAssignmentService;\r\n\t        this.logger = logger;\r\n\t        this.enableSaveButtons = new core_1.EventEmitter();\r\n\t        this.assignmentUpdate = new core_1.EventEmitter();\r\n\t        this.saveWork = new core_1.EventEmitter();\r\n\t        this.rollbackSelection = new core_1.EventEmitter();\r\n\t        this.creationStatus = new core_1.EventEmitter();\r\n\t        this.unconfirmedAssignmentCode = undefined;\r\n\t        this.assignment = undefined;\r\n\t        this.assignmentSequenceErrorMsg = \"\";\r\n\t        this.assignmentCopiesErrorMsg = \"\";\r\n\t        this.assignmentCodeErrorMsg = \"\";\r\n\t        this.isDirty = false;\r\n\t        this.disableInputs = true;\r\n\t        this.usedBackends = [];\r\n\t        this.haveRulesErrors = false;\r\n\t        this.pendingAssignmentSave = 0;\r\n\t        this.pendingNavigationConfig = {};\r\n\t        this.selectionRollbackType = undefined;\r\n\t        this.receivedAssignmentCode = routeParams.params['code'];\r\n\t        //this.logger.log(\" this.receivedAssignmentCode \" + this.receivedAssignmentCode);\r\n\t        this.assignmentTextFilter = this.receivedAssignmentCode || '';\r\n\t        this.assignment = new routing_amh_1.AssignmentUnique(false, new routing_amh_1.BackendPK(\"\", \"\"), \"\", \"\", \"\", \"\", undefined, undefined, \"\", \"\", \"\", [], []);\r\n\t        this.isCreation = false;\r\n\t        this.pendingAssignmentSave = 0;\r\n\t        this.hasUserPermissions = auth.hasPermission([\"amh.modify.assignment\"]) == 1;\r\n\t        this.creationStatus.emit(this.isCreation);\r\n\t    }\r\n\t    /* SimpleChange\r\n\t          previousValue: any;\r\n\t          currentValue: any;\r\n\t    */\r\n\t    AMHAssignmentContentComponent.prototype.ngOnChanges = function (changes) {\r\n\t        if (changes[\"config\"]) {\r\n\t            this.logger.debug(\"config has changed type \" + this.config.type);\r\n\t            if (this.selectionRollbackType != this.config.type) {\r\n\t                this.confirmSelectionTableChanges();\r\n\t            }\r\n\t        }\r\n\t        var saveStatusChange = changes[\"saveStatus\"];\r\n\t        this.logger.debug(\" saveStatusChange === \" + saveStatusChange + \" this.pendingAssignmentSave \" + this.pendingAssignmentSave);\r\n\t        if (saveStatusChange) {\r\n\t            switch (saveStatusChange.currentValue) {\r\n\t                case \"OK\":\r\n\t                    this.onSaveStatusOk();\r\n\t                    break;\r\n\t            }\r\n\t        }\r\n\t        if (saveStatusChange && this.pendingAssignmentSave) {\r\n\t            this.logger.debug(\"saveStatusChanged and pendingAssignmentSave == true\");\r\n\t            switch (saveStatusChange.currentValue) {\r\n\t                case \"OK\":\r\n\t                    this.onSaveStatusOk();\r\n\t                    this.pendingAssignmentSave = 0;\r\n\t                    break;\r\n\t                case \"Error\":\r\n\t                    this.onSaveStatusFail();\r\n\t                    this.pendingAssignmentSave = 0;\r\n\t                    break;\r\n\t            }\r\n\t            this.logger.debug(\"after switch pendingAsignmentSave\");\r\n\t        }\r\n\t    };\r\n\t    AMHAssignmentContentComponent.prototype.onSaveStatusFail = function () {\r\n\t        switch (this.pendingAssignmentSave) {\r\n\t            case 2:\r\n\t                //An error has ocurred the rollback the selection change\r\n\t                this.rollbackSelection.emit(true);\r\n\t                break;\r\n\t        }\r\n\t    };\r\n\t    AMHAssignmentContentComponent.prototype.onSaveStatusOk = function () {\r\n\t        switch (this.pendingAssignmentSave) {\r\n\t            case 1:\r\n\t                this.logger.debug(\" save was OK then go to Rule creation\");\r\n\t                this.navigateTo(this.pendingNavigationConfig.composentName, this.pendingNavigationConfig.parameters);\r\n\t                break;\r\n\t            case 2:\r\n\t                this.logger.debug(\" save was OK then change selection table\");\r\n\t                this.initialization();\r\n\t                break;\r\n\t            case 3:\r\n\t            case 0:\r\n\t                this.logger.debug(\" save in creation was OK then call afterSaveNewAssignment\");\r\n\t                this.afterSaveNewAssignment();\r\n\t                break;\r\n\t        }\r\n\t    };\r\n\t    AMHAssignmentContentComponent.prototype.ngOnInit = function () {\r\n\t        //this.logger.log('hello `AMH assignment content` component');\r\n\t        this.selectionRollbackType = this.config.type;\r\n\t        this.amhAssignmentService.updateDirtyStatus(this.isDirty);\r\n\t        this.loadAssignment(this.receivedAssignmentCode);\r\n\t    };\r\n\t    AMHAssignmentContentComponent.prototype.actionChangeRuleStatus = function (rulesStatus) {\r\n\t        this.haveRulesErrors = rulesStatus;\r\n\t        this.isDirty = true;\r\n\t        this.amhAssignmentService.updateDirtyStatus(this.isDirty);\r\n\t        this.emitDisableEnableSaveButtons();\r\n\t    };\r\n\t    AMHAssignmentContentComponent.prototype.addRule = function (addedRule) {\r\n\t        this.assignment.rules = [addedRule].concat(this.assignment.rules);\r\n\t        this.assignmentUpdate.emit(this.assignment);\r\n\t        this.isDirty = true;\r\n\t        this.amhAssignmentService.updateDirtyStatus(this.isDirty);\r\n\t        //this.logger.log(\" adding \" + addedRule.code + \" to assignment \");\r\n\t    };\r\n\t    AMHAssignmentContentComponent.prototype.deleteRule = function (deletedRuleCode) {\r\n\t        this.assignment.rules = this.assignment.rules.filter(function (item) {\r\n\t            return item[\"code\"] !== deletedRuleCode;\r\n\t        });\r\n\t        // this.enableSaveButtons.emit(true);\r\n\t        this.assignmentUpdate.emit(this.assignment);\r\n\t        // this.isDirty = true;\r\n\t        //this.logger.log(deletedRuleCode + \" deleted \");\r\n\t    };\r\n\t    AMHAssignmentContentComponent.prototype.addToBackendChannel = function (addedBackend) {\r\n\t        this.assignment.backendPrimaryKey = new routing_amh_1.BackendPK(addedBackend.pkCode, addedBackend.pkDirection);\r\n\t        // this.enableSaveButtons.emit(false); //???\r\n\t        this.assignmentUpdate.emit(this.assignment);\r\n\t        this.isDirty = true;\r\n\t        this.amhAssignmentService.updateDirtyStatus(this.isDirty);\r\n\t        //this.logger.log(\" adding \" + addedBackend.pkCode);\r\n\t    };\r\n\t    AMHAssignmentContentComponent.prototype.addToMultiBackend = function (addedBackend) {\r\n\t        var uniqueBackend = new routing_amh_1.AssignmentUniqueBackend(addedBackend.pkCode, addedBackend.pkDirection, addedBackend.dataOwner, addedBackend.lockCode);\r\n\t        this.assignment.backends = [uniqueBackend].concat(this.assignment.backends);\r\n\t        // this.enableSaveButtons.emit(true); //??? verify if there is no errors before send the event\r\n\t        this.assignmentUpdate.emit(this.assignment);\r\n\t        this.isDirty = true;\r\n\t        this.amhAssignmentService.updateDirtyStatus(this.isDirty);\r\n\t        //this.logger.log(\" adding \" + addedBackend.code + \" to assignment \");\r\n\t    };\r\n\t    AMHAssignmentContentComponent.prototype.addBackend = function (addedBackend) {\r\n\t        switch (this.config.type) {\r\n\t            case routing_amh_1.AssignType.BK_CHANNEL:\r\n\t                this.addToBackendChannel(addedBackend);\r\n\t                break;\r\n\t            case routing_amh_1.AssignType.DTN_COPY:\r\n\t            case routing_amh_1.AssignType.FEED_DTN_COPY:\r\n\t                this.addToMultiBackend(addedBackend);\r\n\t        }\r\n\t        this.fillBackends();\r\n\t        this.emitDisableEnableSaveButtons();\r\n\t    };\r\n\t    AMHAssignmentContentComponent.prototype.deleteToBackendChannel = function (backendCodeDeleted) {\r\n\t        this.logger.debug(\" from deleteToBackendChannel  \" + backendCodeDeleted);\r\n\t        if (!this.assignment.backendPrimaryKey || this.assignment.backendPrimaryKey.code != backendCodeDeleted) {\r\n\t            //this.logger.log(\"backend code to delete [\" + backendCodeDeleted + \"] not found \");\r\n\t            return;\r\n\t        }\r\n\t        this.assignment.backendPrimaryKey = undefined;\r\n\t        // this.enableSaveButtons.emit(true); //???\r\n\t        this.assignmentUpdate.emit(this.assignment);\r\n\t        this.isDirty = true;\r\n\t        this.amhAssignmentService.updateDirtyStatus(this.isDirty);\r\n\t    };\r\n\t    AMHAssignmentContentComponent.prototype.deleteToMultiBackend = function (backendCodeDeleted) {\r\n\t        this.assignment.backends = this.assignment.backends\r\n\t            .filter(function (item) { return item[\"code\"] !== backendCodeDeleted; });\r\n\t        // this.enableSaveButtons.emit(true);\r\n\t        this.assignmentUpdate.emit(this.assignment);\r\n\t        this.isDirty = true;\r\n\t        this.amhAssignmentService.updateDirtyStatus(this.isDirty);\r\n\t        //this.logger.log(backendCodeDeleted + \" deleted \");\r\n\t    };\r\n\t    AMHAssignmentContentComponent.prototype.deleteBackend = function (backendCodeDeleted) {\r\n\t        switch (this.config.type) {\r\n\t            case routing_amh_1.AssignType.BK_CHANNEL:\r\n\t                this.deleteToBackendChannel(backendCodeDeleted);\r\n\t                break;\r\n\t            case routing_amh_1.AssignType.DTN_COPY:\r\n\t            case routing_amh_1.AssignType.FEED_DTN_COPY:\r\n\t                this.deleteToMultiBackend(backendCodeDeleted);\r\n\t        }\r\n\t        this.fillBackends();\r\n\t        this.emitDisableEnableSaveButtons();\r\n\t    };\r\n\t    AMHAssignmentContentComponent.prototype.fillBackends = function () {\r\n\t        //this.logger.log(\"filling up backends \");\r\n\t        var backends = [];\r\n\t        switch (this.config.type) {\r\n\t            case routing_amh_1.AssignType.BK_CHANNEL:\r\n\t                if (this.assignment.backendPrimaryKey && this.assignment.backendPrimaryKey.code) {\r\n\t                    backends.push(new routing_amh_1.Backend(this.assignment.backendPrimaryKey.code, this.assignment.backendPrimaryKey.direction));\r\n\t                }\r\n\t                break;\r\n\t            case routing_amh_1.AssignType.DTN_COPY:\r\n\t            case routing_amh_1.AssignType.FEED_DTN_COPY:\r\n\t                if (this.assignment.backends) {\r\n\t                    this.assignment.backends.forEach(function (backend) {\r\n\t                        backends.push(new routing_amh_1.Backend(backend.code, backend.direction));\r\n\t                    });\r\n\t                }\r\n\t                break;\r\n\t        }\r\n\t        this.usedBackends = backends;\r\n\t    };\r\n\t    AMHAssignmentContentComponent.prototype.selectAssignment = function (code) {\r\n\t        //this.logger.log(\"selected assignment code \" + code);\r\n\t        if (!code) {\r\n\t            this.logger.error(\"code[\" + code + \"] missing \");\r\n\t            return;\r\n\t        }\r\n\t        this.unconfirmedAssignmentCode = code;\r\n\t        this.confirmAssignmentChange();\r\n\t    };\r\n\t    AMHAssignmentContentComponent.prototype.hasThisAssignmentErrors = function () {\r\n\t        var enableSaveButtons = this.assignmentSequenceErrorMsg.length > 0;\r\n\t        //this.logger.debug(\"1.- sequenceMsgErrors \"+ enableSaveButtons);\r\n\t        enableSaveButtons = enableSaveButtons || this.assignmentCodeErrorMsg.length > 0;\r\n\t        //this.logger.debug(\"2.- CodeMsgError \"+ (this.assignmentCodeErrorMsg.length > 0));\r\n\t        enableSaveButtons = enableSaveButtons || this.haveRulesErrors;\r\n\t        //this.logger.debug(\"3.- ruleErrors \"+ this.haveRulesErrors);\r\n\t        // has at least one backend assigned\r\n\t        enableSaveButtons = enableSaveButtons || (!this.usedBackends || this.usedBackends.length < 1);\r\n\t        //this.logger.debug(\"4.- backendSizeError \"+ (!this.usedBackends || this.usedBackends.length < 1));\r\n\t        // On creation has a code and sequence\r\n\t        if (this.isCreation) {\r\n\t            enableSaveButtons = enableSaveButtons || (!this.assignment.code || this.assignment.code.length == 0);\r\n\t            // this.logger.debug(\"5.- onNew-CodeError \"+ (!this.assignment.code || this.assignment.code.length == 0));\r\n\t            enableSaveButtons = enableSaveButtons || (!this.assignment.sequence || this.assignment.sequence == 0);\r\n\t        }\r\n\t        return enableSaveButtons;\r\n\t    };\r\n\t    AMHAssignmentContentComponent.prototype.emitDisableEnableSaveButtons = function () {\r\n\t        this.enableSaveButtons.emit(this.hasThisAssignmentErrors());\r\n\t    };\r\n\t    AMHAssignmentContentComponent.prototype.doDisableInputs = function () {\r\n\t        this.logger.debug(\" doDisable \" + this.hasUserPermissions);\r\n\t        this.disableInputs = true;\r\n\t    };\r\n\t    AMHAssignmentContentComponent.prototype.doEnableInputs = function () {\r\n\t        this.logger.debug(\" doEnable \" + this.hasUserPermissions);\r\n\t        if (!this.hasUserPermissions) {\r\n\t            this.disableInputs = true;\r\n\t            return;\r\n\t        }\r\n\t        this.disableInputs = false;\r\n\t    };\r\n\t    AMHAssignmentContentComponent.prototype.loadAssignment = function (code) {\r\n\t        var _this = this;\r\n\t        if (!code || code.length == 0) {\r\n\t            this.createNewAssignment();\r\n\t            return;\r\n\t        }\r\n\t        this.amhAssignmentService.findAssignmentByCode(this.config.type, code)\r\n\t            .subscribe(function (data) {\r\n\t            //this.logger.log(\"[loadAssignment] Data retrieved from service: %s \", data.code);\r\n\t            _this.assignment = routing_amh_1.AssignmentUnique.fromJson(data);\r\n\t            _this.assignment.rules = _this.assignment.rules.sort(function (rule1, rule2) {\r\n\t                return rule1.sequence - rule2.sequence;\r\n\t            });\r\n\t            _this.isCreation = false;\r\n\t            _this.creationStatus.emit(_this.isCreation);\r\n\t            _this.doEnableInputs();\r\n\t            _this.haveRulesErrors = false;\r\n\t            _this.isDirty = false;\r\n\t            _this.amhAssignmentService.updateDirtyStatus(_this.isDirty);\r\n\t            _this.assignmentUpdate.emit(_this.assignment);\r\n\t            _this.fillBackends();\r\n\t        }, function (err) {\r\n\t            _this.logger.warn(\"[loadAssignment] Can't get assignment. Error code: %s, URL: %s \", err.status, err.url);\r\n\t            _this.createNewAssignment();\r\n\t            _this.emitDisableEnableSaveButtons();\r\n\t        }, function () {\r\n\t            //this.logger.log(\"[loadAssignment] assignment code [%s] retrieved\", code);\r\n\t            if (!_this.assignment) {\r\n\t                _this.createNewAssignment();\r\n\t            }\r\n\t            _this.emitDisableEnableSaveButtons();\r\n\t        });\r\n\t    };\r\n\t    AMHAssignmentContentComponent.prototype.actionCreateNewAssignment = function () {\r\n\t        this.doEnableInputs();\r\n\t        this.unconfirmedAssignmentCode = \"\";\r\n\t        var hasAssignErros = this.hasThisAssignmentErrors();\r\n\t        if (this.isDirty && hasAssignErros) {\r\n\t            this.alertPreventLostChanges(400, 401);\r\n\t            return;\r\n\t        }\r\n\t        if (!this.isDirty || hasAssignErros) {\r\n\t            this.loadAssignment(this.unconfirmedAssignmentCode);\r\n\t            return;\r\n\t        }\r\n\t        this.confirmAssignmentChange();\r\n\t    };\r\n\t    AMHAssignmentContentComponent.prototype.disableRuleCreation = function () {\r\n\t        return this.disableInputs || this.hasThisAssignmentErrors();\r\n\t    };\r\n\t    // actionCreateNewRule() {\r\n\t    //   if (!this.isDirty) {\r\n\t    //     this.actionRuleNavigation(undefined);\r\n\t    //     return;  \r\n\t    //   }\r\n\t    //   this.alertLostChanges(0, 201,202);\r\n\t    // }\r\n\t    AMHAssignmentContentComponent.prototype.createNewAssignment = function () {\r\n\t        //this.logger.log(\"creating new assignment\");\r\n\t        this.assignment = new routing_amh_1.AssignmentUnique(false, new routing_amh_1.BackendPK(\"\", \"\"), \"\", \"\", \"\", \"\", undefined, undefined, \"\", \"\", \"\", [], []);\r\n\t        this.fillBackends();\r\n\t        this.isCreation = true;\r\n\t        this.creationStatus.emit(this.isCreation);\r\n\t        this.assignmentUpdate.emit(this.assignment);\r\n\t        this.assignmentSequenceErrorMsg = \"\";\r\n\t        this.assignmentCopiesErrorMsg = \"\";\r\n\t        this.isDirty = false;\r\n\t        this.amhAssignmentService.updateDirtyStatus(this.isDirty);\r\n\t        this.haveRulesErrors = false;\r\n\t        this.emitDisableEnableSaveButtons();\r\n\t    };\r\n\t    AMHAssignmentContentComponent.prototype.isInteger = function (x) {\r\n\t        return x % 1 === 0;\r\n\t    };\r\n\t    AMHAssignmentContentComponent.prototype.updateAssignmentUniquenessErrorMsg = function (sequence) {\r\n\t        var _this = this;\r\n\t        this.assignmentSequenceErrorMsg = \"\";\r\n\t        this.logger.debug(\"[assingmentWithSequence] calling findAssignmentsBySequence(%s,%s)\", this.config.type, sequence);\r\n\t        this.amhAssignmentService.findAssignmentsBySequence(this.config.type, sequence)\r\n\t            .subscribe(function (data) {\r\n\t            //this.logger.log(\"[assingmentWithSequence] Data retrieved from service: %s with type %s\", data.code, this.config.type);\r\n\t            if (_this.assignment.code !== data.code) {\r\n\t                _this.assignmentSequenceErrorMsg = \"The sequence \" + sequence + \" is already used by the assignment \" + data.code;\r\n\t            }\r\n\t        }, function (err) {\r\n\t            _this.logger.error(\"[assingmentWithSequence] Can't get assignments. Error code: %s, URL: %s \", err.status, err.url);\r\n\t        }, function () {\r\n\t            // this.logger.log(\"[assingmentWithSequence] with msg [%s]\", this.assignmentSequenceErrorMsg);\r\n\t            _this.emitDisableEnableSaveButtons();\r\n\t        });\r\n\t    };\r\n\t    AMHAssignmentContentComponent.prototype.updateAssignmentCodeUniquenessErrorMsg = function (code) {\r\n\t        var _this = this;\r\n\t        this.assignmentCodeErrorMsg = \"\";\r\n\t        this.amhAssignmentService.findAssignmentsByCode(this.config.type, code)\r\n\t            .subscribe(function (data) {\r\n\t            //this.logger.log(\"[assingmentWithCode] Data retrieved from service: %s, current %s \", data.code, this.assignment.code);\r\n\t            _this.assignmentCodeErrorMsg = \"The code \" + code + \" already exists \";\r\n\t        }, function (err) {\r\n\t            _this.logger.error(\"[assingmentWithCode] Can't get assignments. Error code: %s, URL: %s \", err.status, err.url);\r\n\t        }, function () {\r\n\t            //this.logger.log(\"[assingmentWithCode] with msg [%s]\", this.assignmentCodeErrorMsg);\r\n\t            _this.emitDisableEnableSaveButtons();\r\n\t        });\r\n\t    };\r\n\t    AMHAssignmentContentComponent.prototype.getRulesUniquenessErrorMsgs = function () {\r\n\t        if (!this.assignment || !this.assignment.rules) {\r\n\t            return [];\r\n\t        }\r\n\t        var hashRuleCode = {};\r\n\t        var errorMessages = this.assignment.rules.filter(function (rule) {\r\n\t            if (hashRuleCode[rule.sequence]) {\r\n\t                return true;\r\n\t            }\r\n\t            hashRuleCode[rule.sequence] = rule;\r\n\t            return false;\r\n\t        }).map(function (rule) {\r\n\t            return rule.sequence + \" is used by \" + rule.code.toUpperCase();\r\n\t        });\r\n\t        return errorMessages;\r\n\t    };\r\n\t    AMHAssignmentContentComponent.prototype.assignmentSequenceUpdate = function (inputElem) {\r\n\t        //this.logger.log(\"assignment \" + this.assignment.code + \" has changed its value to \" + this.assignment.sequence);\r\n\t        var numericSeqValue = +inputElem.value;\r\n\t        var oldSequence = this.assignment.sequence;\r\n\t        this.assignmentUpdate.emit(this.assignment);\r\n\t        this.isDirty = true;\r\n\t        this.amhAssignmentService.updateDirtyStatus(this.isDirty);\r\n\t        if (!numericSeqValue || !this.isInteger(numericSeqValue) || numericSeqValue < 0) {\r\n\t            //this.logger.log(\" not valid sequence \" + numericSeqValue + \" old value \" + oldSequence);\r\n\t            this.assignmentSequenceErrorMsg = \"Assignment sequence is incorrect\";\r\n\t            this.emitDisableEnableSaveButtons();\r\n\t            return;\r\n\t        }\r\n\t        this.assignment.sequence = numericSeqValue;\r\n\t        this.updateAssignmentUniquenessErrorMsg(numericSeqValue);\r\n\t    };\r\n\t    AMHAssignmentContentComponent.prototype.assignmentCopiesUpdate = function (inputElem) {\r\n\t        //this.logger.log(\"assignment \" + this.assignment.code + \" has changed its copies value to \" + this.assignment.copies);\r\n\t        var numericCopiesValue = +inputElem.value;\r\n\t        var oldCopies = this.assignment.copies;\r\n\t        this.assignmentUpdate.emit(this.assignment);\r\n\t        this.assignmentCopiesErrorMsg = \"\";\r\n\t        if (!numericCopiesValue || !this.isInteger(numericCopiesValue) || numericCopiesValue < 0) {\r\n\t            //this.logger.log(\" not valid copies \" + numericCopiesValue + \" old value \" + oldCopies);\r\n\t            this.assignmentCopiesErrorMsg = \"Assignment copies is incorrect\";\r\n\t            this.emitDisableEnableSaveButtons();\r\n\t            return;\r\n\t        }\r\n\t        this.assignment.copies = numericCopiesValue;\r\n\t        this.isDirty = true;\r\n\t        this.amhAssignmentService.updateDirtyStatus(this.isDirty);\r\n\t    };\r\n\t    AMHAssignmentContentComponent.prototype.isValidCode = function (code) {\r\n\t        //^,$ are the begining and the end of the string respectively\r\n\t        //to test https://regex101.com/#javascript\r\n\t        var rex = new RegExp('^[A-Za-z0-9_\\.\\-]*$');\r\n\t        return rex.test(code);\r\n\t    };\r\n\t    AMHAssignmentContentComponent.prototype.assignmentCodeUpdate = function (inputElem) {\r\n\t        //this.logger.log(\"assignment code changed \" + inputElem.value + \" assignment code \" + this.assignment.code);\r\n\t        this.isDirty = true;\r\n\t        this.amhAssignmentService.updateDirtyStatus(this.isDirty);\r\n\t        this.assignment.code = inputElem.value;\r\n\t        if (!this.isValidCode(inputElem.value)) {\r\n\t            this.assignmentCodeErrorMsg = \"Valid characters are A-Z a-z 0-9 . - _\";\r\n\t            return;\r\n\t        }\r\n\t        this.updateAssignmentCodeUniquenessErrorMsg(inputElem.value);\r\n\t    };\r\n\t    AMHAssignmentContentComponent.prototype.confirmAssignmentChange = function () {\r\n\t        if (!this.isDirty) {\r\n\t            //this.logger.log(\"Assignment has no changes so far\");\r\n\t            this.loadAssignment(this.unconfirmedAssignmentCode);\r\n\t            return;\r\n\t        }\r\n\t        this.alertLostChanges();\r\n\t    };\r\n\t    AMHAssignmentContentComponent.prototype.initialization = function () {\r\n\t        this.assignmentTextFilter = \"\";\r\n\t        this.assignmentCodeErrorMsg = \"\";\r\n\t        this.createNewAssignment();\r\n\t        this.doDisableInputs();\r\n\t        this.isDirty = false;\r\n\t        this.amhAssignmentService.updateDirtyStatus(this.isDirty);\r\n\t    };\r\n\t    AMHAssignmentContentComponent.prototype.afterSaveNewAssignment = function () {\r\n\t        this.assignmentTextFilter = \"\";\r\n\t        this.assignmentCodeErrorMsg = \"\";\r\n\t        this.assignmentSequenceErrorMsg = \"\";\r\n\t        this.assignmentCopiesErrorMsg = \"\";\r\n\t        this.isCreation = false;\r\n\t        this.creationStatus.emit(this.isCreation);\r\n\t        this.isDirty = false;\r\n\t        this.amhAssignmentService.updateDirtyStatus(this.isDirty);\r\n\t        this.haveRulesErrors = false;\r\n\t        this.emitDisableEnableSaveButtons();\r\n\t    };\r\n\t    AMHAssignmentContentComponent.prototype.confirmSelectionTableChanges = function () {\r\n\t        var hasAssignErros = this.hasThisAssignmentErrors();\r\n\t        if (this.isDirty && hasAssignErros) {\r\n\t            this.alertPreventLostChanges();\r\n\t            return;\r\n\t        }\r\n\t        if (!this.isDirty || hasAssignErros) {\r\n\t            //this.logger.log(\"onChanges config.type = [\" + this.config.type + \"] hasThisAssignmentErrors \" + hasAssignErros + \" dirty \" + this.isDirty);\r\n\t            this.selectionRollbackType = this.config.type;\r\n\t            this.initialization();\r\n\t            return;\r\n\t        }\r\n\t        this.alertLostChanges(100, 101, 102);\r\n\t    };\r\n\t    AMHAssignmentContentComponent.prototype.alertPreventLostChanges = function (cancelResponse, yesResponse) {\r\n\t        if (cancelResponse === void 0) { cancelResponse = 300; }\r\n\t        if (yesResponse === void 0) { yesResponse = 301; }\r\n\t        this.alert.waitIcon = false;\r\n\t        this.alert.alertFooter = true;\r\n\t        this.alert.cancelButton = true;\r\n\t        this.alert.cancelButtonText = \"Cancel\";\r\n\t        this.alert.cancelButtonResponse = cancelResponse;\r\n\t        this.alert.yesButton = true;\r\n\t        this.alert.yesButtonText = \"Yes\";\r\n\t        this.alert.yesButtonResponse = yesResponse;\r\n\t        this.alert.okButton = false;\r\n\t        this.alert.alertHeader = true;\r\n\t        this.alert.alertTitle = \" Alert \";\r\n\t        this.alert.message = \"All changes will be lost, Do you want to continue?\";\r\n\t        this.alert.open();\r\n\t    };\r\n\t    AMHAssignmentContentComponent.prototype.alertLostChanges = function (cancelResponse, yesResponse, okResponse) {\r\n\t        if (cancelResponse === void 0) { cancelResponse = 0; }\r\n\t        if (yesResponse === void 0) { yesResponse = 1; }\r\n\t        if (okResponse === void 0) { okResponse = 2; }\r\n\t        this.alert.waitIcon = false;\r\n\t        this.alert.alertFooter = true;\r\n\t        this.alert.cancelButton = true;\r\n\t        this.alert.cancelButtonText = \"Cancel\";\r\n\t        this.alert.cancelButtonResponse = cancelResponse;\r\n\t        this.alert.yesButton = true;\r\n\t        this.alert.yesButtonText = \"Yes\";\r\n\t        this.alert.yesButtonResponse = yesResponse;\r\n\t        this.alert.okButton = true;\r\n\t        this.alert.okButtonText = \"No\";\r\n\t        this.alert.okButtonResponse = okResponse;\r\n\t        this.alert.alertHeader = true;\r\n\t        this.alert.alertTitle = \" Alert \";\r\n\t        this.alert.message = \"Do you want to save the changes done?\";\r\n\t        this.alert.open();\r\n\t    };\r\n\t    AMHAssignmentContentComponent.prototype.confirmClose = function (data) {\r\n\t        //this.logger.log(\"confirming ------------  \" + data);\r\n\t        switch (data) {\r\n\t            case 0:\r\n\t            case 400:\r\n\t                //this.logger.log(\"confirm cancel, do nothing\");\r\n\t                break;\r\n\t            case 1:\r\n\t                if (this.isCreation) {\r\n\t                    //If is creation then on save disable assignment code\r\n\t                    this.pendingAssignmentSave = 3;\r\n\t                }\r\n\t                this.saveWork.emit({ \"withRollbackType\": false, \"saveAndContinue\": true });\r\n\t                break;\r\n\t            case 2:\r\n\t                this.loadAssignment(this.unconfirmedAssignmentCode);\r\n\t                break;\r\n\t            case 100: //Cancel selection table change\r\n\t            case 300:\r\n\t                //this.logger.log(\"change assign cancel, rollback selection table\");\r\n\t                this.rollbackSelection.emit(true);\r\n\t                break;\r\n\t            case 101:\r\n\t                this.saveWork.emit({ \"withRollbackType\": true, \"saveAndContinue\": true });\r\n\t                //TODO: do the initialization only if save was OK.\r\n\t                //TODO: Add parentEventEmitter to do the initialization part.\r\n\t                this.pendingAssignmentSave = 2;\r\n\t                this.selectionRollbackType = this.config.type;\r\n\t                break;\r\n\t            case 102: //Do not save and just change selection table\r\n\t            case 301:\r\n\t                this.initialization();\r\n\t                this.selectionRollbackType = this.config.type;\r\n\t                break;\r\n\t            case 201:\r\n\t                this.saveWork.emit({ \"withRollbackType\": false, \"saveAndContinue\": true });\r\n\t                this.pendingAssignmentSave = 1;\r\n\t                break;\r\n\t            case 202:\r\n\t                this.navigateTo(this.pendingNavigationConfig.composentName, this.pendingNavigationConfig.parameters);\r\n\t                break;\r\n\t            case 401:\r\n\t                this.loadAssignment(this.unconfirmedAssignmentCode);\r\n\t                break;\r\n\t            default: return;\r\n\t        }\r\n\t    };\r\n\t    AMHAssignmentContentComponent.prototype.actionRuleNavigation = function (ruleCode) {\r\n\t        var parameters = { 'code': ruleCode, 'return_to': 'AMHAssignmentEdit', 'params': 'code=' + this.assignment.code + '&st=' + this.config.type };\r\n\t        if (this.hasThisAssignmentErrors()) {\r\n\t            return;\r\n\t        }\r\n\t        if (!this.isDirty) {\r\n\t            this.navigateTo(\"AMHRuleCreate\", parameters);\r\n\t            return;\r\n\t        }\r\n\t        this.pendingNavigationConfig = { \"composentName\": \"AMHRuleCreate\", \"parameters\": parameters };\r\n\t        this.alertLostChanges(0, 201, 202);\r\n\t    };\r\n\t    AMHAssignmentContentComponent.prototype.navigateTo = function (targetComponent, parameters) {\r\n\t        this.router.parent.navigate([targetComponent, parameters]);\r\n\t    };\r\n\t    AMHAssignmentContentComponent.prototype.actionSetDirtyTrue = function () {\r\n\t        this.isDirty = true;\r\n\t        this.amhAssignmentService.updateDirtyStatus(this.isDirty);\r\n\t    };\r\n\t    __decorate([\r\n\t        core_1.ViewChild(modal_1.Alert), \r\n\t        __metadata('design:type', Object)\r\n\t    ], AMHAssignmentContentComponent.prototype, \"alert\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(\"selection-config\"), \r\n\t        __metadata('design:type', routing_amh_1.AssignmentConfig)\r\n\t    ], AMHAssignmentContentComponent.prototype, \"config\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(\"save-status\"), \r\n\t        __metadata('design:type', String)\r\n\t    ], AMHAssignmentContentComponent.prototype, \"saveStatus\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Output(), \r\n\t        __metadata('design:type', core_1.EventEmitter)\r\n\t    ], AMHAssignmentContentComponent.prototype, \"enableSaveButtons\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Output(), \r\n\t        __metadata('design:type', core_1.EventEmitter)\r\n\t    ], AMHAssignmentContentComponent.prototype, \"assignmentUpdate\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Output(), \r\n\t        __metadata('design:type', core_1.EventEmitter)\r\n\t    ], AMHAssignmentContentComponent.prototype, \"saveWork\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Output(), \r\n\t        __metadata('design:type', core_1.EventEmitter)\r\n\t    ], AMHAssignmentContentComponent.prototype, \"rollbackSelection\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Output(), \r\n\t        __metadata('design:type', core_1.EventEmitter)\r\n\t    ], AMHAssignmentContentComponent.prototype, \"creationStatus\", void 0);\r\n\t    AMHAssignmentContentComponent = __decorate([\r\n\t        core_1.Component({\r\n\t            selector: 'amh-assignment-content',\r\n\t            template: __webpack_require__(1262),\r\n\t            providers: [amh_service_1.AMHAssignmentService, services_1.Auth],\r\n\t            directives: [common_1.NgClass, datatable_1.DataTableDirectives, modal_1.Alert, amh_rule_selection_1.AMHRuleSelectionComponent, amh_backend_selection_1.AMHBackendSelectionComponent, amh_assignment_search_1.AMHAssignmentSearchComponent,\r\n\t                directives_1.Permissions, directives_1.NotPermissions, directives_1.DisablePermissions]\r\n\t        }), \r\n\t        __metadata('design:paramtypes', [router_1.Router, router_1.RouteParams, amh_service_1.AMHAssignmentService, services_1.Auth, services_1.Logger])\r\n\t    ], AMHAssignmentContentComponent);\r\n\t    return AMHAssignmentContentComponent;\r\n\t}());\r\n\texports.AMHAssignmentContentComponent = AMHAssignmentContentComponent;\r\n\n\n/***/ },\n\n/***/ 1262:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<!--main content start-->\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-12 col-md-12 col-lg-12\\\">\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <!--style=\\\"padding-right: 0px;\\\"-->\\r\\n            <div class=\\\"col-sm-12 col-md-6 col-lg-6\\\" > \\r\\n                <div class=\\\"panel-heading\\\" style=\\\"border-top:solid #ccc 1px;\\\">\\r\\n                    <span class=\\\"panel-title word-break\\\" style=\\\"font-weight: 300;font-family: Lato;\\\">Assignment Details [<b>{{assignment.code}}</b>]</span>\\r\\n                    <i [routerLink]=\\\" ['AMHSimulation', { 'st': config.type, 'code': assignment.code }, 'AMHSimulatorComponent'] \\\" class=\\\"fa fa-play-circle-o pull-right margin-right image-pointer\\\" aria-hidden=\\\"true\\\" style=\\\"font-size:2em;margin-top: 7px;\\\"></i>\\r\\n                    <button [gpEnabled]=\\\"['amh.modify.assignment']\\\" class=\\\"btn btn-default btn-sm\\\" style=\\\"float: right; margin-top:5px;\\\" (click)=\\\"actionCreateNewAssignment()\\\"> Create Assignment </button>\\r\\n                    <!--<i class=\\\"fa fa-plus-square-o\\\" [ngClass]=\\\"{ 'image-pointer' : disableInputs }\\\" style=\\\"float: right; padding-top:10px; font-size:1.5em; border-right:0px;\\\" aria-hidden=\\\"true\\\" ></i>-->\\r\\n                    <!--<h3 class=\\\"panel-title\\\">Assignment Details</h3>-->\\r\\n                </div>\\r\\n                <div class=\\\"panel-body\\\" style=\\\"border:solid #ccc 1px; padding:0px 0px 15px 15px;\\\">\\r\\n                    <div class=\\\"col-sm-12 col-md-12 col-lg-12\\\" style=\\\"padding: 5px 10px 0px 0px;\\\">\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-sm-12 col-md-6 col-lg-6\\\">\\r\\n                            <amh-assignment-search [default-code]=\\\"assignmentTextFilter\\\" [assignment-type]=\\\"config.type\\\" (assignmentSelected)=\\\"selectAssignment($event)\\\"> </amh-assignment-search>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-sm-12 col-md-6 col-lg-6\\\"> \\r\\n                            &nbsp;\\r\\n                        </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group form-group-sm col-lg-6\\\" style=\\\"padding-left: 0px;\\\">\\r\\n                            <span class=\\\"col-sm-12 col-md-3 col-lg-3 control-label\\\" style=\\\"font-weight:300; padding-left: 0px;\\\">Code&nbsp;*</span>\\r\\n                            <div class=\\\"col-sm-12 col-md-9 col-lg-9\\\" style=\\\"padding:0px;\\\">\\r\\n                                <input [disabled]=\\\"disableInputs || !isCreation\\\" type=\\\"text\\\" size=\\\"20\\\" [value]=\\\"assignment.code\\\" (change)=\\\"assignmentCodeUpdate($event.target)\\\" />\\r\\n                            </div>\\r\\n                            <span *ngIf=\\\"assignmentCodeErrorMsg\\\">\\r\\n                                <div class=\\\"text-danger\\\">{{assignmentCodeErrorMsg}}</div>\\r\\n                            </span>\\r\\n                        </div>\\r\\n                        \\r\\n                        <div class=\\\"form-group form-group-sm col-lg-6\\\" style=\\\"padding-left:0px;\\\">\\r\\n                            <span class=\\\"col-sm-12 col-md-4 col-lg-4 control-label\\\" style=\\\"font-weight:300;  padding-left: 0px;\\\">Sequence&nbsp;*</span>\\r\\n                            <div class=\\\"col-sm-12 col-md-7 col-lg-7\\\" style=\\\"padding:0px;\\\">\\r\\n                                <input [disabled]=\\\"disableInputs\\\" type=\\\"number\\\" min=\\\"1\\\" max=\\\"1000\\\" size=\\\"6\\\" style=\\\"width:13em\\\" [value]=\\\"assignment.sequence\\\" (change)=\\\"assignmentSequenceUpdate($event.target)\\\"/>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"assignmentSequenceErrorMsg\\\" class=\\\"text-danger\\\">{{assignmentSequenceErrorMsg}}</div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group form-group-sm col-lg-6\\\" style=\\\"padding-left: 0px;\\\">\\r\\n                            <span class=\\\"col-sm-12 col-md-3 col-lg-3 control-label\\\" style=\\\"font-weight:300;  padding-left: 0px;\\\">Active</span>\\r\\n                            <div class=\\\"col-sm-12 col-md-9 col-lg-9\\\" style=\\\"padding:0px 5px 5px 1px;\\\">\\r\\n                                <input (change)=\\\"actionSetDirtyTrue()\\\" [disabled]=\\\"disableInputs\\\" type=\\\"checkbox\\\" [(ngModel)]=\\\"assignment.active\\\">\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group form-group-sm col-lg-6\\\" style=\\\"padding-left:0px;  margin:0px 0px 10px 0px;\\\">\\r\\n                            <span class=\\\"col-sm-12 col-md-4 col-lg-4 control-label\\\" style=\\\"font-weight:300;  padding-left: 0px;\\\">Description</span>\\r\\n                            <div class=\\\"col-sm-12 col-md-7 col-lg-7\\\" style=\\\"padding:5px 0px;\\\">\\r\\n                                <input (change)=\\\"actionSetDirtyTrue()\\\" [disabled]=\\\"disableInputs\\\" type=\\\"text\\\" size=\\\"20\\\" [(ngModel)]=\\\"assignment.description\\\" />\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        \\r\\n                        <div *ngIf=\\\"config.showExtraFields()\\\" class=\\\"form-group form-group-sm col-lg-6\\\" style=\\\"padding-left: 0px;\\\">\\r\\n                            <span class=\\\"col-sm-12 col-md-3 col-lg-3 control-label\\\" style=\\\"font-weight:300;  padding-left: 0px;\\\">Name</span>\\r\\n                            <div class=\\\"col-sm-12 col-md-9 col-lg-9\\\" style=\\\"padding:5px 5px;\\\">\\r\\n                                <input (change)=\\\"actionSetDirtyTrue()\\\" [disabled]=\\\"disableInputs\\\" type=\\\"text\\\" size=\\\"20\\\" [(ngModel)]=\\\"assignment.name\\\" />\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div *ngIf=\\\"config.showExtraFields()\\\" class=\\\"form-group form-group-sm col-lg-6\\\" style=\\\"padding-left:0px;\\\">\\r\\n                            <span class=\\\"col-sm-12 col-md-4 col-lg-4 control-label\\\" style=\\\"font-weight:300;  padding-left: 0px;\\\">Num Copies</span>\\r\\n                            <div class=\\\"col-sm-12 col-md-7 col-lg-7\\\" style=\\\"padding:0px;\\\">\\r\\n                                <input (change)=\\\"actionSetDirtyTrue()\\\" [disabled]=\\\"disableInputs\\\" type=\\\"number\\\" min=\\\"1\\\" max=\\\"1000\\\" size=\\\"6\\\" style=\\\"width:13em\\\" [value]=\\\"assignment.copies\\\" (change)=\\\"assignmentCopiesUpdate($event.target)\\\"/>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"assignmentCopiesErrorMsg\\\" class=\\\"text-danger\\\">{{assignmentCopiesErrorMsg}}</div>\\r\\n                        </div>\\r\\n                        <div *ngIf=\\\"!config.showExtraFields() && !assignmentSequenceErrorMsg && !assignmentCopiesErrorMsg && !assignmentCodeErrorMsg\\\" style=\\\"margin-bottom:70px;\\\">&nbsp;</div>\\r\\n                        <div *ngIf=\\\"config.showExtraFields() && !assignmentSequenceErrorMsg && !assignmentCopiesErrorMsg && !assignmentCodeErrorMsg\\\" style=\\\"margin-bottom:30px;\\\">&nbsp;</div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-12 col-md-6 col-lg-6\\\">\\r\\n                <div class=\\\"row col-sm-12 col-md-12 col-lg-12\\\">\\r\\n                <div class=\\\"panel-heading\\\" style=\\\"border-top:solid #ccc 1px;\\\">\\r\\n                    <h3 class=\\\"panel-title\\\">Backend Selection</h3>\\r\\n                </div>\\r\\n                <!--padding:10px 15px;-->\\r\\n                <div class=\\\"panel-body\\\" style=\\\"border:solid #ccc 1px; \\\">\\r\\n                    <amh-backend-selection *gpIf=\\\"['amh.modify.assignment']\\\" [disabled]=\\\"disableInputs\\\" [max-backends]=\\\"config.maxBackendsAllowed\\\" [existing-backends]=\\\"usedBackends\\\" (backendAdded)=\\\"addBackend($event)\\\"\\r\\n                        (backendDeleted)=\\\"deleteBackend($event)\\\"></amh-backend-selection>\\r\\n                    <amh-backend-selection *gpNotIf=\\\"['amh.modify.assignment']\\\" disabled=true [max-backends]=\\\"config.maxBackendsAllowed\\\" [existing-backends]=\\\"usedBackends\\\"></amh-backend-selection>\\r\\n                </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <!-- ./row -->\\r\\n        <div class=\\\"row col-sm-12 col-md-12 col-lg-12\\\" style=\\\"margin-top:10px;\\\">\\r\\n            <!--<div class=\\\"col-sm-12 col-md-12 col-lg-12\\\">-->\\r\\n                <div class=\\\"panel-heading\\\" style=\\\"border-top:solid #ccc 1px;\\\">\\r\\n\\r\\n                    <!--<h3 class=\\\"panel-title\\\">Rule Selection</h3>-->\\r\\n                    <span class=\\\"panel-title word-break\\\" style=\\\"font-weight: 300;font-family: Lato;\\\">Rule Selection</span>\\r\\n                    <button *gpIf=\\\"['amh.modify.rule']\\\" [disabled]=\\\"disableRuleCreation()\\\" class=\\\"btn btn-default btn-sm\\\" style=\\\"float: right; margin-top:5px;\\\" (click)=\\\"actionRuleNavigation()\\\"> Create Rule </button>\\r\\n                    <button *gpNotIf=\\\"['amh.modify.rule']\\\" disabled=true class=\\\"btn btn-default btn-sm\\\" style=\\\"float: right; margin-top:5px;\\\"> Create Rule </button>\\r\\n                </div>\\r\\n                <div class=\\\"panel-body\\\" style=\\\"border:solid #ccc 1px; padding: 0px 15px 0px 15px;\\\">\\r\\n                    <amh-rule-selection *gpIf=\\\"['amh.modify.assignment']\\\" [disabled]=\\\"disableInputs\\\" [assignment-type]=\\\"config.type\\\" [assignment-code]=\\\"assignment.code\\\" [existing-rules]=\\\"assignment.rules\\\" (statusChanged)=\\\"actionChangeRuleStatus($event)\\\"\\r\\n                        (ruleAdded)=\\\"addRule($event)\\\" (ruleDeleted)=\\\"deleteRule($event)\\\" (ruleNavigate)=\\\"actionRuleNavigation($event)\\\"></amh-rule-selection>\\r\\n                    <amh-rule-selection *gpNotIf=\\\"['amh.modify.assignment']\\\" disabled=true [assignment-type]=\\\"config.type\\\" [assignment-code]=\\\"assignment.code\\\" [existing-rules]=\\\"assignment.rules\\\"\\r\\n                         (ruleNavigate)=\\\"actionRuleNavigation($event)\\\"></amh-rule-selection>\\r\\n                </div>\\r\\n            <!--</div>-->\\r\\n        </div>\\r\\n        <!-- ./row -->\\r\\n    </div>\\r\\n</div>\\r\\n<!--/.row -->\\r\\n\\r\\n\\r\\n<alert (alertOutput)=\\\"confirmClose($event)\\\"></alert>\"\n\n/***/ },\n\n/***/ 1226:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tfunction __export(m) {\r\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n\t}\r\n\t__export(__webpack_require__(1225));\r\n\n\n/***/ },\n\n/***/ 1227:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar core_1 = __webpack_require__(30);\r\n\tvar amh_service_1 = __webpack_require__(1164);\r\n\tvar router_1 = __webpack_require__(58);\r\n\tvar routing_amh_1 = __webpack_require__(880);\r\n\tvar option_1 = __webpack_require__(926);\r\n\tvar modal_1 = __webpack_require__(887);\r\n\tvar menu_1 = __webpack_require__(531);\r\n\tvar header_secondary_1 = __webpack_require__(530);\r\n\tvar amh_assignment_content_1 = __webpack_require__(1226);\r\n\tvar amh_selection_table_1 = __webpack_require__(1166);\r\n\tvar directives_1 = __webpack_require__(258);\r\n\tvar services_1 = __webpack_require__(38);\r\n\t//this.logger.log('`AMHAssignment` component loaded asynchronously');\r\n\tvar AMHAssignmentComponent = (function () {\r\n\t    function AMHAssignmentComponent(router, routeParams, amhAssignmentService, auth, logger) {\r\n\t        this.router = router;\r\n\t        this.amhAssignmentService = amhAssignmentService;\r\n\t        this.auth = auth;\r\n\t        this.logger = logger;\r\n\t        this.disabledSaveButtons = false;\r\n\t        this.assignment = undefined;\r\n\t        this.returnParameters = {};\r\n\t        this.saveStatus = \"\";\r\n\t        this.confirmation = undefined;\r\n\t        this.menuConfig = [\r\n\t            new menu_1.MenuConfig(\"fa fa-home\", \"Home\", \"Home\"),\r\n\t            new menu_1.MenuConfig(\"fa fa-sitemap\", \"AMHHome\", \"AMH Routing\"),\r\n\t            new menu_1.MenuConfig(\"fa fa-cloud-download\", \"\", \"Back End Assignment Rule Criteria\")];\r\n\t        this.selectionTables = [\r\n\t            new option_1.Option(1, \"BK_CH\", \"Backend Channel\"),\r\n\t            new option_1.Option(2, \"DTN_CPY\", \"Distribution Copy\"),\r\n\t            new option_1.Option(4, \"FEED_DTN_CPY\", \"Feedback Distribution Copy\")\r\n\t        ];\r\n\t        this.setReturnTo(routeParams.params['return_to']);\r\n\t        this.addReturnParamter(\"st\", routeParams.params['st']);\r\n\t        this.updateSelectionTable(this.selectedAssignmentType(+routeParams.params['st']));\r\n\t    }\r\n\t    AMHAssignmentComponent.prototype.ngOnInit = function () {\r\n\t        //this.logger.log('hello `AMH assignment ` component');\r\n\t    };\r\n\t    AMHAssignmentComponent.prototype.selectedAssignmentType = function (assignType) {\r\n\t        var typeSelected = this.selectionTables.find(function (type) { return type.id === assignType; });\r\n\t        return typeSelected ? typeSelected : this.selectionTables[0];\r\n\t    };\r\n\t    AMHAssignmentComponent.prototype.addReturnParamter = function (name, value) {\r\n\t        if (!value) {\r\n\t            return;\r\n\t        }\r\n\t        this.returnParameters[name] = value;\r\n\t    };\r\n\t    AMHAssignmentComponent.prototype.setReturnTo = function (params) {\r\n\t        this.returnToString = 'AMHHome';\r\n\t        //this.logger.log(\" receiving params to return = \" + params);\r\n\t        if (!params || params.length == 0) {\r\n\t            return;\r\n\t        }\r\n\t        var parameters = params.split('&');\r\n\t        this.returnToString = parameters[0] || 'AMHHome';\r\n\t        //this.logger.log(\" paramteres to return \" + parameters);\r\n\t    };\r\n\t    AMHAssignmentComponent.prototype.alertOpen = function () {\r\n\t        this.alert.alertFooter = false;\r\n\t        this.alert.cancelButton = false;\r\n\t        this.alert.okButton = false;\r\n\t        this.alert.alertHeader = true;\r\n\t        this.alert.alertTitle = \"Alert\";\r\n\t        this.alert.message = \"Save in progress...\";\r\n\t        this.alert.cancelButtonText = \"Ok\";\r\n\t        this.alert.cancelButtonResponse = 0;\r\n\t        this.alert.open();\r\n\t    };\r\n\t    AMHAssignmentComponent.prototype.closeAlert = function (saveAndContinue, withError) {\r\n\t        var _this = this;\r\n\t        //setTimeout(() => this.alert.cancel(), 1000);\r\n\t        this.alert.cancel();\r\n\t        if (!saveAndContinue && !withError) {\r\n\t            setTimeout(function () { return _this.router.parent.navigate([_this.returnToString, _this.returnParameters]); }, 1200);\r\n\t        }\r\n\t    };\r\n\t    //ROMOVE this useless method\r\n\t    AMHAssignmentComponent.prototype.isValidAssigment = function () {\r\n\t        if (!this.assignment) {\r\n\t            return { isValid: false, errorMsgs: [\"No assignment defined\"] };\r\n\t        }\r\n\t        // let errorMessages = this.validateSequences();\r\n\t        var errorMessages = \"\";\r\n\t        return { isValid: (!errorMessages || errorMessages.length == 0), errorMsgs: errorMessages };\r\n\t    };\r\n\t    AMHAssignmentComponent.prototype.msgEmptyRules = function () {\r\n\t        this.alert.waitIcon = false;\r\n\t        this.alert.alertFooter = true;\r\n\t        this.alert.okButton = false;\r\n\t        this.alert.alertHeader = true;\r\n\t        this.alert.alertTitle = \"Alert\";\r\n\t        this.alert.message = \"No rules assigned. Every message will be send to the assigned backend(s).\";\r\n\t        this.alert.cancelButton = true;\r\n\t        this.alert.cancelButtonText = \"Cancel\";\r\n\t        this.alert.cancelButtonResponse = 0;\r\n\t        this.alert.yesButton = true;\r\n\t        this.alert.yesButtonText = \"OK\";\r\n\t        this.alert.yesButtonResponse = 1;\r\n\t        this.alert.open();\r\n\t    };\r\n\t    AMHAssignmentComponent.prototype.alertResponse = function (resp) {\r\n\t        switch (resp) {\r\n\t            case 0:\r\n\t                this.saveStatus = \"Cancel\";\r\n\t                break;\r\n\t            case 1:\r\n\t                this.saveStatus = \"\";\r\n\t                this.doSave(this.saveAndContinue, this.withRollbackType);\r\n\t                break;\r\n\t            case 300:\r\n\t                //Do nothing\r\n\t                break;\r\n\t            case 301:\r\n\t                this.router.parent.navigate([this.navigateUrl, this.returnParameters]);\r\n\t                break;\r\n\t        }\r\n\t    };\r\n\t    AMHAssignmentComponent.prototype.save = function (saveAndContinue, withRollbackType) {\r\n\t        if (this.assignment.rules.length == 0) {\r\n\t            this.msgEmptyRules();\r\n\t            this.saveAndContinue = saveAndContinue;\r\n\t            this.withRollbackType = withRollbackType;\r\n\t            return;\r\n\t        }\r\n\t        this.doSave(saveAndContinue, withRollbackType);\r\n\t    };\r\n\t    AMHAssignmentComponent.prototype.doSave = function (saveAndContinue, withRollbackType) {\r\n\t        var _this = this;\r\n\t        var assignmentStatus = this.isValidAssigment();\r\n\t        if (!assignmentStatus.isValid) {\r\n\t            assignmentStatus.errorMsgs.forEach(function (x) { return _this.logger.error(x); });\r\n\t        }\r\n\t        // else {\r\n\t        //   this.logger.log(\"Everything is O.K assignment with sequence \" + this.assignment.sequence);\r\n\t        //   this.assignment.rules.forEach(r => this.logger.log(\"       \" + r.code + \" - \" + r.sequence));\r\n\t        // }\r\n\t        var assignmentType = withRollbackType ? this.optionRollback.id : this.defaultOption.id;\r\n\t        //  this.logger.log(\"saving assignment ...\" + this.assignment.backendPrimaryKey);\r\n\t        this.alertOpen();\r\n\t        var send;\r\n\t        if (this.isCreation) {\r\n\t            send = this.amhAssignmentService.createAssignment(assignmentType, this.assignment, this.auth.getUser());\r\n\t        }\r\n\t        else {\r\n\t            send = this.amhAssignmentService.saveAssignment(assignmentType, this.assignment, this.auth.getUser());\r\n\t        }\r\n\t        send.subscribe(function (data) {\r\n\t            //this.logger.log(\"[saveRule] %s\", data);\r\n\t        }, function (err) {\r\n\t            _this.logger.error(\"[saveRule] Can't get assignments. Error code: %s, URL: %s \", err.status, err.url);\r\n\t            _this.alert.message = \"An error has occurred, the backend cannot be assigned !!\";\r\n\t            _this.closeAlert(saveAndContinue, true);\r\n\t            _this.saveStatus = \"Error\";\r\n\t            if (saveAndContinue) {\r\n\t                _this.confirmation = { msg: 'An error has occurred, while saving this assignment !!', type: 'danger', closable: true };\r\n\t            }\r\n\t        }, function () {\r\n\t            //this.logger.log(\"[saveRule] assignment's rules from backend [%s,%s+] retrieved\");\r\n\t            _this.alert.message = \"Assignment done sucessfuly !!\";\r\n\t            _this.closeAlert(saveAndContinue);\r\n\t            if (saveAndContinue) {\r\n\t                _this.confirmation = { msg: 'Assignment saved', type: 'success', closable: true };\r\n\t            }\r\n\t            _this.saveStatus = \"OK\";\r\n\t            _this.isCreation = false;\r\n\t        });\r\n\t    };\r\n\t    AMHAssignmentComponent.prototype.actionCancel = function () {\r\n\t        // this.logger.log(\"canceling assignment ...\");\r\n\t        this.verifyAndNavigate(this.returnToString, 300, 301);\r\n\t        //this.router.parent.navigate([, this.returnParameters]);\r\n\t    };\r\n\t    AMHAssignmentComponent.prototype.updateDisabledButtons = function (data) {\r\n\t        //  this.logger.log(\"disabledSaveButtons ------------ \" + data);\r\n\t        this.disabledSaveButtons = data;\r\n\t    };\r\n\t    AMHAssignmentComponent.prototype.saveWork = function (config) {\r\n\t        // this.logger.log(\"saving work saveAndContinue=\" + config.saveAndContinue+ \" withRollback= \"+  config.withRollbackType);\r\n\t        this.save(config.saveAndContinue, config.withRollbackType);\r\n\t    };\r\n\t    AMHAssignmentComponent.prototype.updateAssignment = function (assignment) {\r\n\t        //  this.logger.log(\"assignment updated ------------  \" + assignment);\r\n\t        //  assignment.rules.forEach(rule => this.logger.log(\" rule code in assignment \" + rule.code));\r\n\t        this.assignment = assignment;\r\n\t    };\r\n\t    AMHAssignmentComponent.prototype.updateSelectionTable = function (option) {\r\n\t        var codeToFind = this.defaultOption ? this.defaultOption.code : option.code;\r\n\t        this.optionRollback = this.selectionTables.find(function (innerOption) { return innerOption.code === codeToFind; });\r\n\t        this.defaultOption = option;\r\n\t        this.assignmentConfig = new routing_amh_1.AssignmentConfig(option.id);\r\n\t        // this.logger.log(\"selection table updated ------------  \" + option.description + \"  MAX \" + this.assignmentConfig.maxBackendsAllowed);\r\n\t    };\r\n\t    AMHAssignmentComponent.prototype.rollbackSelectionTable = function (rollbackCommand) {\r\n\t        //  this.logger.log(\"rolling back to code \" + this.optionRollback.code);\r\n\t        if (this.assignmentConfig.type == this.optionRollback.id) {\r\n\t            this.logger.debug(\"No changes to rollback\");\r\n\t            return;\r\n\t        }\r\n\t        this.defaultOption = this.optionRollback;\r\n\t        this.assignmentConfig = new routing_amh_1.AssignmentConfig(this.defaultOption.id);\r\n\t    };\r\n\t    AMHAssignmentComponent.prototype.actionUpdateCreationStatus = function (isCreation) {\r\n\t        this.isCreation = isCreation;\r\n\t    };\r\n\t    AMHAssignmentComponent.prototype.alertPreventLostChanges = function (cancelResponse, yesResponse) {\r\n\t        this.alert.waitIcon = false;\r\n\t        this.alert.alertFooter = true;\r\n\t        this.alert.cancelButton = true;\r\n\t        this.alert.cancelButtonText = \"Cancel\";\r\n\t        this.alert.cancelButtonResponse = cancelResponse;\r\n\t        this.alert.yesButton = true;\r\n\t        this.alert.yesButtonText = \"Yes\";\r\n\t        this.alert.yesButtonResponse = yesResponse;\r\n\t        this.alert.okButton = false;\r\n\t        this.alert.alertHeader = true;\r\n\t        this.alert.alertTitle = \" Alert \";\r\n\t        this.alert.message = \"All changes will be lost, Do you want to continue?\";\r\n\t        this.alert.open();\r\n\t    };\r\n\t    AMHAssignmentComponent.prototype.actionNavigate = function (link) {\r\n\t        // this.logger.debug(\" going to \"+link);\r\n\t        // this.logger.debug(\" is dirty ?? \"+this.amhAssignmentService.isAssignmentStatusDirty());\r\n\t        this.verifyAndNavigate(link, 300, 301);\r\n\t    };\r\n\t    AMHAssignmentComponent.prototype.verifyAndNavigate = function (link, cancelResponse, yesResponse) {\r\n\t        var isDirty = this.amhAssignmentService.isAssignmentStatusDirty();\r\n\t        if (isDirty) {\r\n\t            this.logger.debug(\"inside if \" + isDirty);\r\n\t            this.navigateUrl = link;\r\n\t            this.alertPreventLostChanges(cancelResponse, yesResponse);\r\n\t            return;\r\n\t        }\r\n\t        this.logger.debug(\"it was not dirty going to \" + link);\r\n\t        this.router.parent.navigate([link, this.returnParameters]);\r\n\t    };\r\n\t    __decorate([\r\n\t        core_1.ViewChild(modal_1.Alert), \r\n\t        __metadata('design:type', Object)\r\n\t    ], AMHAssignmentComponent.prototype, \"alert\", void 0);\r\n\t    AMHAssignmentComponent = __decorate([\r\n\t        core_1.Component({\r\n\t            selector: 'amh-assignment',\r\n\t            template: __webpack_require__(1263),\r\n\t            providers: [amh_service_1.AMHAssignmentService, services_1.Auth],\r\n\t            directives: [amh_selection_table_1.AMHSelectionTableComponent, amh_assignment_content_1.AMHAssignmentContentComponent, modal_1.Alert, header_secondary_1.HeaderSecondary, directives_1.Permissions, directives_1.NotPermissions]\r\n\t        }), \r\n\t        __metadata('design:paramtypes', [router_1.Router, router_1.RouteParams, amh_service_1.AMHAssignmentService, services_1.Auth, services_1.Logger])\r\n\t    ], AMHAssignmentComponent);\r\n\t    return AMHAssignmentComponent;\r\n\t}());\r\n\texports.AMHAssignmentComponent = AMHAssignmentComponent;\r\n\n\n/***/ },\n\n/***/ 1263:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<section id=\\\"main-content\\\">\\r\\n    <section class=\\\"wrapper\\\">\\r\\n        <menu-header [header-alert]=\\\"confirmation\\\" [header-navigate]=\\\"false\\\" [header-menu]=\\\"menuConfig\\\" (navigate)=\\\"actionNavigate($event)\\\"></menu-header>\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-12 col-md-12 col-lg-12\\\">\\r\\n                <div class=\\\"panel panel-default\\\">\\r\\n                    <div class=\\\"panel-heading\\\">\\r\\n                    <div class=\\\"row col-sm-12 col-md-12 col-lg-12\\\">\\r\\n                        <amh-selection-table style=\\\"padding:0px;\\\" class=\\\"col-sm-4 col-md-4 col-lg-4\\\" [default-option]=\\\"defaultOption\\\" [options]=\\\"selectionTables\\\" (tableSelected)=\\\"updateSelectionTable($event)\\\">\\r\\n                        </amh-selection-table>\\r\\n                        <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">&nbsp;</div>\\r\\n                    </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"panel-body\\\" style=\\\"padding-top:8px;\\\">\\r\\n                        <amh-assignment-content [save-status]=\\\"saveStatus\\\" [selection-config]=\\\"assignmentConfig\\\" (rollbackSelection)=\\\"rollbackSelectionTable($event)\\\" (enableSaveButtons)=\\\"updateDisabledButtons($event)\\\" (saveWork)=\\\"saveWork($event)\\\"\\r\\n                             (creationStatus)=\\\"actionUpdateCreationStatus($event)\\\" (assignmentUpdate)=\\\"updateAssignment($event)\\\">\\r\\n                        </amh-assignment-content>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <!--/.row-->\\r\\n    </section>\\r\\n</section>\\r\\n\\r\\n<alert (alertOutput)=\\\"alertResponse($event)\\\"></alert>\\r\\n\\r\\n<footer class=\\\"footer dark-bg\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-12 col-md-12 col-lg-12\\\">\\r\\n            <div class=\\\"top-nav notification-row pull-right\\\">\\r\\n                <button *gpIf=\\\"['amh.modify.assignment']\\\" [disabled]=\\\"disabledSaveButtons\\\" class=\\\"btn btn-primary\\\" (click)=\\\"save(true)\\\"> Save & Continue</button>\\r\\n                <button *gpIf=\\\"['amh.modify.assignment']\\\" [disabled]=\\\"disabledSaveButtons\\\" class=\\\"btn btn-primary\\\" (click)=\\\"save(false)\\\"> Save </button>\\r\\n                <button *gpNotIf=\\\"['amh.modify.assignment']\\\" disabled=true class=\\\"btn btn-primary\\\"> Save & Continue</button>\\r\\n                <button *gpNotIf=\\\"['amh.modify.assignment']\\\" disabled=true class=\\\"btn btn-primary\\\"> Save </button>\\r\\n                <button class=\\\"btn btn-default\\\" (click)=\\\"actionCancel()\\\"> Back</button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</footer>\"\n\n/***/ },\n\n/***/ 1141:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tfunction __export(m) {\r\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n\t}\r\n\t__export(__webpack_require__(1227));\r\n\n\n/***/ },\n\n/***/ 1228:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar core_1 = __webpack_require__(30);\r\n\tvar amh_service_1 = __webpack_require__(1164);\r\n\tvar datatable_1 = __webpack_require__(900);\r\n\tvar routing_amh_1 = __webpack_require__(880);\r\n\tvar modal_1 = __webpack_require__(887);\r\n\tvar services_1 = __webpack_require__(38);\r\n\t//this.logger.log('`AMHBackendSelection` component loaded asynchronously');\r\n\tvar AMHBackendSelectionComponent = (function () {\r\n\t    function AMHBackendSelectionComponent(amhAssignmentService, elementRef, logger) {\r\n\t        this.amhAssignmentService = amhAssignmentService;\r\n\t        this.elementRef = elementRef;\r\n\t        this.logger = logger;\r\n\t        this.maxBackends = 1000;\r\n\t        this.disabledParam = false;\r\n\t        this.backendAdded = new core_1.EventEmitter();\r\n\t        this.backendDeleted = new core_1.EventEmitter();\r\n\t        this.backends = [];\r\n\t        this.originalBackends = [];\r\n\t        this.bodyMargin = 0;\r\n\t        this.selectedBackend = new routing_amh_1.Backend(\"\", \"\");\r\n\t        this.selectedPkDirection = \"\";\r\n\t        this.backendCodeToDelete = undefined;\r\n\t        this.activePage = 1;\r\n\t        this.disabled = true;\r\n\t        this.backendDataSource = this.amhAssignmentService.findBackends();\r\n\t    }\r\n\t    AMHBackendSelectionComponent.prototype.ngOnChanges = function (changes) {\r\n\t        //this.logger.log(\" updating backends \" + changes);\r\n\t        if (changes[\"existingBackends\"]) {\r\n\t            //this.logger.log(\"existingBackends has been changed,so update\");\r\n\t            this.dynamicUpdate();\r\n\t        }\r\n\t    };\r\n\t    AMHBackendSelectionComponent.prototype.ngOnInit = function () {\r\n\t        var _this = this;\r\n\t        //this.logger.log('hello `AMH backend selection` component');\r\n\t        // Get the data from the server\r\n\t        this.backendDataSource.subscribe(function (data) {\r\n\t            var resp = amh_service_1.AMHAssignmentService.getFromSource(data);\r\n\t            resp.forEach(function (backend) {\r\n\t                _this.originalBackends.push(backend);\r\n\t            });\r\n\t        }, function (err) {\r\n\t            return _this.logger.error(\"Can't get backends. Error code: %s, URL: %s \", err.status, err.url);\r\n\t        });\r\n\t    };\r\n\t    AMHBackendSelectionComponent.prototype.handleClick = function (event) {\r\n\t        var clickedComponent = event.target;\r\n\t        var inside = false;\r\n\t        do {\r\n\t            // this.logger.log(clickedComponent + \" equals \" + (clickedComponent === this.elementRef.nativeElement) );\r\n\t            if (clickedComponent === this.elementRef.nativeElement) {\r\n\t                inside = true;\r\n\t            }\r\n\t            clickedComponent = clickedComponent.parentNode;\r\n\t        } while (clickedComponent);\r\n\t        if (!inside) {\r\n\t            this.backends = [];\r\n\t            if (!this.selectedBackend.code || !this.selectedBackend.pkDirection) {\r\n\t                this.selectedBackend = new routing_amh_1.Backend(\"\", \"\");\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    AMHBackendSelectionComponent.prototype.select = function (backend) {\r\n\t        this.selectedBackend = new routing_amh_1.Backend(backend.pkCode, backend.pkDirection, backend.code, backend.dataOwner, backend.description);\r\n\t        this.selectedPkDirection = backend.pkDirection;\r\n\t        this.backends = [];\r\n\t    };\r\n\t    AMHBackendSelectionComponent.prototype.dynamicUpdate = function () {\r\n\t        this.calculeInputDisabled();\r\n\t        this.calculeBodyMargin();\r\n\t    };\r\n\t    AMHBackendSelectionComponent.prototype.calculeInputDisabled = function () {\r\n\t        // this.logger.log(\"this.disabledParam \" + this.disabledParam + \" this.existingBackends.length  \" + this.existingBackends.length +\" this.maxBackends \"+ this.maxBackends);\r\n\t        this.disabled = this.disabledParam || this.existingBackends.length >= this.maxBackends;\r\n\t    };\r\n\t    AMHBackendSelectionComponent.prototype.calculeBodyMargin = function () {\r\n\t        if (this.existingBackends.length >= 4) {\r\n\t            this.bodyMargin = 0;\r\n\t            return;\r\n\t        }\r\n\t        if (this.existingBackends.length == 0) {\r\n\t            this.bodyMargin = 67;\r\n\t            return;\r\n\t        }\r\n\t        if (this.existingBackends.length == 1) {\r\n\t            this.bodyMargin = 39;\r\n\t            return;\r\n\t        }\r\n\t        if (this.existingBackends.length == 2) {\r\n\t            this.bodyMargin = 22;\r\n\t            return;\r\n\t        }\r\n\t        if (this.existingBackends.length == 3) {\r\n\t            this.bodyMargin = 4;\r\n\t            return;\r\n\t        }\r\n\t    };\r\n\t    AMHBackendSelectionComponent.prototype.add = function () {\r\n\t        if (!this.selectedBackend.pkCode || !this.selectedBackend.pkDirection) {\r\n\t            //this.logger.log(\"no backend selected\");\r\n\t            return;\r\n\t        }\r\n\t        // else {\r\n\t        //   this.logger.log(\"selected backend \" + this.selectedBackend.pkCode);\r\n\t        // }\r\n\t        var addedBackend = new routing_amh_1.Backend(this.selectedBackend.pkCode, this.selectedBackend.pkDirection, this.selectedBackend.code, this.selectedBackend.dataOwner, this.selectedBackend.description, this.selectedBackend.lockCode);\r\n\t        this.backendAdded.emit(addedBackend);\r\n\t        this.existingBackends = [addedBackend].concat(this.existingBackends);\r\n\t        this.selectedBackend = new routing_amh_1.Backend(\"\", \"\");\r\n\t        this.selectedPkDirection = \"\";\r\n\t        // this.logger.log(\" adding \" + addedBackend.pkCode);\r\n\t        this.dynamicUpdate();\r\n\t        //this.existingBackends.forEach(ee => this.logger.log(\" code \" + ee.pkCode + \" dir \" + ee.pkDirection));\r\n\t    };\r\n\t    AMHBackendSelectionComponent.prototype.deleteBackend = function (backend) {\r\n\t        this.confirmBackendDeletion();\r\n\t        this.backendCodeToDelete = backend.pkCode;\r\n\t    };\r\n\t    AMHBackendSelectionComponent.prototype.confirmBackendDeletion = function () {\r\n\t        this.alert.waitIcon = false;\r\n\t        this.alert.alertFooter = true;\r\n\t        this.alert.cancelButton = false;\r\n\t        this.alert.yesButton = true;\r\n\t        this.alert.yesButtonText = \"Yes\";\r\n\t        this.alert.yesButtonResponse = 21;\r\n\t        this.alert.okButton = true;\r\n\t        this.alert.okButtonText = \"No\";\r\n\t        this.alert.okButtonResponse = 22;\r\n\t        this.alert.alertHeader = true;\r\n\t        this.alert.alertTitle = \" Alert \";\r\n\t        this.alert.message = \"Are you sure you want to unassign this backend?\";\r\n\t        this.alert.open();\r\n\t    };\r\n\t    AMHBackendSelectionComponent.prototype.confirmClose = function (data) {\r\n\t        var _this = this;\r\n\t        // this.logger.log(\"confirming backend deletion ------------  \" + data);\r\n\t        if (data === 0) {\r\n\t            return;\r\n\t        }\r\n\t        if (data == 21) {\r\n\t            //  this.logger.log(\"deleting... \" + this.backendCodeToDelete);\r\n\t            this.existingBackends = this.existingBackends.filter(function (item) {\r\n\t                return item[\"pkCode\"] !== _this.backendCodeToDelete;\r\n\t            });\r\n\t            this.backendDeleted.emit(this.backendCodeToDelete);\r\n\t            this.backendCodeToDelete = \"\";\r\n\t            this.table.setPage(1, 3);\r\n\t            this.dynamicUpdate();\r\n\t        }\r\n\t        if (data == 22) {\r\n\t            //  this.logger.log(\"no deletion for backend \" + this.backendCodeToDelete);\r\n\t            this.backendCodeToDelete = \"\";\r\n\t        }\r\n\t    };\r\n\t    AMHBackendSelectionComponent.prototype.updateBackends = function (filterText) {\r\n\t        if (!filterText) {\r\n\t            this.backends = [];\r\n\t            return;\r\n\t        }\r\n\t        var assignedBackendCodeMap = {};\r\n\t        this.selectedPkDirection = \"\";\r\n\t        this.selectedBackend.pkDirection = \"\";\r\n\t        this.existingBackends.forEach(function (backend) { return assignedBackendCodeMap[backend.pkCode] = true; });\r\n\t        var originalBackendsMinusAssignedBackends = this.originalBackends.filter(function (backend) {\r\n\t            return !assignedBackendCodeMap[backend.pkCode];\r\n\t        });\r\n\t        var valueToFind = filterText.toUpperCase();\r\n\t        var filteredBackendExpresssion = originalBackendsMinusAssignedBackends.filter(function (item) {\r\n\t            return item[\"pkCode\"].toUpperCase().match(valueToFind);\r\n\t        });\r\n\t        var filteredBackendCode = originalBackendsMinusAssignedBackends.filter(function (item) {\r\n\t            return item[\"pkDirection\"].toUpperCase().match(valueToFind);\r\n\t        });\r\n\t        var filteredData = filteredBackendExpresssion.concat(filteredBackendCode);\r\n\t        var uniqueList = [];\r\n\t        filteredData.forEach(function (item) {\r\n\t            var found = uniqueList.find(function (value, index, array) { return item[\"pkCode\"] == value[\"pkCode\"]; });\r\n\t            if (!found) {\r\n\t                uniqueList.push(item);\r\n\t            }\r\n\t        });\r\n\t        this.backends = uniqueList.map(function (backend) { backend.pkCode = backend.pkCode.toUpperCase(); return backend; });\r\n\t    };\r\n\t    __decorate([\r\n\t        core_1.ViewChild(modal_1.Alert), \r\n\t        __metadata('design:type', Object)\r\n\t    ], AMHBackendSelectionComponent.prototype, \"alert\", void 0);\r\n\t    __decorate([\r\n\t        core_1.ViewChild(datatable_1.DataTable), \r\n\t        __metadata('design:type', Object)\r\n\t    ], AMHBackendSelectionComponent.prototype, \"table\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(\"existing-backends\"), \r\n\t        __metadata('design:type', Array)\r\n\t    ], AMHBackendSelectionComponent.prototype, \"existingBackends\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(\"max-backends\"), \r\n\t        __metadata('design:type', Number)\r\n\t    ], AMHBackendSelectionComponent.prototype, \"maxBackends\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(\"disabled\"), \r\n\t        __metadata('design:type', Boolean)\r\n\t    ], AMHBackendSelectionComponent.prototype, \"disabledParam\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Output(), \r\n\t        __metadata('design:type', core_1.EventEmitter)\r\n\t    ], AMHBackendSelectionComponent.prototype, \"backendAdded\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Output(), \r\n\t        __metadata('design:type', core_1.EventEmitter)\r\n\t    ], AMHBackendSelectionComponent.prototype, \"backendDeleted\", void 0);\r\n\t    AMHBackendSelectionComponent = __decorate([\r\n\t        core_1.Component({\r\n\t            selector: 'amh-backend-selection',\r\n\t            template: __webpack_require__(1264),\r\n\t            host: {\r\n\t                '(document:click)': 'handleClick($event)',\r\n\t            },\r\n\t            providers: [amh_service_1.AMHAssignmentService],\r\n\t            directives: [modal_1.Alert, datatable_1.DataTableDirectives]\r\n\t        }), \r\n\t        __metadata('design:paramtypes', [amh_service_1.AMHAssignmentService, core_1.ElementRef, services_1.Logger])\r\n\t    ], AMHBackendSelectionComponent);\r\n\t    return AMHBackendSelectionComponent;\r\n\t}());\r\n\texports.AMHBackendSelectionComponent = AMHBackendSelectionComponent;\r\n\n\n/***/ },\n\n/***/ 1264:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<!--main content start-->\\r\\n    <input [disabled]=\\\"disabled\\\" [(ngModel)]=\\\"selectedBackend.pkCode\\\" (keyup)=\\\"updateBackends($event.target.value)\\\" style=\\\"margin:5px 5px 10px 0px;\\\"\\r\\n    /> &nbsp;\\r\\n    <i class=\\\"fa fa-plus-square image-pointer\\\" aria-hidden=\\\"true\\\" (click)=\\\"add()\\\" style=\\\"font-size:1.2em;\\\"></i> &nbsp;\\r\\n    <!--<span *ngIf=\\\"selectedBackend != undefined\\\"> {{selectedPkDirection}}</span>-->\\r\\n    <div style=\\\"width:60%; height:200px; overflow: auto; z-index:200;\\\" class=\\\"suggestions\\\" *ngIf=\\\"backends.length > 0\\\">\\r\\n        <table style=\\\"width:100%;\\\" >\\r\\n            <tbody>\\r\\n                <tr *ngFor=\\\"let item of backends\\\" (click)=\\\"select(item)\\\">\\r\\n                    <td> <b>{{item.pkCode}}</b> </td>\\r\\n                    <td> {{item.pkDirection}} </td>\\r\\n                </tr>\\r\\n            </tbody>\\r\\n        </table>\\r\\n    </div>\\r\\n        <p *ngIf=\\\"existingBackends.length == 0\\\"> <b>No backend associated to assignment (mandatory) </b> </p>\\r\\n        <table *ngIf=\\\"existingBackends.length > 0\\\" class=\\\"table table-striped table-bordered table-condensed table-responsive\\\" [mfData]=\\\"existingBackends\\\"\\r\\n            #assignedTable=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"3\\\" [mfActivePage]=\\\"activePage\\\">\\r\\n            <thead>\\r\\n                <tr>\\r\\n                    <th style=\\\"width: 8%\\\"> Action </th>\\r\\n                    <th style=\\\"width: 39%\\\">Code </th>\\r\\n                    <th style=\\\"width: 53%\\\"> Direction </th>\\r\\n                </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n                <tr *ngFor=\\\"let backend of assignedTable.data\\\">\\r\\n                    <td>&nbsp; &nbsp;\\r\\n                        <i class=\\\"fa fa-times image-pointer\\\" aria-hidden=\\\"true\\\" (click)=\\\"deleteBackend(backend)\\\" style=\\\"font-size:1.5em;\\\"></i>                                </td>\\r\\n                    <td class=\\\"color-black\\\">{{ backend.pkCode | uppercase }}</td>\\r\\n                    <td class=\\\"color-black\\\">{{ backend.pkDirection }}</td>\\r\\n                </tr>\\r\\n            </tbody>\\r\\n            <tfoot>\\r\\n                <tr>\\r\\n                    <td colspan=\\\"3\\\">\\r\\n                        <mfBootstrapPaginator [rowsOnPageSet]=\\\"[]\\\"></mfBootstrapPaginator>\\r\\n                    </td>\\r\\n                </tr>\\r\\n            </tfoot>\\r\\n        </table>\\r\\n        <div *ngIf=\\\"existingBackends.length < 4\\\" [style.margin.px]=\\\"bodyMargin\\\">&nbsp;</div>\\r\\n<alert (alertOutput)=\\\"confirmClose($event)\\\"></alert>\"\n\n/***/ },\n\n/***/ 1229:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tfunction __export(m) {\r\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n\t}\r\n\t__export(__webpack_require__(1228));\r\n\n\n/***/ },\n\n/***/ 1233:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar core_1 = __webpack_require__(30);\r\n\tvar amh_routing_service_1 = __webpack_require__(901);\r\n\tvar routing_amh_1 = __webpack_require__(880);\r\n\tvar datatable_1 = __webpack_require__(900);\r\n\tvar modal_1 = __webpack_require__(887);\r\n\tvar services_1 = __webpack_require__(38);\r\n\t//this.logger.log('`AMHRuleSelection` component loaded asynchronously');\r\n\tvar AMHRuleSelectionComponent = (function () {\r\n\t    function AMHRuleSelectionComponent(amhRoutingService, elementRef, logger) {\r\n\t        this.amhRoutingService = amhRoutingService;\r\n\t        this.elementRef = elementRef;\r\n\t        this.logger = logger;\r\n\t        this.assignType = routing_amh_1.AssignType.BK_CHANNEL;\r\n\t        this.assignmentCode = \"\";\r\n\t        this.disabled = false;\r\n\t        this.existingRules = [];\r\n\t        this.ruleAdded = new core_1.EventEmitter();\r\n\t        this.ruleDeleted = new core_1.EventEmitter();\r\n\t        this.statusChanged = new core_1.EventEmitter();\r\n\t        this.ruleNavigate = new core_1.EventEmitter();\r\n\t        this.rules = [];\r\n\t        this.originalRules = [];\r\n\t        this.selectedRule = new routing_amh_1.AMHRule(\"\", \"\");\r\n\t        this.selectedExpression = \"\";\r\n\t        this.ruleCodeToDelete = \"\";\r\n\t        this.ruleErrors = new Map();\r\n\t        this.ruleDataSource = this.amhRoutingService.findRules();\r\n\t    }\r\n\t    AMHRuleSelectionComponent.prototype.ngOnChanges = function (changes) {\r\n\t        if (changes[\"disabled\"]) {\r\n\t            this.logger.debug(\"disabled changed \" + changes[\"disabled\"].currentValue);\r\n\t        }\r\n\t    };\r\n\t    AMHRuleSelectionComponent.prototype.ngOnInit = function () {\r\n\t        var _this = this;\r\n\t        this.logger.log('hello `AMH rule selection` component');\r\n\t        // Get the data from the server\r\n\t        this.ruleDataSource.subscribe(function (data) {\r\n\t            if (Array.isArray(data)) {\r\n\t                _this.logger.log(\"Array \" + data);\r\n\t            }\r\n\t            else {\r\n\t                var resp = amh_routing_service_1.AMHRoutingService.getFromSource(data);\r\n\t                resp.forEach(function (rule) {\r\n\t                    if (rule.code) {\r\n\t                        //this.logger.debug(\"in loding \"+ rule.code);\r\n\t                        _this.originalRules.push(routing_amh_1.AMHRule.fromJson(rule));\r\n\t                    }\r\n\t                    else {\r\n\t                        _this.logger.warn(\"no code defined in rule  \");\r\n\t                    }\r\n\t                });\r\n\t            }\r\n\t        }, function (err) {\r\n\t            return _this.logger.log(\"Can't get rules. Error code: %s, URL: %s \", err.status, err.url);\r\n\t        }, function () { return _this.logger.log('Rule(s) are retrieved'); });\r\n\t    };\r\n\t    AMHRuleSelectionComponent.prototype.handleClick = function (event) {\r\n\t        var clickedComponent = event.target;\r\n\t        var inside = false;\r\n\t        do {\r\n\t            if (clickedComponent === this.elementRef.nativeElement) {\r\n\t                inside = true;\r\n\t            }\r\n\t            clickedComponent = clickedComponent.parentNode;\r\n\t        } while (clickedComponent);\r\n\t        if (!inside) {\r\n\t            this.rules = [];\r\n\t            if (!this.selectedRule.code || !this.selectedRule.expression) {\r\n\t                this.selectedRule = new routing_amh_1.AMHRule(\"\", \"\");\r\n\t            }\r\n\t        }\r\n\t    };\r\n\t    AMHRuleSelectionComponent.prototype.select = function (rule) {\r\n\t        var found = this.originalRules.find(function (oRule) { return oRule.code.toUpperCase() == rule.code.toUpperCase(); });\r\n\t        this.selectedRule = new routing_amh_1.AMHRule(found.code, found.expression, found.dataOwner, found.lockCode, found.type);\r\n\t        this.selectedExpression = found.expression.substr(0, 100) + \" ...\";\r\n\t        this.logger.debug(\" rule.code \" + rule.code + \" found code \" + found.code);\r\n\t        this.rules = [];\r\n\t    };\r\n\t    AMHRuleSelectionComponent.prototype.add = function () {\r\n\t        if (!this.selectedRule.code || !this.selectedRule.expression) {\r\n\t            this.logger.log(\"no rule selected\");\r\n\t            return;\r\n\t        }\r\n\t        else {\r\n\t            this.logger.log(\"selected rule \" + this.selectedRule.code);\r\n\t        }\r\n\t        var addedRule = new routing_amh_1.AssignmentUniqueRule(this.selectedRule.code, this.selectedRule.dataOwner, this.selectedRule.lockCode, 0);\r\n\t        addedRule.expression = this.selectedRule.expression;\r\n\t        this.ruleAdded.emit(addedRule);\r\n\t        this.statusChanged.emit(true);\r\n\t        this.selectedRule = new routing_amh_1.AMHRule(\"\", \"\");\r\n\t        this.selectedExpression = \"\";\r\n\t        this.ruleErrors.set(addedRule.code, [\"Rule sequence is incorrect\"]);\r\n\t        this.logger.log(\" adding \" + addedRule.code);\r\n\t    };\r\n\t    AMHRuleSelectionComponent.prototype.updateRules = function (filterText) {\r\n\t        if (!filterText) {\r\n\t            this.rules = [];\r\n\t            return;\r\n\t        }\r\n\t        var assignedRuleCodeMap = {};\r\n\t        this.selectedExpression = \"\";\r\n\t        this.selectedRule.expression = \"\";\r\n\t        this.existingRules.forEach(function (rule) { return assignedRuleCodeMap[rule.code] = true; });\r\n\t        var originalRulesMinusAssignedRules = this.originalRules.filter(function (rule) {\r\n\t            return !assignedRuleCodeMap[rule.code];\r\n\t        });\r\n\t        var valueToFind = filterText.toUpperCase();\r\n\t        var filteredRuleExpresssion = originalRulesMinusAssignedRules.filter(function (item) {\r\n\t            return item[\"expression\"] && item[\"expression\"].toUpperCase().match(valueToFind);\r\n\t        });\r\n\t        var filteredRuleCode = originalRulesMinusAssignedRules.filter(function (item) {\r\n\t            return item[\"code\"] && item[\"code\"].toUpperCase().match(valueToFind);\r\n\t        });\r\n\t        var filteredData = filteredRuleExpresssion.concat(filteredRuleCode);\r\n\t        var uniqueList = [];\r\n\t        filteredData.forEach(function (item) {\r\n\t            var found = uniqueList.find(function (value, index, array) { return item[\"code\"] == value[\"code\"]; });\r\n\t            if (!found) {\r\n\t                uniqueList.push(item);\r\n\t            }\r\n\t        });\r\n\t        this.rules = uniqueList.map(function (rule) { return rule.cloneWithUpperCaseCode(); });\r\n\t    };\r\n\t    AMHRuleSelectionComponent.prototype.errorMsg = function (code) {\r\n\t        if (this.ruleErrors.get(code) && this.ruleErrors.get(code).length > 0) {\r\n\t            return this.ruleErrors.get(code)[0];\r\n\t        }\r\n\t        return \"\";\r\n\t    };\r\n\t    AMHRuleSelectionComponent.prototype.isInteger = function (x) {\r\n\t        return x % 1 === 0;\r\n\t    };\r\n\t    AMHRuleSelectionComponent.prototype.getRulesUniquenessErrorMsgs = function () {\r\n\t        if (!this.existingRules) {\r\n\t            return [];\r\n\t        }\r\n\t        var hashRuleCode = {};\r\n\t        var errorMessages2 = [];\r\n\t        var errorMessages = this.existingRules.filter(function (rule) {\r\n\t            if (hashRuleCode[rule.sequence]) {\r\n\t                errorMessages2.push({ \"code\": rule.code, \"msg\": rule.sequence + \" is used by \" + hashRuleCode[rule.sequence].code.toUpperCase() });\r\n\t                return true;\r\n\t            }\r\n\t            hashRuleCode[rule.sequence] = rule;\r\n\t            return false;\r\n\t        }).map(function (rule) {\r\n\t            return { \"code\": rule.code, \"msg\": rule.sequence + \" is used by \" + rule.code.toUpperCase() };\r\n\t        });\r\n\t        return errorMessages2;\r\n\t    };\r\n\t    AMHRuleSelectionComponent.prototype.ruleSequenceUpdate = function (ruleCode, inputElem) {\r\n\t        var _this = this;\r\n\t        var numericSeqValue = +inputElem.value;\r\n\t        var rule = this.existingRules.find(function (rule) { return rule.code === ruleCode; });\r\n\t        if (rule === undefined) {\r\n\t            this.logger.log(\"rulecode \" + ruleCode + \" not found in assignment rule list \");\r\n\t            this.ruleErrors.set(rule.code, [\"rule code\" + ruleCode + \" does not exist un assignment rule list\"]);\r\n\t            this.statusChanged.emit(true);\r\n\t            return;\r\n\t        }\r\n\t        this.logger.log(\"emmiting assignment from content\");\r\n\t        // this.assignmentUpdate.emit(this.assignment);\r\n\t        this.ruleErrors.set(rule.code, []);\r\n\t        var oldSequence = rule.sequence;\r\n\t        if (!numericSeqValue || !this.isInteger(numericSeqValue) || numericSeqValue < 0) {\r\n\t            this.logger.log(\" not valid sequence \" + numericSeqValue + \" old value \" + rule.sequence);\r\n\t            this.logger.log(\"++++setting is not good \" + ruleCode);\r\n\t            this.ruleErrors.set(rule.code, [\"Rule sequence is incorrect\"]);\r\n\t            this.statusChanged.emit(true);\r\n\t            return;\r\n\t        }\r\n\t        rule.sequence = numericSeqValue;\r\n\t        // this.isDirty = true;\r\n\t        var uniquenessErrors = this.getRulesUniquenessErrorMsgs();\r\n\t        if (uniquenessErrors.length > 0) {\r\n\t            this.logger.log(\"+++++has uniqueness errors returning old value of \" + oldSequence);\r\n\t            this.ruleErrors.set(rule.code, uniquenessErrors.map(function (obj) { return obj.msg; }));\r\n\t            this.statusChanged.emit(true);\r\n\t        }\r\n\t        else {\r\n\t            this.logger.log(\"there is no duplicates sequences on assignment rules \");\r\n\t            var statusToSend_1 = false;\r\n\t            var tmpStatus_1 = true;\r\n\t            this.ruleErrors.forEach(function (value, key, map) {\r\n\t                tmpStatus_1 = false;\r\n\t                if (value && value.length > 0) {\r\n\t                    tmpStatus_1 = true;\r\n\t                    var nonDuplicateError = value.find(function (msg) { return msg.indexOf(\"is used by\") > 0; });\r\n\t                    if (nonDuplicateError) {\r\n\t                        _this.ruleErrors.set(key, []);\r\n\t                        tmpStatus_1 = false;\r\n\t                    }\r\n\t                }\r\n\t                statusToSend_1 = statusToSend_1 || tmpStatus_1;\r\n\t            });\r\n\t            this.statusChanged.emit(statusToSend_1);\r\n\t        }\r\n\t    };\r\n\t    AMHRuleSelectionComponent.prototype.deleteRule = function (rule) {\r\n\t        this.confirmRuleDeletion();\r\n\t        this.ruleCodeToDelete = rule.code;\r\n\t    };\r\n\t    AMHRuleSelectionComponent.prototype.actionNavigationEmit = function (rule) {\r\n\t        this.logger.debug(\"going to rule edition\");\r\n\t        this.ruleNavigate.emit(rule.code);\r\n\t    };\r\n\t    AMHRuleSelectionComponent.prototype.confirmRuleDeletion = function () {\r\n\t        this.alert.waitIcon = false;\r\n\t        this.alert.alertFooter = true;\r\n\t        this.alert.cancelButton = false;\r\n\t        // this.alert.cancelButtonText = \"Cancel\";\r\n\t        this.alert.yesButton = true;\r\n\t        this.alert.yesButtonText = \"Yes\";\r\n\t        this.alert.yesButtonResponse = 21;\r\n\t        this.alert.okButton = true;\r\n\t        this.alert.okButtonText = \"No\";\r\n\t        this.alert.okButtonResponse = 22;\r\n\t        this.alert.alertHeader = true;\r\n\t        this.alert.alertTitle = \" Alert \";\r\n\t        this.alert.message = \"Are you sure you want to unassign this rule?\";\r\n\t        this.alert.open();\r\n\t    };\r\n\t    AMHRuleSelectionComponent.prototype.confirmClose = function (data) {\r\n\t        var _this = this;\r\n\t        this.logger.log(\"confirming ------------  \" + data);\r\n\t        if (data === 0) {\r\n\t            return;\r\n\t        }\r\n\t        if (data == 21) {\r\n\t            this.logger.log(\"deleting... \" + this.ruleCodeToDelete);\r\n\t            this.existingRules = this.existingRules.filter(function (item) {\r\n\t                return item[\"code\"] !== _this.ruleCodeToDelete;\r\n\t            });\r\n\t            this.ruleErrors.set(this.ruleCodeToDelete, []);\r\n\t            // this.isDirty = true;\r\n\t            this.ruleDeleted.emit(this.ruleCodeToDelete);\r\n\t            this.ruleCodeToDelete = \"\";\r\n\t            var uniquenessErrors = this.getRulesUniquenessErrorMsgs();\r\n\t            this.statusChanged.emit(uniquenessErrors.length > 0);\r\n\t            var updatedRuleErrosFlag = false;\r\n\t            // let codeWithErrors : Array<string> = [];\r\n\t            // this.ruleErrors.forEach(function (value, key, map) {\r\n\t            //   if (value && value.length > 0) codeWithErrors.push(key);\r\n\t            // });\r\n\t            this.ruleErrors = new Map();\r\n\t            uniquenessErrors.forEach(function (error) {\r\n\t                _this.ruleErrors.set(error.code, [error.msg]);\r\n\t            });\r\n\t            this.table.setPage(1, 5);\r\n\t        }\r\n\t        if (data == 22) {\r\n\t            this.logger.log(\"no deletion for rule \" + this.ruleCodeToDelete);\r\n\t            this.ruleCodeToDelete = \"\";\r\n\t        }\r\n\t    };\r\n\t    __decorate([\r\n\t        core_1.ViewChild(datatable_1.DataTable), \r\n\t        __metadata('design:type', Object)\r\n\t    ], AMHRuleSelectionComponent.prototype, \"table\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(\"assignment-type\"), \r\n\t        __metadata('design:type', Number)\r\n\t    ], AMHRuleSelectionComponent.prototype, \"assignType\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(\"assignment-code\"), \r\n\t        __metadata('design:type', String)\r\n\t    ], AMHRuleSelectionComponent.prototype, \"assignmentCode\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(\"disabled\"), \r\n\t        __metadata('design:type', Boolean)\r\n\t    ], AMHRuleSelectionComponent.prototype, \"disabled\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(\"existing-rules\"), \r\n\t        __metadata('design:type', Array)\r\n\t    ], AMHRuleSelectionComponent.prototype, \"existingRules\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Output(), \r\n\t        __metadata('design:type', core_1.EventEmitter)\r\n\t    ], AMHRuleSelectionComponent.prototype, \"ruleAdded\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Output(), \r\n\t        __metadata('design:type', core_1.EventEmitter)\r\n\t    ], AMHRuleSelectionComponent.prototype, \"ruleDeleted\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Output(), \r\n\t        __metadata('design:type', core_1.EventEmitter)\r\n\t    ], AMHRuleSelectionComponent.prototype, \"statusChanged\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Output(), \r\n\t        __metadata('design:type', core_1.EventEmitter)\r\n\t    ], AMHRuleSelectionComponent.prototype, \"ruleNavigate\", void 0);\r\n\t    __decorate([\r\n\t        core_1.ViewChild(modal_1.Alert), \r\n\t        __metadata('design:type', Object)\r\n\t    ], AMHRuleSelectionComponent.prototype, \"alert\", void 0);\r\n\t    AMHRuleSelectionComponent = __decorate([\r\n\t        core_1.Component({\r\n\t            selector: 'amh-rule-selection',\r\n\t            template: __webpack_require__(1268),\r\n\t            host: {\r\n\t                '(document:click)': 'handleClick($event)',\r\n\t            },\r\n\t            providers: [amh_routing_service_1.AMHRoutingService],\r\n\t            directives: [datatable_1.DataTableDirectives, modal_1.Alert]\r\n\t        }), \r\n\t        __metadata('design:paramtypes', [amh_routing_service_1.AMHRoutingService, core_1.ElementRef, services_1.Logger])\r\n\t    ], AMHRuleSelectionComponent);\r\n\t    return AMHRuleSelectionComponent;\r\n\t}());\r\n\texports.AMHRuleSelectionComponent = AMHRuleSelectionComponent;\r\n\n\n/***/ },\n\n/***/ 1268:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<!--main content start-->\\r\\n\\r\\n<input [disabled]=\\\"disabled\\\" [(ngModel)]=\\\"selectedRule.code\\\" (keyup)=\\\"updateRules($event.target.value)\\\" style=\\\"margin:8px 5px 10px 0px;\\\" /> &nbsp;\\r\\n<i class=\\\"fa fa-plus-square image-pointer\\\" aria-hidden=\\\"true\\\" (click)=\\\"add()\\\" style=\\\"font-size:1.2em;\\\"></i> &nbsp;\\r\\n<span *ngIf=\\\"selectedRule != undefined\\\"> {{selectedExpression}}</span>\\r\\n<div style=\\\"width:95%; height:250px; overflow: auto;\\\" class=\\\"suggestions\\\" *ngIf=\\\"rules.length > 0\\\">\\r\\n    <table style=\\\"width:100%;\\\">\\r\\n        <tbody>\\r\\n            <tr *ngFor=\\\"let item of rules\\\" (click)=\\\"select(item)\\\">\\r\\n                <td style=\\\"width:15%\\\"> <b>{{item.code}}</b> </td>\\r\\n                <td style=\\\"width:85%\\\"> {{item.expression}} </td>\\r\\n            </tr>\\r\\n        </tbody>\\r\\n    </table>\\r\\n</div>\\r\\n<p *ngIf=\\\"existingRules.length == 0\\\"> <b>No rule criteria associated to assignment </b> </p>\\r\\n<table *ngIf=\\\"existingRules.length > 0\\\" class=\\\"table table-striped table-bordered table-condensed table-responsive\\\" \\r\\n    [mfData]=\\\"existingRules\\\" #assignedTable=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"5\\\">\\r\\n    <thead>\\r\\n        <tr>\\r\\n            <th style=\\\"width: 10%\\\"> Action </th>\\r\\n            <th style=\\\"width: 10%\\\"> Sequence </th>\\r\\n            <th style=\\\"width: 16%\\\">\\r\\n                <mfDefaultSorter by=\\\"code\\\">Code</mfDefaultSorter>\\r\\n            </th>\\r\\n            <th style=\\\"width: 64%\\\">\\r\\n                <mfDefaultSorter by=\\\"expression\\\">Criteria</mfDefaultSorter>\\r\\n            </th>\\r\\n        </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n        <!--[routerLink]=\\\" ['AMHRuleCreate', { 'code': rule.code, 'return_to':'AMHAssignmentEdit','params':'code='+assignmentCode+'&st='+assignType }, 'AMHRuleComponent'] \\\"-->\\r\\n        <tr *ngFor=\\\"let rule of assignedTable.data\\\">\\r\\n            <td>&nbsp; \\r\\n                <i class=\\\"fa fa-pencil-square-o image-pointer\\\" aria-hidden=\\\"true\\\" (click)=\\\"actionNavigationEmit(rule)\\\" style=\\\"font-size:2em;\\\"></i>&nbsp;&nbsp;&nbsp;\\r\\n                <i class=\\\"fa fa-times image-pointer\\\" aria-hidden=\\\"true\\\" (click)=\\\"deleteRule(rule)\\\" style=\\\"font-size:2em;\\\"></i>                                \\r\\n            </td>\\r\\n            <td>\\r\\n               <div class=\\\"\\\"></div>\\r\\n               <input #ruleSequence type=\\\"number\\\" min=\\\"1\\\" [value]=\\\"rule.sequence\\\" class=\\\"form-control\\\" \\r\\n                 size=\\\"6\\\" maxlength=\\\"5\\\" (change)=\\\"ruleSequenceUpdate(rule.code, ruleSequence)\\\"/>\\r\\n                <span *ngIf=\\\"errorMsg(rule.code)\\\">\\r\\n                    <div class=\\\"text-danger\\\">{{errorMsg(rule.code)}}</div>\\r\\n                </span>\\r\\n            </td>\\r\\n            <td class=\\\"color-black\\\">{{ rule.code | uppercase }}</td>\\r\\n            <td class=\\\"color-black\\\">{{ rule.expression }}</td>\\r\\n        </tr>\\r\\n    </tbody>\\r\\n    <tfoot>\\r\\n        <tr>\\r\\n            <td colspan=\\\"4\\\">\\r\\n                <mfBootstrapPaginator [rowsOnPageSet]=\\\"[5, 10, 25, 50, 100]\\\"></mfBootstrapPaginator>\\r\\n            </td>\\r\\n        </tr>\\r\\n    </tfoot>\\r\\n</table>\\r\\n\\r\\n<alert (alertOutput)=\\\"confirmClose($event)\\\"></alert>\"\n\n/***/ },\n\n/***/ 1234:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tfunction __export(m) {\r\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n\t}\r\n\t__export(__webpack_require__(1233));\r\n\n\n/***/ },\n\n/***/ 1165:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar core_1 = __webpack_require__(30);\r\n\tvar option_1 = __webpack_require__(926);\r\n\tvar services_1 = __webpack_require__(38);\r\n\t//this.logger.log('`AMHSelectionTable` component loaded asynchronously');\r\n\tvar AMHSelectionTableComponent = (function () {\r\n\t    function AMHSelectionTableComponent(logger) {\r\n\t        this.logger = logger;\r\n\t        this.tableSelected = new core_1.EventEmitter();\r\n\t    }\r\n\t    AMHSelectionTableComponent.prototype.ngOnInit = function () {\r\n\t        this.logger.log('hello `AMH selection table` component');\r\n\t    };\r\n\t    AMHSelectionTableComponent.prototype.selectOption = function (index) {\r\n\t        this.logger.log(\"option selected \" + this.options[index].description);\r\n\t        this.tableSelected.emit(this.options[index]);\r\n\t    };\r\n\t    __decorate([\r\n\t        core_1.Input(\"default-option\"), \r\n\t        __metadata('design:type', option_1.Option)\r\n\t    ], AMHSelectionTableComponent.prototype, \"optionSelected\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Array)\r\n\t    ], AMHSelectionTableComponent.prototype, \"options\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', String)\r\n\t    ], AMHSelectionTableComponent.prototype, \"label\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Output(), \r\n\t        __metadata('design:type', core_1.EventEmitter)\r\n\t    ], AMHSelectionTableComponent.prototype, \"tableSelected\", void 0);\r\n\t    AMHSelectionTableComponent = __decorate([\r\n\t        core_1.Component({\r\n\t            selector: 'amh-selection-table',\r\n\t            template: __webpack_require__(1177)\r\n\t        }), \r\n\t        __metadata('design:paramtypes', [services_1.Logger])\r\n\t    ], AMHSelectionTableComponent);\r\n\t    return AMHSelectionTableComponent;\r\n\t}());\r\n\texports.AMHSelectionTableComponent = AMHSelectionTableComponent;\r\n\n\n/***/ },\n\n/***/ 1177:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<!--main content start-->\\r\\n\\r\\n<div class=\\\"row col-lg-12 col-sm-12 col-md-12\\\" style=\\\"margin : 0px; padding:0px;\\\">\\r\\n    <div class='form-group form-group-sm' style=\\\"margin:0px;\\\">\\r\\n        <!--<label class=\\\"col-lg-3 col-sm-3 text-center control-label\\\">{{label}}</label>-->\\r\\n        <select style=\\\"width: 100%;\\\" class='combo-select col-lg-12 col-sm-12 col-md-12' [(ngModel)]=\\\"optionSelected\\\" (change)=\\\"selectOption($event.target.selectedIndex)\\\">\\r\\n            <option *ngFor=\\\"let option of options\\\" [ngValue]=\\\"option\\\">{{option.description}}</option>\\r\\n        </select>\\r\\n    </div>\\r\\n</div>\"\n\n/***/ },\n\n/***/ 1166:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tfunction __export(m) {\r\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n\t}\r\n\t__export(__webpack_require__(1165));\r\n\n\n/***/ },\n\n/***/ 1148:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar http_1 = __webpack_require__(257);\r\n\tvar core_1 = __webpack_require__(30);\r\n\tvar Observable_1 = __webpack_require__(14);\r\n\tvar routing_amh_1 = __webpack_require__(880);\r\n\tvar services_1 = __webpack_require__(38);\r\n\tvar AMHAssignmentService = (function () {\r\n\t    function AMHAssignmentService(http, config, store, fileDownloader, logger) {\r\n\t        this.http = http;\r\n\t        this.config = config;\r\n\t        this.store = store;\r\n\t        this.fileDownloader = fileDownloader;\r\n\t        this.logger = logger;\r\n\t        this.environment = \"UNKNOWN\";\r\n\t        this.version = \"DEFAULT\";\r\n\t        this.persistence = sessionStorage;\r\n\t    }\r\n\t    AMHAssignmentService.prototype.getAssignmentPath = function (type) {\r\n\t        switch (type) {\r\n\t            case routing_amh_1.AssignType.BK_CHANNEL:\r\n\t                return \"assignments\";\r\n\t            case routing_amh_1.AssignType.DTN_COPY:\r\n\t                return \"distributionCopies\";\r\n\t            case routing_amh_1.AssignType.FEED_DTN_COPY:\r\n\t                return \"feedbackDtnCopies\";\r\n\t            default:\r\n\t                return \"assignments\";\r\n\t        }\r\n\t    };\r\n\t    AMHAssignmentService.prototype.findAssignmentByCode = function (type, code) {\r\n\t        return this.http.get(this.config.get(\"esBackUrl\") + \"/amhrouting/\" + this.getAssignmentPath(type) + \"/\" + code).map(function (res) { return res.json(); })\r\n\t            .map(function (res) { return res.found ? res._source : res; });\r\n\t    };\r\n\t    AMHAssignmentService.prototype.findAssignments = function (type) {\r\n\t        return this.http.post(this.config.get(\"esBackUrl\") + \"/amhrouting/\" + this.getAssignmentPath(type) + \"/_search?size=1000\", '{\"sort\": [{\"sequence\": {\"order\": \"asc\"}}]}').map(function (res) { return res.json(); });\r\n\t    };\r\n\t    AMHAssignmentService.prototype.findRuleByCode = function (code) {\r\n\t        var _this = this;\r\n\t        this.logger.log(\">> looking for \" + code);\r\n\t        var found = new routing_amh_1.AMHRule(\"\", \"\");\r\n\t        return this.findRules().flatMap(function (data) {\r\n\t            var rule = AMHAssignmentService.getFromSource(data).find(function (r) {\r\n\t                return r.code.toLowerCase() == (code ? code.toLocaleLowerCase() : '');\r\n\t            });\r\n\t            _this.logger.log(\">> elastic return  \" + rule);\r\n\t            if (rule) {\r\n\t                return Observable_1.Observable.create(function (observer) {\r\n\t                    observer.next(rule);\r\n\t                    observer.complete();\r\n\t                    // Any cleanup logic might go here\r\n\t                    return function () { return _this.logger.log('disposed found'); };\r\n\t                });\r\n\t            }\r\n\t            else {\r\n\t                return Observable_1.Observable.create(function (observer) {\r\n\t                    observer.next(new routing_amh_1.AMHRule(\"\", \"\"));\r\n\t                    _this.logger.log(\"returning to observer code=empty\");\r\n\t                    observer.complete();\r\n\t                    // Any cleanup logic might go here\r\n\t                    return function () { return _this.logger.log('disposed not found'); };\r\n\t                });\r\n\t            }\r\n\t        });\r\n\t        // return Observable.from(this.findAMHRuleByCode(code));\r\n\t    };\r\n\t    AMHAssignmentService.prototype.findRules = function () {\r\n\t        return this.http.get(this.config.get(\"esBackUrl\") + \"/amhrouting/rules/_search?size=100\").map(function (res) { return res.json(); });\r\n\t    };\r\n\t    AMHAssignmentService.prototype.findBackends = function () {\r\n\t        this.logger.log(\"findBackends url = \" + this.config.get(\"esBackUrl\"));\r\n\t        return this.http.get(this.config.get(\"esBackUrl\") + \"/amhrouting/backends/_search?size=100\").map(function (res) { return res.json(); });\r\n\t    };\r\n\t    AMHAssignmentService.prototype.findAssignmentsBySequence = function (type, sequence) {\r\n\t        var _this = this;\r\n\t        return this.findAssignments(type).flatMap(function (data) {\r\n\t            var assignments = AMHAssignmentService.getFromSource(data);\r\n\t            var found = [];\r\n\t            var assignBySequenceFound = assignments.find(function (assignment) { return assignment.sequence == sequence; });\r\n\t            if (assignBySequenceFound) {\r\n\t                found.push(assignBySequenceFound);\r\n\t            }\r\n\t            _this.logger.log(\"assignmentBySequence \" + found);\r\n\t            return Observable_1.Observable.from(found);\r\n\t        });\r\n\t    };\r\n\t    AMHAssignmentService.prototype.findAssignmentsByCode = function (type, code) {\r\n\t        var _this = this;\r\n\t        return this.findAssignments(type).flatMap(function (data) {\r\n\t            var assignments = AMHAssignmentService.getFromSource(data);\r\n\t            var found = [];\r\n\t            var assignByCodeFound = assignments.find(function (assignment) { return assignment.code == code; });\r\n\t            if (assignByCodeFound) {\r\n\t                found.push(assignByCodeFound);\r\n\t            }\r\n\t            _this.logger.log(\"assignmentByCode \" + found);\r\n\t            return Observable_1.Observable.from(found);\r\n\t        });\r\n\t    };\r\n\t    AMHAssignmentService.prototype.findAssignmentsByBackendPK = function (type, pk) {\r\n\t        var _this = this;\r\n\t        return this.findAssignments(type).flatMap(function (data) {\r\n\t            var assignments = AMHAssignmentService.getFromSource(data);\r\n\t            var found = [];\r\n\t            for (var i = 0; i < assignments.length; i++) {\r\n\t                var existingBackend = assignments[i];\r\n\t                if (existingBackend.backendPrimaryKey.code === pk.code && existingBackend.backendPrimaryKey.direction === pk.direction) {\r\n\t                    found.push(existingBackend);\r\n\t                    break;\r\n\t                }\r\n\t            }\r\n\t            _this.logger.log(\"[flatMap] returning \" + found);\r\n\t            return Observable_1.Observable.from(found);\r\n\t        });\r\n\t    };\r\n\t    AMHAssignmentService.prototype.replacerFor = function (fields) {\r\n\t        var replacer = function (key, value) {\r\n\t            fields.forEach(function (field) {\r\n\t                if (value && value[field]) {\r\n\t                    //this.logger.log(\" [replacer] instanceof \" + (value[field] instanceof Array));\r\n\t                    if (value[field] instanceof Array) {\r\n\t                        value[field] = value[field][0];\r\n\t                    }\r\n\t                    else {\r\n\t                    }\r\n\t                }\r\n\t            });\r\n\t            return value;\r\n\t        };\r\n\t        return replacer;\r\n\t    };\r\n\t    AMHAssignmentService.prototype.saveAssignment = function (type, assignment, user) {\r\n\t        var _this = this;\r\n\t        var headers = new http_1.Headers({ 'Content-Type': 'application/json',\r\n\t            'userId': user.username,\r\n\t            'time': Date.now() });\r\n\t        var options = new http_1.RequestOptions({ headers: headers });\r\n\t        var payload = JSON.stringify(assignment.toWriteModel(type, this.store.getCurrentEnv(), this.store.getCurrentVersion(), user.username, String(Date.now())), this.replacerFor([\"modificationUserId\", \"creationUserId\"]));\r\n\t        // let payload = JSON.stringify(job.toWriteModel(), this.replacerFor([\"user\"]));\r\n\t        this.logger.log(\" save assignment sent: \" + payload);\r\n\t        return this.http.put(this.config.get(\"backUrl\") + \"/amhrouting/\" + this.assignmentTypePath(type) + \"/\" + assignment.code, payload, options).map(function (res) { _this.logger.log(\" from save \" + res.json()); res.json(); });\r\n\t    };\r\n\t    AMHAssignmentService.prototype.createAssignment = function (type, assignment, user) {\r\n\t        var _this = this;\r\n\t        var headers = new http_1.Headers({ 'Content-Type': 'application/json',\r\n\t            'userId': user.username,\r\n\t            'time': Date.now() });\r\n\t        var options = new http_1.RequestOptions({ headers: headers });\r\n\t        var payload = JSON.stringify(assignment.toWriteModel(type, this.store.getCurrentEnv(), this.store.getCurrentVersion(), user.username, String(Date.now()), user.username, String(Date.now())), this.replacerFor([\"modificationUserId\", \"creationUserId\"]));\r\n\t        this.logger.log(\" create assignment sent: \" + payload);\r\n\t        return this.http.post(this.config.get(\"backUrl\") + \"/amhrouting/\" + this.assignmentTypePath(type) + \"/\" + assignment.code, payload, options).map(function (res) { _this.logger.log(\" from create \" + res.json()); return res.json(); });\r\n\t    };\r\n\t    AMHAssignmentService.prototype.assignmentTypePath = function (type) {\r\n\t        switch (type) {\r\n\t            case routing_amh_1.AssignType.BK_CHANNEL:\r\n\t                return \"assignments\";\r\n\t            case routing_amh_1.AssignType.DTN_COPY:\r\n\t                return \"distributions\";\r\n\t            case routing_amh_1.AssignType.FEED_DTN_COPY:\r\n\t                return \"feedbacks\";\r\n\t        }\r\n\t    };\r\n\t    AMHAssignmentService.getFromSource = function (data) {\r\n\t        var hitArray = data['hits'].hits;\r\n\t        var resp = hitArray.map(function (s) { return s._source; });\r\n\t        return resp;\r\n\t    };\r\n\t    // private findAssignmentByPK(type: AssignType, pk: BackendPK): (Array<AssignmentUnique>) {\r\n\t    //   this.findAssignments(type).subscribe(\r\n\t    //     data => {\r\n\t    //       this.logger.log(\"RETURNING DATA %s\", data);\r\n\t    //       if (Array.isArray(data)) {\r\n\t    //         this.logger.log(\"Array \" + data);\r\n\t    //       } else {\r\n\t    //         let assignments = AMHAssignmentService.getFromSource(data);\r\n\t    //         this.logger.log(\"Data retrieved from findAssignmentByPK: %s \", assignments);\r\n\t    //         for (var i = 0; i < assignments.length; i++) {\r\n\t    //           var existingBackend = assignments[i];\r\n\t    //           this.logger.log(\"Existing pkCode \"+existingBackend.backendPrimaryKey.code + \" pkDir \" + existingBackend.backendPrimaryKey.direction + \" target pkCode \"+ pk.code +\" pkDir \"+pk.direction );\r\n\t    //           if (existingBackend.backendPrimaryKey.code === pk.code && existingBackend.backendPrimaryKey.direction === pk.direction) {\r\n\t    //             this.logger.log(\"from findAssignmentByPK assignment found by Backend!! \");\r\n\t    //             return [existingBackend];\r\n\t    //             }\r\n\t    //           }\r\n\t    //        }\r\n\t    //     },\r\n\t    //     err => this.logger.log(\"Can't get assignment. Error code: %s, URL: %s \", err.status, err.url),\r\n\t    //     () => this.logger.log(\"assignments retrieved from findAssignmentByPK\")\r\n\t    //     );\r\n\t    //  this.logger.log(\" NOT FOUND from findAssignmentByPK!\");\r\n\t    //  return [];\r\n\t    // };\r\n\t    //TODO:Move to different service\r\n\t    AMHAssignmentService.prototype.updateDirtyStatus = function (newValue) {\r\n\t        //this.logger.debug(\"updating isDirty with \"+newValue);\r\n\t        this.persistence.setItem(\"amh_assignment_isDirty\", newValue);\r\n\t    };\r\n\t    AMHAssignmentService.prototype.isAssignmentStatusDirty = function () {\r\n\t        var isDirty = this.persistence.getItem(\"amh_assignment_isDirty\");\r\n\t        //this.logger.debug(\"returning isDirty with \"+isDirty);\r\n\t        return \"true\" === isDirty;\r\n\t    };\r\n\t    AMHAssignmentService.prototype.exportOverview = function (assignType, user) {\r\n\t        var headers = new http_1.Headers({\r\n\t            'Content-Type': 'application/json',\r\n\t            'userId': user.username,\r\n\t            'time': Date.now()\r\n\t        });\r\n\t        var options = new http_1.RequestOptions({ headers: headers });\r\n\t        var payload = JSON.stringify({});\r\n\t        return this.http.post(this.config.get(\"backUrl\") + \"/amhrouting/csv/export/assignments/\" + assignType, payload, options)\r\n\t            .map(function (res) { return res.json(); });\r\n\t    };\r\n\t    AMHAssignmentService.prototype.downloadFile = function (fileNamePath, fileName) {\r\n\t        this.fileDownloader.download(this.config.get(\"backUrl\") + fileNamePath, fileName);\r\n\t    };\r\n\t    AMHAssignmentService = __decorate([\r\n\t        core_1.Injectable(), \r\n\t        __metadata('design:paramtypes', [http_1.Http, services_1.Config, services_1.Store, services_1.FileDownloader, services_1.Logger])\r\n\t    ], AMHAssignmentService);\r\n\t    return AMHAssignmentService;\r\n\t}());\r\n\texports.AMHAssignmentService = AMHAssignmentService;\r\n\n\n/***/ },\n\n/***/ 1178:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar http_1 = __webpack_require__(257);\r\n\tvar core_1 = __webpack_require__(30);\r\n\tvar Observable_1 = __webpack_require__(14);\r\n\tvar routing_amh_1 = __webpack_require__(880);\r\n\tvar services_1 = __webpack_require__(38);\r\n\t__webpack_require__(904);\r\n\t/*\r\n\t{\r\n\t  \"query\": {\r\n\t    \"bool\": {\r\n\t      \"must\": [\r\n\t        {\r\n\t          \"match\": {\r\n\t            \"assigned\": {\r\n\t              \"query\": \"false\",\r\n\t              \"analyzer\": \"standard\",\r\n\t              \"operator\": \"and\"\r\n\t            }\r\n\t          }\r\n\t        },\r\n\t        {\r\n\t          \"bool\": {\r\n\t            \"should\": [\r\n\t              {\r\n\t                \"match\": {\r\n\t                  \"code\": {\r\n\t                    \"query\": \"BA-BPPBCHGG-FUNDS-PRCH\",\r\n\t                    \"analyzer\": \"standard\",\r\n\t                    \"operator\": \"and\"\r\n\t                  }\r\n\t                }\r\n\t              },\r\n\t              {\r\n\t                \"match\": {\r\n\t                  \"expression\": {\r\n\t                    \"query\": \"BA-BPPBCHGG-FUNDS-PRCH\",\r\n\t                    \"analyzer\": \"standard\",\r\n\t                    \"operator\": \"and\"\r\n\t                  }\r\n\t                }\r\n\t              }\r\n\t            ]\r\n\t          }\r\n\t        }\r\n\t      ]\r\n\t    }\r\n\t  }\r\n\t}\r\n\t */\r\n\tvar AMHRuleService = (function () {\r\n\t    function AMHRuleService(http, config, store, fileDownloader, logger) {\r\n\t        this.http = http;\r\n\t        this.config = config;\r\n\t        this.store = store;\r\n\t        this.fileDownloader = fileDownloader;\r\n\t        this.logger = logger;\r\n\t        this.codeExpressionQuery = \"\\n  \\\"bool\\\": {\\n      \\\"should\\\": [\\n        {\\n          \\\"match\\\": {\\n            \\\"code\\\": {\\n              \\\"query\\\": \\\"##TO_REPLACE##\\\",\\n              \\\"analyzer\\\": \\\"standard\\\",\\n              \\\"operator\\\": \\\"and\\\"\\n            }\\n          }\\n        },\\n        {\\n          \\\"match\\\": {\\n            \\\"expression\\\": {\\n              \\\"query\\\": \\\"##TO_REPLACE##\\\",\\n              \\\"analyzer\\\": \\\"standard\\\",\\n              \\\"operator\\\": \\\"and\\\"\\n            }\\n          }\\n        }\\n      ]\\n    }\\n  \";\r\n\t        this.matchQuery = \" \\n  \\\"query\\\": {\\n    ###CODE_EXPR_FILTER_TO_REPLACE###\\n    ###ASSIGN_FILTER_TO_REPLACE###\\n  }\\n  \";\r\n\t        this.ruleQuery = \"\\n  \\\"query\\\": {\\n    \\\"bool\\\": {\\n      \\\"should\\\": [\\n        {\\n          \\\"match\\\": {\\n            \\\"assigned\\\": {\\n              \\\"query\\\": \\\"##TO_REPLACE##\\\",\\n              \\\"analyzer\\\": \\\"standard\\\",\\n              \\\"operator\\\": \\\"and\\\"\\n            }\\n          }\\n        }\\n      ]\\n    }\\n  }\\n  \";\r\n\t        this.ruleAssignTypeQuery = \"\\n{ \\n    \\\"match\\\": {\\n    \\\"assigned\\\": {\\n    \\\"query\\\": \\\"##TO_REPLACE##\\\",\\n    \\\"analyzer\\\": \\\"standard\\\",\\n    \\\"operator\\\": \\\"and\\\"\\n    }\\n  }\\n}\\n\";\r\n\t        this.querySize = \"\\n  \\\"from\\\": 0,\\n  \\\"size\\\": 1000,\\n  \\\"sort\\\": [\\n    {\\n      \\\"code\\\": {\\n        \\\"order\\\": \\\"asc\\\"\\n      }\\n    }\\n  ]\\n  \";\r\n\t        this.persistence = sessionStorage;\r\n\t    }\r\n\t    AMHRuleService.prototype.nested = function (path, query) {\r\n\t        return \" \\\"nested\\\": {\\n     \\\"path\\\": \\\"##path##\\\",\\n     ##query##\\n   }\\n   \".replace(/##path##/g, path)\r\n\t            .replace(/##query##/g, query);\r\n\t    };\r\n\t    AMHRuleService.prototype.query = function (content) {\r\n\t        return \" \\\"query\\\" : {\\n       ###content###\\n    }\\n    \".replace(/###content###/g, content);\r\n\t    };\r\n\t    AMHRuleService.prototype.match = function (field, value) {\r\n\t        return \" \\\"match\\\": {\\n       \\\"##field##\\\": {\\n         \\\"query\\\": \\\"##value##\\\",\\n         \\\"analyzer\\\": \\\"standard\\\",\\n         \\\"operator\\\": \\\"and\\\"\\n       }\\n    }\\n    \".replace(/##field##/g, field)\r\n\t            .replace(/##value##/g, value);\r\n\t    };\r\n\t    AMHRuleService.prototype.bool = function (content) {\r\n\t        return \" \\\"bool\\\": { \\n        ###content###\\n      }\".replace(/###content###/g, content.join(' , '));\r\n\t    };\r\n\t    AMHRuleService.prototype.must = function (content) {\r\n\t        return this.filter(\"must\", content);\r\n\t    };\r\n\t    AMHRuleService.prototype.should = function (content) {\r\n\t        return this.filter(\"should\", content);\r\n\t    };\r\n\t    AMHRuleService.prototype.notMust = function (content) {\r\n\t        return this.filter(\"not_must\", content);\r\n\t    };\r\n\t    AMHRuleService.prototype.filter = function (type, content) {\r\n\t        return \" \\\"##type##\\\": [ \\n        ###content###\\n      ]\"\r\n\t            .replace(/##type##/g, type)\r\n\t            .replace(/###content###/g, content.map(function (e) { return '{ ' + e + ' }'; }).join(' , '));\r\n\t    };\r\n\t    AMHRuleService.prototype.assignedQuery = function (type) {\r\n\t        if (type == routing_amh_1.RuleAssignType.ALL) {\r\n\t            return this.querySize;\r\n\t        }\r\n\t        var assignedText = \"\" + (type == routing_amh_1.RuleAssignType.ASSIGNED);\r\n\t        return this.ruleQuery.replace(/##TO_REPLACE##/g, assignedText) + \" , \" + this.querySize;\r\n\t    };\r\n\t    ;\r\n\t    AMHRuleService.prototype.getRuleAssignTypeQuery = function (type) {\r\n\t        if (type == routing_amh_1.RuleAssignType.ALL) {\r\n\t            return \"\";\r\n\t        }\r\n\t        var assignedText = \"\" + (type == routing_amh_1.RuleAssignType.ASSIGNED);\r\n\t        return \" , \" + this.ruleAssignTypeQuery.replace(/##TO_REPLACE##/g, assignedText);\r\n\t    };\r\n\t    AMHRuleService.prototype.getMatchQuery = function (type, text) {\r\n\t        var isAllType = type == routing_amh_1.RuleAssignType.ALL;\r\n\t        if (isAllType && (!text || text.length == 0)) {\r\n\t            return this.querySize;\r\n\t        }\r\n\t        if (!text || text.length == 0 && !isAllType) {\r\n\t            return this.assignedQuery(type) + \" , \" + this.querySize;\r\n\t        }\r\n\t        var assignedParam = String(type == routing_amh_1.RuleAssignType.ASSIGNED);\r\n\t        var fquery = isAllType ? this.query(this.bool([\r\n\t            this.should([\r\n\t                this.match(\"code\", text),\r\n\t                this.match(\"expression\", text)\r\n\t            ])\r\n\t        ])) :\r\n\t            this.query(this.bool([\r\n\t                this.must([\r\n\t                    this.match(\"assigned\", assignedParam),\r\n\t                    this.bool([\r\n\t                        this.should([\r\n\t                            this.match(\"code\", text),\r\n\t                            this.match(\"expression\", text)\r\n\t                        ])\r\n\t                    ])\r\n\t                ])\r\n\t            ]));\r\n\t        return fquery + \" , \" + this.querySize;\r\n\t    };\r\n\t    ;\r\n\t    AMHRuleService.prototype.findRules = function () {\r\n\t        return this.findRulesByAssignType(routing_amh_1.RuleAssignType.ALL);\r\n\t    };\r\n\t    AMHRuleService.prototype.findRulesByAssignType = function (type) {\r\n\t        var headers = new http_1.Headers({ 'Content-Type': 'application/json' });\r\n\t        var options = new http_1.RequestOptions({ headers: headers });\r\n\t        var queryPayload = \"{\" + this.assignedQuery(type) + \"}\";\r\n\t        // this.logger.debug(\"findRulesByAssignType - payload \"+queryPayload);\r\n\t        return this.http.post(this.config.get(\"esBackUrl\") + \"/amhrouting/rules/_search\", queryPayload, options)\r\n\t            .map(function (res) { return res.json(); })\r\n\t            .flatMap(this.toHits)\r\n\t            .reduce(function (acc, R) { acc.push(R); return acc; }, new Array());\r\n\t        ;\r\n\t    };\r\n\t    AMHRuleService.prototype.findRuleByCode = function (code) {\r\n\t        return this.http.get(this.config.get(\"esBackUrl\") + \"/amhrouting/rules/\" + code)\r\n\t            .map(function (res) { return res.json(); })\r\n\t            .map(function (res) { return res.found ? { \"found\": true, \"value\": res._source } : { \"found\": false, \"value\": {} }; });\r\n\t    };\r\n\t    AMHRuleService.prototype.toHits = function (match) {\r\n\t        return Observable_1.Observable.from(match['hits'].hits)\r\n\t            .map(function (hit) { return hit[\"_source\"]; });\r\n\t    };\r\n\t    AMHRuleService.prototype.findRuleMatches = function (type, text) {\r\n\t        // let headers = new Headers({ 'Content-Type': 'application/json' });\r\n\t        // let options = new RequestOptions({ headers: headers });\r\n\t        var payload = \"{\" + this.getMatchQuery(type, text) + \"}\";\r\n\t        // this.logger.debug(\"findRuleMatches - payload \"+payload);\r\n\t        return this.http.post(this.config.get(\"esBackUrl\") + \"/amhrouting/rules/_search?size=1000\", payload) //, options\r\n\t            .map(function (res) { return res.json(); })\r\n\t            .flatMap(this.toHits)\r\n\t            .reduce(function (acc, R) { acc.push(R); return acc; }, new Array());\r\n\t    };\r\n\t    AMHRuleService.prototype.toAssignment = function (match) {\r\n\t        return Observable_1.Observable.from(match['hits'].hits)\r\n\t            .map(function (hit) { return { \"type\": hit[\"_type\"], \"source\": hit[\"_source\"] }; });\r\n\t    };\r\n\t    AMHRuleService.prototype.findAssignmmentsByRuleCode = function (ruleCode) {\r\n\t        var payload = \"{\" +\r\n\t            this.query(this.bool([this.should([\r\n\t                    this.nested(\"rules\", this.query(this.bool([this.must([this.match(\"rules.code\", ruleCode)])])))])\r\n\t            ])) + \"}\";\r\n\t        // this.logger.debug(\"findAssignmmentsByRuleCode - payload \"+payload);\r\n\t        return this.http.post(this.config.get(\"esBackUrl\") + \"/amhrouting/assignments,distributionCopies,feedbackDtnCopies/_search?size=1000\", payload) //, options\r\n\t            .map(function (res) { return res.json(); })\r\n\t            .flatMap(this.toAssignment)\r\n\t            .reduce(function (acc, R) { acc.push({ \"type\": R.type, \"code\": R.source.code, \"sequence\": R.source.sequence }); return acc; }, new Array());\r\n\t    };\r\n\t    AMHRuleService.prototype.deleteRule = function (ruleCode, user) {\r\n\t        var _this = this;\r\n\t        var headers = new http_1.Headers({ 'Content-Type': 'application/json',\r\n\t            'userId': user.username,\r\n\t            'time': Date.now()\r\n\t        });\r\n\t        var options = new http_1.RequestOptions({ headers: headers });\r\n\t        return this.http.delete(this.config.get(\"backUrl\") + \"/amhrouting/rules/\" + ruleCode, options)\r\n\t            .map(function (res) { _this.logger.log(\" from rule deleted \" + res.json()); res.json(); });\r\n\t    };\r\n\t    AMHRuleService.prototype.exportRuleOverview = function (ruleAssignType, user) {\r\n\t        var headers = new http_1.Headers({\r\n\t            'Content-Type': 'application/json',\r\n\t            'userId': user.username,\r\n\t            'time': Date.now()\r\n\t        });\r\n\t        var options = new http_1.RequestOptions({ headers: headers });\r\n\t        var payload = JSON.stringify({});\r\n\t        return this.http.post(this.config.get(\"backUrl\") + \"/amhrouting/csv/export/rules/\" + ruleAssignType, payload, options)\r\n\t            .map(function (res) { return res.json(); });\r\n\t    };\r\n\t    AMHRuleService.prototype.downloadFile = function (fileNamePath, fileName) {\r\n\t        this.fileDownloader.download(this.config.get(\"backUrl\") + fileNamePath, fileName);\r\n\t    };\r\n\t    AMHRuleService = __decorate([\r\n\t        core_1.Injectable(), \r\n\t        __metadata('design:paramtypes', [http_1.Http, services_1.Config, services_1.Store, services_1.FileDownloader, services_1.Logger])\r\n\t    ], AMHRuleService);\r\n\t    return AMHRuleService;\r\n\t}());\r\n\texports.AMHRuleService = AMHRuleService;\r\n\n\n/***/ },\n\n/***/ 1164:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tfunction __export(m) {\r\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n\t}\r\n\t__export(__webpack_require__(1148));\r\n\t__export(__webpack_require__(1178));\r\n\n\n/***/ },\n\n/***/ 907:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar core_1 = __webpack_require__(30);\r\n\tvar services_1 = __webpack_require__(38);\r\n\tfunction createComponentFactoryOriginal(resolver, metadata) {\r\n\t    var cmpClass = (function () {\r\n\t        function DynamicComponent() {\r\n\t        }\r\n\t        return DynamicComponent;\r\n\t    }());\r\n\t    var decoratedCmp = core_1.Component(metadata)(cmpClass);\r\n\t    return resolver.resolveComponent(decoratedCmp);\r\n\t}\r\n\texports.createComponentFactoryOriginal = createComponentFactoryOriginal;\r\n\tfunction createComponentFactory(comp, resolver, metadata) {\r\n\t    var decoratedCmp = core_1.Component(metadata)(comp);\r\n\t    return resolver.resolveComponent(decoratedCmp);\r\n\t}\r\n\texports.createComponentFactory = createComponentFactory;\r\n\tvar DynamicHTMLOutlet = (function () {\r\n\t    function DynamicHTMLOutlet(vcRef, resolver, logger) {\r\n\t        this.vcRef = vcRef;\r\n\t        this.resolver = resolver;\r\n\t        this.logger = logger;\r\n\t        this.componentCreation = new core_1.EventEmitter();\r\n\t    }\r\n\t    DynamicHTMLOutlet.prototype.ngOnChanges = function () {\r\n\t        var _this = this;\r\n\t        if (!this.comp || !this.meta)\r\n\t            return;\r\n\t        //+JSON.stringify(this.comp)+\" meta - \" +JSON.stringify(this.meta)\r\n\t        this.logger.log(\"passing to createComponent \");\r\n\t        createComponentFactory(this.comp, this.resolver, this.meta)\r\n\t            .then(function (factory) {\r\n\t            var injector = core_1.ReflectiveInjector.fromResolvedProviders([], _this.vcRef.parentInjector);\r\n\t            var componentCreated = _this.vcRef.createComponent(factory, 0, injector, []);\r\n\t            _this.componentCreation.emit(componentCreated);\r\n\t        });\r\n\t    };\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', core_1.ComponentMetadata)\r\n\t    ], DynamicHTMLOutlet.prototype, \"meta\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input('childComponent'), \r\n\t        __metadata('design:type', core_1.Type)\r\n\t    ], DynamicHTMLOutlet.prototype, \"comp\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Output(), \r\n\t        __metadata('design:type', core_1.EventEmitter)\r\n\t    ], DynamicHTMLOutlet.prototype, \"componentCreation\", void 0);\r\n\t    DynamicHTMLOutlet = __decorate([\r\n\t        core_1.Directive({\r\n\t            selector: 'dynamic-html-outlet'\r\n\t        }), \r\n\t        __metadata('design:paramtypes', [core_1.ViewContainerRef, core_1.ComponentResolver, services_1.Logger])\r\n\t    ], DynamicHTMLOutlet);\r\n\t    return DynamicHTMLOutlet;\r\n\t}());\r\n\texports.DynamicHTMLOutlet = DynamicHTMLOutlet;\r\n\n\n/***/ },\n\n/***/ 908:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tfunction __export(m) {\r\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n\t}\r\n\t__export(__webpack_require__(907));\r\n\n\n/***/ },\n\n/***/ 909:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar core_1 = __webpack_require__(30);\r\n\tvar open_component_1 = __webpack_require__(873);\r\n\tvar services_1 = __webpack_require__(38);\r\n\tvar Alert = (function () {\r\n\t    function Alert(dcl, _elementRef, logger) {\r\n\t        this.dcl = dcl;\r\n\t        this._elementRef = _elementRef;\r\n\t        this.logger = logger;\r\n\t        /**\r\n\t           * Describes if the alert contains Ok Button.\r\n\t           * The default Ok button will close the alert and emit the callback.\r\n\t           * Defaults to true.\r\n\t           */\r\n\t        this.okButton = true;\r\n\t        /**\r\n\t           * Describes if the alert contains a waiting Icon.\r\n\t           * Defaults to true.\r\n\t           */\r\n\t        this.waitIcon = true;\r\n\t        /**\r\n\t           * Caption for the OK button.\r\n\t           * Default: Ok\r\n\t           */\r\n\t        this.okButtonText = 'Ok';\r\n\t        this.okButtonResponse = 2;\r\n\t        /**\r\n\t           * Describes if the alert contains cancel Button.\r\n\t           * The default Cancelbutton will close the alert.\r\n\t           * Defaults to true.\r\n\t           */\r\n\t        this.cancelButton = true;\r\n\t        /**\r\n\t           * Caption for the Cancel button.\r\n\t           * Default: Cancel\r\n\t           */\r\n\t        this.cancelButtonText = 'Cancel';\r\n\t        this.cancelButtonResponse = 0;\r\n\t        /**\r\n\t           * Describes if the alert contains yes Button.\r\n\t           * The default Yesbutton will close the alert.\r\n\t           * Defaults to false.\r\n\t           */\r\n\t        this.yesButton = false;\r\n\t        /**\r\n\t           * Caption for the Cancel button.\r\n\t           * Default: Cancel\r\n\t           */\r\n\t        this.yesButtonText = 'Yes';\r\n\t        this.yesButtonResponse = 1;\r\n\t        /**\r\n\t           * if the alertMessage is true it will show the contentString inside alert body.\r\n\t           */\r\n\t        this.alertMessage = true;\r\n\t        /**\r\n\t          * if the value is true alert footer will be visible or else it will be hidden.\r\n\t          */\r\n\t        this.alertFooter = true;\r\n\t        /**\r\n\t          * shows alert header if the value is true.\r\n\t          */\r\n\t        this.alertHeader = true;\r\n\t        /**\r\n\t          * if the value is true alert will be visible or else it will be hidden.\r\n\t          */\r\n\t        this.isOpen = false;\r\n\t        /**\r\n\t          * Emitted when a ok button was clicked\r\n\t          * or when Ok method is called.\r\n\t          */\r\n\t        this.alertOutput = new core_1.EventEmitter();\r\n\t    }\r\n\t    /**\r\n\t         * Opens a alert window creating backdrop.\r\n\t         */\r\n\t    Alert.prototype.open = function () {\r\n\t        this.isOpen = true;\r\n\t    };\r\n\t    Alert.prototype.yes = function () {\r\n\t        this.isOpen = false;\r\n\t        this.alertOutput.emit(this.yesButtonResponse);\r\n\t    };\r\n\t    /**\r\n\t       *  ok method closes the modal and emits modalOutput.\r\n\t       */\r\n\t    Alert.prototype.ok = function () {\r\n\t        this.isOpen = false;\r\n\t        this.alertOutput.emit(this.okButtonResponse);\r\n\t    };\r\n\t    /**\r\n\t       *  cancel method closes the moda.\r\n\t       */\r\n\t    Alert.prototype.cancel = function () {\r\n\t        this.isOpen = false;\r\n\t        this.alertOutput.emit(this.cancelButtonResponse);\r\n\t    };\r\n\t    __decorate([\r\n\t        core_1.Output(), \r\n\t        __metadata('design:type', core_1.EventEmitter)\r\n\t    ], Alert.prototype, \"alertOutput\", void 0);\r\n\t    Alert = __decorate([\r\n\t        core_1.Component({\r\n\t            selector: 'alert',\r\n\t            template: \"\\n  <div class=\\\"modal fade\\\" [open]=\\\"!isOpen\\\" id=\\\"myModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\">\\n    <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n      <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-header\\\" [hidden]=!alertHeader>\\n          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" (click)='cancel()' aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">&times;</span></button>\\n          <h4 class=\\\"modal-title text-center\\\" id=\\\"myModalLabel\\\">{{alertTitle}}</h4>\\n        </div>\\n        <div class=\\\"modal-body\\\">\\n          <div [hidden]=!alertMessage>\\n            <i *ngIf=\\\"waitIcon\\\" class=\\\"fa fa-spinner\\\" aria-hidden=\\\"true\\\" style=\\\"font-size:2.1em;\\\"></i>\\n            &nbsp;&nbsp;{{message}}\\n          </div>\\n        </div>\\n        <div class=\\\"modal-footer\\\" [hidden]=!alertFooter>\\n          <span [hidden]=!yesButton >\\n            <button class=\\\"btn btn-primary\\\" (click)=\\\"yes()\\\">{{yesButtonText}}</button>\\n          </span>\\n          <span [hidden]=!okButton >\\n            <button class=\\\"btn btn-primary\\\" (click)=\\\"ok()\\\">{{okButtonText}}</button>\\n          </span>\\n          <span [hidden]=!cancelButton>\\n            <button class=\\\"btn btn-primary\\\" (click)=\\\"cancel()\\\">{{cancelButtonText}}</button>\\n          </span>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  \",\r\n\t            providers: [],\r\n\t            directives: [open_component_1.Open],\r\n\t            encapsulation: core_1.ViewEncapsulation.None,\r\n\t            pipes: []\r\n\t        }), \r\n\t        __metadata('design:paramtypes', [core_1.DynamicComponentLoader, core_1.ElementRef, services_1.Logger])\r\n\t    ], Alert);\r\n\t    return Alert;\r\n\t}());\r\n\texports.Alert = Alert;\r\n\n\n/***/ },\n\n/***/ 887:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tfunction __export(m) {\r\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n\t}\r\n\t__export(__webpack_require__(909));\r\n\t__export(__webpack_require__(910));\r\n\t__export(__webpack_require__(873));\r\n\n\n/***/ },\n\n/***/ 910:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar core_1 = __webpack_require__(30);\r\n\tvar open_component_1 = __webpack_require__(873);\r\n\tvar dynamic_component_1 = __webpack_require__(908);\r\n\tvar services_1 = __webpack_require__(38);\r\n\tvar Modal = (function () {\r\n\t    function Modal(dcl, _elementRef, logger) {\r\n\t        this.dcl = dcl;\r\n\t        this._elementRef = _elementRef;\r\n\t        this.logger = logger;\r\n\t        this.doneSender = new core_1.EventEmitter();\r\n\t        /**\r\n\t           * Describes if the modal contains Ok Button.\r\n\t           * The default Ok button will close the modal and emit the callback.\r\n\t           * Defaults to true.\r\n\t           */\r\n\t        this.okButton = true;\r\n\t        /**\r\n\t           * Caption for the OK button.\r\n\t           * Default: Ok\r\n\t           */\r\n\t        this.okButtonText = 'Ok';\r\n\t        /**\r\n\t           * Describes if the modal contains cancel Button.\r\n\t           * The default Cancelbutton will close the modal.\r\n\t           * Defaults to true.\r\n\t           */\r\n\t        this.cancelButton = true;\r\n\t        /**\r\n\t           * Caption for the Cancel button.\r\n\t           * Default: Cancel\r\n\t           */\r\n\t        this.cancelButtonText = 'Cancel';\r\n\t        /**\r\n\t           * if the modalMessage is true it will show the message inside modal body.\r\n\t           */\r\n\t        this.modalMessage = true;\r\n\t        /**\r\n\t          * if the value is true modal footer will be visible or else it will be hidden.\r\n\t          */\r\n\t        this.modalFooter = true;\r\n\t        /**\r\n\t          * shows modal header if the value is true.\r\n\t          */\r\n\t        this.modalHeader = true;\r\n\t        /**\r\n\t          * if the value is true modal will be visible or else it will be hidden.\r\n\t          */\r\n\t        this.isOpen = false;\r\n\t        /**\r\n\t          * Emitted when a ok button was clicked\r\n\t          * or when close method is called.\r\n\t          */\r\n\t        this.modalOutput = new core_1.EventEmitter();\r\n\t    }\r\n\t    Modal.prototype.saveComponent = function (component) {\r\n\t        var _this = this;\r\n\t        this.logger.debug(\"component recevied in Modal \" + component);\r\n\t        this.logger.debug(\" parameters => \" + this.parameters.get(\"messageId\"));\r\n\t        this.componentCreated = component;\r\n\t        this.componentCreated._hostElement.component.doneSender = this.doneSender;\r\n\t        this.componentCreated._hostElement.component.initialize(this.parameters);\r\n\t        this.subscription = this.doneSender.subscribe(function (msg) {\r\n\t            if (msg == 'done') {\r\n\t                _this.submit();\r\n\t            }\r\n\t            else {\r\n\t                _this.close();\r\n\t            }\r\n\t        });\r\n\t    };\r\n\t    Modal.prototype.childComponentListener = function (msg) {\r\n\t        if (msg == 'done')\r\n\t            this.submit();\r\n\t        else\r\n\t            this.close();\r\n\t    };\r\n\t    Modal.prototype.createMetadata = function (parameter) {\r\n\t        this.meta = new core_1.ComponentMetadata(parameter);\r\n\t    };\r\n\t    //@ViewChild('target', {read: ViewContainerRef}) target;\r\n\t    /**\r\n\t         * Opens a modal window creating backdrop.\r\n\t         * @param component The angular Component that is to be loaded dynamically(optional).\r\n\t         */\r\n\t    Modal.prototype.open = function (component) {\r\n\t        this.isOpen = true;\r\n\t        this.modalChildComponent = component;\r\n\t        //IIRH\r\n\t        // if(component){\r\n\t        // this.component = this.dcl.loadIntoLocation(component, this._elementRef, \"child\");\r\n\t        // }\r\n\t    };\r\n\t    /**\r\n\t       *  close method dispose the component, closes the modal and optionally emits modalOutput value.\r\n\t       */\r\n\t    Modal.prototype.close = function (data) {\r\n\t        this.dispose();\r\n\t        if (data) {\r\n\t            this.modalOutput.emit(data);\r\n\t        }\r\n\t    };\r\n\t    /**\r\n\t       *  ok method dispose the component, closes the modal and emits true.\r\n\t       */\r\n\t    Modal.prototype.submit = function () {\r\n\t        this.modalOutput.emit(this.componentCreated._hostElement.component);\r\n\t        this.dispose();\r\n\t    };\r\n\t    /**\r\n\t       *  dispose method dispose the loaded component.\r\n\t       */\r\n\t    Modal.prototype.dispose = function () {\r\n\t        this.isOpen = false;\r\n\t        if (this.componentCreated != undefined) {\r\n\t            this.logger.debug(\"...from modal : destroying child component\");\r\n\t            this.componentCreated.destroy();\r\n\t            this.logger.debug(\"...from modal : unsubscribing child component\");\r\n\t            this.subscription.unsubscribe();\r\n\t        }\r\n\t    };\r\n\t    __decorate([\r\n\t        core_1.Output(), \r\n\t        __metadata('design:type', core_1.EventEmitter)\r\n\t    ], Modal.prototype, \"modalOutput\", void 0);\r\n\t    Modal = __decorate([\r\n\t        core_1.Component({\r\n\t            selector: 'modal',\r\n\t            template: \"\\n  <div class=\\\"modal fade\\\" [open]=\\\"!isOpen\\\" id=\\\"myModal\\\" [attr.data-keyboard]=\\\"true\\\" [attr.data-backdrop]=\\\"false\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\">\\n    <div class=\\\"modal-dialog\\\" role=\\\"document\\\" style=\\\"width:80%;\\\">\\n      <div class=\\\"modal-content\\\">\\n        <div class=\\\"modal-header\\\" [hidden]=!modalHeader>\\n          <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" (click)='close()' aria-label=\\\"Close\\\"><span aria-hidden=\\\"true\\\">&times;</span></button>\\n          <h4 class=\\\"modal-title text-center\\\" id=\\\"myModalLabel\\\">{{modalTitle}}</h4>\\n        </div>\\n        <dynamic-html-outlet (componentCreation)=\\\"saveComponent($event)\\\" [meta]=\\\"meta\\\" [childComponent]=\\\"modalChildComponent\\\"></dynamic-html-outlet>\\n      </div>\\n    </div>\\n  </div>\\n\",\r\n\t            //\r\n\t            providers: [],\r\n\t            directives: [open_component_1.Open, dynamic_component_1.DynamicHTMLOutlet],\r\n\t            encapsulation: core_1.ViewEncapsulation.None,\r\n\t            pipes: []\r\n\t        }), \r\n\t        __metadata('design:paramtypes', [core_1.DynamicComponentLoader, core_1.ElementRef, services_1.Logger])\r\n\t    ], Modal);\r\n\t    return Modal;\r\n\t}());\r\n\texports.Modal = Modal;\r\n\n\n/***/ },\n\n/***/ 873:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tvar core_1 = __webpack_require__(30);\r\n\tvar services_1 = __webpack_require__(38);\r\n\t// todo: add animate\r\n\t// todo: add init and on change\r\n\tvar Open = (function () {\r\n\t    function Open(logger) {\r\n\t        this.logger = logger;\r\n\t        this.isExpanded = true;\r\n\t    }\r\n\t    Object.defineProperty(Open.prototype, \"open\", {\r\n\t        get: function () {\r\n\t            return this.isExpanded;\r\n\t        },\r\n\t        set: function (value) {\r\n\t            this.isExpanded = value;\r\n\t            this.toggle();\r\n\t        },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    Open.prototype.toggle = function () {\r\n\t        if (this.isExpanded) {\r\n\t            this.hide();\r\n\t        }\r\n\t        else {\r\n\t            this.show();\r\n\t        }\r\n\t    };\r\n\t    Open.prototype.hide = function () {\r\n\t        this.isExpanded = false;\r\n\t        this.display = 'none';\r\n\t        var backDrop = document.getElementsByClassName(\"modal-backdrop\");\r\n\t        if (backDrop.length > 0) {\r\n\t            document.body.removeChild(backDrop[0]);\r\n\t        }\r\n\t    };\r\n\t    Open.prototype.show = function () {\r\n\t        var backDrop = document.createElement('div');\r\n\t        backDrop.className = \"modal-backdrop fade in\";\r\n\t        document.body.appendChild(backDrop);\r\n\t        this.isExpanded = true;\r\n\t        this.display = 'block';\r\n\t    };\r\n\t    __decorate([\r\n\t        core_1.HostBinding('style.display'), \r\n\t        __metadata('design:type', String)\r\n\t    ], Open.prototype, \"display\", void 0);\r\n\t    __decorate([\r\n\t        core_1.HostBinding('class.in'),\r\n\t        core_1.HostBinding('attr.aria-expanded'), \r\n\t        __metadata('design:type', Boolean)\r\n\t    ], Open.prototype, \"isExpanded\", void 0);\r\n\t    __decorate([\r\n\t        core_1.Input(), \r\n\t        __metadata('design:type', Boolean), \r\n\t        __metadata('design:paramtypes', [Boolean])\r\n\t    ], Open.prototype, \"open\", null);\r\n\t    Open = __decorate([\r\n\t        core_1.Directive({ selector: '[open]' }), \r\n\t        __metadata('design:paramtypes', [services_1.Logger])\r\n\t    ], Open);\r\n\t    return Open;\r\n\t}());\r\n\texports.Open = Open;\r\n\n\n/***/ },\n\n/***/ 926:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\r\n\tfunction __export(m) {\r\n\t    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n\t}\r\n\t__export(__webpack_require__(1167));\r\n\n\n/***/ },\n\n/***/ 1167:\n/***/ function(module, exports) {\n\n\t\"use strict\";\r\n\tvar Option = (function () {\r\n\t    function Option(id, code, description, selected) {\r\n\t        if (selected === void 0) { selected = false; }\r\n\t        this.code = code;\r\n\t        this.id = id;\r\n\t        this.description = description;\r\n\t        this.selected = selected;\r\n\t    }\r\n\t    Object.defineProperty(Option.prototype, \"htmlText\", {\r\n\t        get: function () { return this.description; },\r\n\t        enumerable: true,\r\n\t        configurable: true\r\n\t    });\r\n\t    Option.fromJson = function (json) {\r\n\t        var data = JSON.parse(json);\r\n\t        return new Option(data.id, data.code, data.description);\r\n\t    };\r\n\t    Option.mapToProperty = function (option) { return option[\"id\"]; };\r\n\t    return Option;\r\n\t}());\r\n\texports.Option = Option;\r\n\n\n/***/ }\n\n});\n\n\n// WEBPACK FOOTER //\n// 16.4a6ac86bf39fd380110b.chunk.js","var dataTable_directive = require('./lib/DataTable');\nvar defaultSorter_directive = require('./lib/DefaultSorter');\nvar paginator_component = require('./lib/Paginator');\nvar bootstrapPaginator_component = require('./lib/BootstrapPaginator');\n\nexports.DataTable = dataTable_directive.DataTable;\nexports.DataEvent = dataTable_directive.DataEvent;\nexports.PageEvent = dataTable_directive.PageEvent;\nexports.SortEvent = dataTable_directive.SortEvent;\nexports.DefaultSorter = defaultSorter_directive.DefaultSorter;\nexports.Paginator = paginator_component.Paginator;\nexports.BootstrapPaginator = bootstrapPaginator_component.BootstrapPaginator;\n\nexports.DataTableDirectives = [\n    dataTable_directive.DataTable,\n    defaultSorter_directive.DefaultSorter,\n    paginator_component.Paginator,\n    bootstrapPaginator_component.BootstrapPaginator\n];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/angular2-datatable/datatable.js\n// module id = 900\n// module chunks = 8 10 11 13 16 17 18 19","import {Component, Input, OnChanges} from \"@angular/core\";\nimport {DataTable} from \"./DataTable\";\nimport {Paginator} from \"./Paginator\";\nimport * as _ from \"lodash\";\n\n@Component({\n    selector: \"mfBootstrapPaginator\",\n    template: `\n    <mfPaginator #p [mfTable]=\"mfTable\">\n        <nav class=\"pagination\" *ngIf=\"p.dataLength > p.rowsOnPage\">\n            <li [class.disabled]=\"p.activePage <= 1\" (click)=\"p.setPage(1)\">\n                <a style=\"cursor: pointer\">&laquo;</a>\n            </li>\n            <li *ngIf=\"p.activePage > 4 && p.activePage + 1 > p.lastPage\" (click)=\"p.setPage(p.activePage - 4)\">\n                <a style=\"cursor: pointer\">{{p.activePage-4}}</a>\n            </li>\n            <li *ngIf=\"p.activePage > 3 && p.activePage + 2 > p.lastPage\" (click)=\"p.setPage(p.activePage - 3)\">\n                <a style=\"cursor: pointer\">{{p.activePage-3}}</a>\n            </li>\n            <li *ngIf=\"p.activePage > 2\" (click)=\"p.setPage(p.activePage - 2)\">\n                <a style=\"cursor: pointer\">{{p.activePage-2}}</a>\n            </li>\n            <li *ngIf=\"p.activePage > 1\" (click)=\"p.setPage(p.activePage - 1)\">\n                <a style=\"cursor: pointer\">{{p.activePage-1}}</a>\n            </li>\n            <li class=\"active\">\n                <a style=\"cursor: pointer\">{{p.activePage}}</a>\n            </li>\n            <li *ngIf=\"p.activePage + 1 <= p.lastPage\" (click)=\"p.setPage(p.activePage + 1)\">\n                <a style=\"cursor: pointer\">{{p.activePage+1}}</a>\n            </li>\n            <li *ngIf=\"p.activePage + 2 <= p.lastPage\" (click)=\"p.setPage(p.activePage + 2)\">\n                <a style=\"cursor: pointer\">{{p.activePage+2}}</a>\n            </li>\n            <li *ngIf=\"p.activePage + 3 <= p.lastPage && p.activePage < 3\" (click)=\"p.setPage(p.activePage + 3)\">\n                <a style=\"cursor: pointer\">{{p.activePage+3}}</a>\n            </li>\n            <li *ngIf=\"p.activePage + 4 <= p.lastPage && p.activePage < 2\" (click)=\"p.setPage(p.activePage + 4)\">\n                <a style=\"cursor: pointer\">{{p.activePage+4}}</a>\n            </li>\n            <li [class.disabled]=\"p.activePage >= p.lastPage\" (click)=\"p.setPage(p.lastPage)\">\n                <a style=\"cursor: pointer\">&raquo;</a>\n            </li>\n        </nav>\n        <nav class=\"pagination pull-right\" *ngIf=\"p.dataLength > minRowsOnPage\">\n            <li *ngFor=\"let rows of rowsOnPageSet\" [class.active]=\"p.rowsOnPage===rows\" (click)=\"p.setRowsOnPage(rows)\">\n                <a style=\"cursor: pointer\">{{rows}}</a>\n            </li>\n        </nav>\n    </mfPaginator>\n    `,\n    directives: [Paginator]\n})\nexport class BootstrapPaginator implements OnChanges {\n    @Input(\"rowsOnPageSet\") private rowsOnPageSet = [];\n    @Input(\"mfTable\") private mfTable: DataTable;\n\n    private minRowsOnPage = 0;\n\n    ngOnChanges(changes:any):any {\n        if(changes.rowsOnPageSet) {\n            this.minRowsOnPage = _.min(this.rowsOnPageSet)\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-datatable/src/BootstrapPaginator.ts","import {Directive, Input, EventEmitter, SimpleChange, OnChanges, DoCheck} from \"@angular/core\";\nimport * as _ from \"lodash\";\n\nexport interface SortEvent {\n    sortBy: string;\n    sortOrder: string\n}\n\nexport interface PageEvent {\n    activePage: number;\n    rowsOnPage: number;\n    dataLength: number;\n}\n\nexport interface DataEvent {\n    length: number;\n}\n\n@Directive({\n    selector: 'table[mfData]',\n    exportAs: 'mfDataTable'\n})\nexport class DataTable implements OnChanges, DoCheck {\n\n    @Input(\"mfData\") public inputData:any[] = [];\n\n    private sortBy = \"\";\n    private sortOrder = \"asc\";\n\n    @Input(\"mfRowsOnPage\") public rowsOnPage = 1000;\n    @Input(\"mfActivePage\") public activePage = 1;\n\n    private mustRecalculateData = false;\n\n    public data: any[];\n\n    public onDataChange = new EventEmitter<DataEvent>();\n    public onSortChange = new EventEmitter<SortEvent>();\n    public onPageChange = new EventEmitter<PageEvent>();\n\n    public getSort():SortEvent {\n        return {sortBy: this.sortBy, sortOrder: this.sortOrder};\n    }\n\n    public setSort(sortBy:string, sortOrder:string):void {\n        if (this.sortBy !== sortBy || this.sortOrder !== sortOrder) {\n            this.sortBy = sortBy;\n            this.sortOrder = sortOrder;\n            this.mustRecalculateData = true;\n            this.onSortChange.emit({sortBy: sortBy, sortOrder: sortOrder});\n        }\n    }\n\n    public getPage():PageEvent {\n        return {activePage: this.activePage, rowsOnPage: this.rowsOnPage, dataLength: this.inputData.length};\n    }\n\n    public setPage(activePage:number, rowsOnPage:number):void {\n        if (this.rowsOnPage !== rowsOnPage || this.activePage !== activePage) {\n            this.activePage = this.activePage !== activePage ? activePage : this.calculateNewActivePage(this.rowsOnPage, rowsOnPage);\n            this.rowsOnPage = rowsOnPage;\n            this.mustRecalculateData = true;\n            this.onPageChange.emit({activePage: this.activePage, rowsOnPage: this.rowsOnPage, dataLength: this.inputData.length});\n        }\n    }\n\n    private calculateNewActivePage(previousRowsOnPage:number, currentRowsOnPage:number):number {\n        let firstRowOnPage = (this.activePage - 1) * previousRowsOnPage + 1;\n        let newActivePage = Math.ceil(firstRowOnPage / currentRowsOnPage);\n        return newActivePage;\n    }\n\n    public ngOnChanges(changes:{[key:string]:SimpleChange}):any {\n        if (changes[\"inputData\"]) {\n            this.inputData = this.inputData || [];\n            this.onPageChange.emit({\n                activePage: this.activePage,\n                rowsOnPage: this.rowsOnPage,\n                dataLength: this.inputData.length\n            });\n            this.mustRecalculateData = true;\n        }\n    }\n\n    public ngDoCheck():any {\n        if (this.mustRecalculateData) {\n            this.fillData();\n            this.mustRecalculateData = false;\n        }\n    }\n\n    private fillData():void {\n        this.activePage = this.activePage;\n        this.rowsOnPage = this.rowsOnPage;\n\n        let offset = (this.activePage - 1) * this.rowsOnPage;\n        let data = this.inputData;\n        data = _.orderBy(data, [this.sortBy], [this.sortOrder]);\n        data = _.slice(data, offset, offset + this.rowsOnPage);\n        this.data = data;\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-datatable/src/DataTable.ts","import {Component, Input} from \"@angular/core\";\nimport {DataTable, SortEvent} from \"./DataTable\";\n\n@Component({\n    selector: \"mfDefaultSorter\",\n    template: `\n        <a style=\"cursor: pointer\" (click)=\"sort()\" class=\"text-nowrap\">\n            <ng-content></ng-content>\n            <span *ngIf=\"isSortedByMeAsc\" class=\"glyphicon glyphicon-triangle-top\" aria-hidden=\"true\"></span>\n            <span *ngIf=\"isSortedByMeDesc\" class=\"glyphicon glyphicon-triangle-bottom\" aria-hidden=\"true\"></span>\n        </a>`\n})\nexport class DefaultSorter {\n    @Input(\"by\") private sortBy: string;\n\n    private isSortedByMeAsc: boolean = false;\n    private isSortedByMeDesc: boolean = false;\n\n    public constructor(private mfTable: DataTable) {\n        mfTable.onSortChange.subscribe((event:SortEvent) => {\n            this.isSortedByMeAsc = (event.sortBy === this.sortBy && event.sortOrder === \"asc\");\n            this.isSortedByMeDesc = (event.sortBy === this.sortBy && event.sortOrder === \"desc\");\n        })\n    }\n\n    private sort() {\n        if(this.isSortedByMeAsc) {\n            this.mfTable.setSort(this.sortBy, \"desc\");\n        } else {\n            this.mfTable.setSort(this.sortBy, \"asc\");\n        }\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-datatable/src/DefaultSorter.ts","import {Component, Input, SimpleChange, OnChanges, Optional} from \"@angular/core\";\nimport {DataTable, PageEvent} from \"./DataTable\";\n\n@Component({\n    selector: \"mfPaginator\",\n    template: `<ng-content></ng-content>`\n})\nexport class Paginator implements OnChanges {\n\n    @Input(\"mfTable\")\n    private inputMfTable:DataTable;\n\n    private mfTable:DataTable;\n\n    public activePage:number;\n    public rowsOnPage:number;\n    public dataLength:number = 0;\n    public lastPage:number;\n\n    public constructor(@Optional() private injectMfTable:DataTable) {\n    }\n\n    public ngOnChanges(changes:{[key:string]:SimpleChange}):any {\n        this.mfTable = this.inputMfTable || this.injectMfTable;\n        this.onPageChangeSubscriber(this.mfTable.getPage());\n        this.mfTable.onPageChange.subscribe(this.onPageChangeSubscriber);\n    }\n\n    public setPage(pageNumber:number):void {\n        this.mfTable.setPage(pageNumber, this.rowsOnPage);\n    }\n\n    public setRowsOnPage(rowsOnPage:number):void {\n        this.mfTable.setPage(this.activePage, rowsOnPage);\n    }\n\n    private onPageChangeSubscriber = (event:PageEvent)=> {\n        this.activePage = event.activePage;\n        this.rowsOnPage = event.rowsOnPage;\n        this.dataLength = event.dataLength;\n        this.lastPage = Math.ceil(this.dataLength / this.rowsOnPage);\n    };\n}\n\n\n// WEBPACK FOOTER //\n// ./~/angular2-datatable/src/Paginator.ts","\"use strict\";\nvar Observable_1 = require('../../Observable');\nvar reduce_1 = require('../../operator/reduce');\nObservable_1.Observable.prototype.reduce = reduce_1.reduce;\n//# sourceMappingURL=reduce.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/add/operator/reduce.js\n// module id = 904\n// module chunks = 1 9 11 12 13 14 15 16 17","\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar Subscriber_1 = require('../Subscriber');\n/**\n * Returns an Observable that applies a specified accumulator function to the first item emitted by a source Observable,\n * then feeds the result of that function along with the second item emitted by the source Observable into the same\n * function, and so on until all items have been emitted by the source Observable, and emits the final result from\n * the final call to your function as its sole item.\n * This technique, which is called \"reduce\" here, is sometimes called \"aggregate,\" \"fold,\" \"accumulate,\" \"compress,\" or\n * \"inject\" in other programming contexts.\n *\n * <img src=\"./img/reduce.png\" width=\"100%\">\n *\n * @param {initialValue} the initial (seed) accumulator value\n * @param {accumulator} an accumulator function to be invoked on each item emitted by the source Observable, the\n * result of which will be used in the next accumulator call.\n * @return {Observable} an Observable that emits a single item that is the result of accumulating the output from the\n * items emitted by the source Observable.\n * @method reduce\n * @owner Observable\n */\nfunction reduce(project, seed) {\n    return this.lift(new ReduceOperator(project, seed));\n}\nexports.reduce = reduce;\nvar ReduceOperator = (function () {\n    function ReduceOperator(project, seed) {\n        this.project = project;\n        this.seed = seed;\n    }\n    ReduceOperator.prototype.call = function (subscriber, source) {\n        return source._subscribe(new ReduceSubscriber(subscriber, this.project, this.seed));\n    };\n    return ReduceOperator;\n}());\nexports.ReduceOperator = ReduceOperator;\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nvar ReduceSubscriber = (function (_super) {\n    __extends(ReduceSubscriber, _super);\n    function ReduceSubscriber(destination, project, seed) {\n        _super.call(this, destination);\n        this.hasValue = false;\n        this.acc = seed;\n        this.project = project;\n        this.hasSeed = typeof seed !== 'undefined';\n    }\n    ReduceSubscriber.prototype._next = function (value) {\n        if (this.hasValue || (this.hasValue = this.hasSeed)) {\n            this._tryReduce(value);\n        }\n        else {\n            this.acc = value;\n            this.hasValue = true;\n        }\n    };\n    ReduceSubscriber.prototype._tryReduce = function (value) {\n        var result;\n        try {\n            result = this.project(this.acc, value);\n        }\n        catch (err) {\n            this.destination.error(err);\n            return;\n        }\n        this.acc = result;\n    };\n    ReduceSubscriber.prototype._complete = function () {\n        if (this.hasValue || this.hasSeed) {\n            this.destination.next(this.acc);\n        }\n        this.destination.complete();\n    };\n    return ReduceSubscriber;\n}(Subscriber_1.Subscriber));\nexports.ReduceSubscriber = ReduceSubscriber;\n//# sourceMappingURL=reduce.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/rxjs/operator/reduce.js\n// module id = 922\n// module chunks = 1 9 11 12 13 14 15 16 17","import {Component, ElementRef, EventEmitter, Output, Input, ViewChild, OnInit, OnChanges, SimpleChange } from 'angular2/core';\r\nimport {AMHAssignmentService} from \"../amh-service\";\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {DataTable, DataTableDirectives} from 'angular2-datatable/datatable';\r\nimport {AssignmentUnique, AssignType} from \"../../models/routing-amh\";\r\nimport {Logger} from '../../common/components/services';\r\n\r\n//this.logger.log('`AMHAssignmentSearch` component loaded asynchronously');\r\n\r\n@Component({\r\n  selector: 'amh-assignment-search',\r\n  template: require('./amh-assignment-search.html'),\r\n  providers: [AMHAssignmentService],\r\n  host: {\r\n    '(document:click)': 'handleClick($event)',\r\n  },\r\n  directives: [DataTableDirectives]\r\n})\r\nexport class AMHAssignmentSearchComponent implements OnInit, OnChanges {\r\n  @ViewChild(DataTable) table;\r\n\r\n  @Input(\"default-code\") public defaultCode: string;\r\n  @Input(\"assignment-type\") public assignmentType: AssignType = AssignType.BK_CHANNEL;\r\n  @Output() public assignmentSelected: EventEmitter<any> = new EventEmitter();\r\n\r\n  private assignments: Array<AssignmentUnique> = [];\r\n  private originalAssignments: Array<AssignmentUnique> = [];\r\n  // private assignmentDataSource: Observable<AssignmentUnique>;\r\n  private bodyMargin: number = 0;\r\n\r\n  private selectedAssignment: AssignmentUnique = new AssignmentUnique();\r\n  private selectedPkDirection: string = \"\";\r\n  private oldAssignmentType: string;\r\n\r\n  constructor(private amhAssignmentService: AMHAssignmentService, private myElement: ElementRef, private logger : Logger) {\r\n\r\n  }\r\n\r\n  ngOnChanges(changes: { [propertyName: string]: SimpleChange }) {\r\n    this.logger.debug(\"changes : \"+ JSON.stringify(changes));\r\n    if (this.oldAssignmentType != this.typeAsString(this.assignmentType)) {\r\n       this.defaultCode = changes[\"defaultCode\"] ?changes[\"defaultCode\"].currentValue : undefined; \r\n       this.loadAssignments(changes[\"defaultCode\"] != undefined);\r\n       this.oldAssignmentType = this.typeAsString(this.assignmentType);\r\n       this.selectedAssignment =  new AssignmentUnique();\r\n    } else\r\n    if (changes[\"defaultCode\"]) {\r\n      //this.logger.log(\"defaultCode has been changed to \"+this.defaultCode);\r\n      this.updateAssignments(this.defaultCode);\r\n      if (this.assignments.length == 1) {\r\n         this.selectAssignment(this.assignments[0]);\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    //this.logger.log('hello `AMH Assignment Filter` component');\r\n    this.loadAssignments();\r\n    this.oldAssignmentType = this.typeAsString(this.assignmentType);\r\n  }\r\n\r\n  private typeAsString(type: AssignType) : string {\r\n    return  AssignType[type];\r\n  }\r\n\r\n  private loadAssignments(loadDefaultSelection? : boolean) {\r\n    //this.logger.log(\"loadAssignments  AssignmentFilter [\" + this.assignmentType + \"]\");\r\n    this.originalAssignments = [] ;\r\n    this.assignments = [] ;\r\n    // Get the data from the server\r\n    this.amhAssignmentService.findAssignments(this.assignmentType).subscribe(\r\n      data => {\r\n        let resp = AMHAssignmentService.getFromSource(data)\r\n   //     this.logger.log(\"Assignment \" + resp + \" received\");\r\n        resp.forEach(assignment => {\r\n          this.originalAssignments.push(assignment);\r\n          //this.assignments.push(assignment);\r\n        });\r\n      },\r\n      err =>\r\n        this.logger.error(\"Can't get assignments type \" + this.assignmentType + \". Error code: %s, URL: %s \", err.status, err.url),\r\n      () => {\r\n      //  this.logger.log(this.originalAssignments.length +\" Assignment(s) of type '\" + this.assignmentType + \"' are retrieved.\");\r\n        this.updateAssignments(this.defaultCode);\r\n         if (loadDefaultSelection && this.assignments.length == 1) {\r\n            this.selectAssignment(this.assignments[0]);\r\n         }\r\n      }\r\n    );\r\n  }\r\n\r\nhandleClick(event) {\r\n    var clickedComponent = event.target;\r\n    var inside = false;\r\n    do {\r\n      // this.logger.log(clickedComponent + \" equals \" + (clickedComponent === this.elementRef.nativeElement) );\r\n      if (clickedComponent === this.myElement.nativeElement) {\r\n        inside = true;\r\n      }\r\n      clickedComponent = clickedComponent.parentNode;\r\n    } while (clickedComponent);\r\n\r\n    if (!inside) {\r\n      this.assignments = [];\r\n      if (!this.selectedAssignment.code ) {\r\n        this.selectedAssignment =  new AssignmentUnique();\r\n      }\r\n    }\r\n  }\r\n\r\n  // select(backend: AssignmentUnique) {\r\n  //   this.selectedAssignment = new AssignmentUnique(backend.pkCode, backend.pkDirection, backend.code, backend.dataOwner, backend.description);\r\n  //   this.selectedPkDirection = backend.pkDirection\r\n  //   this.backends = [];\r\n  // }\r\n\r\n  private selectAssignment(assignment: AssignmentUnique) {\r\n    //this.logger.log(\"selected assignment code \" + assignment.code);\r\n    if (!assignment) {\r\n      this.logger.error(\"assignment[\" + assignment + \"] missing \");\r\n      return;\r\n    }\r\n\r\n    this.assignmentSelected.emit(assignment.code);\r\n    this.assignments = [];\r\n    this.selectedAssignment = new AssignmentUnique();\r\n  }\r\n\r\n private updateAssignments(filterText) {\r\n    if (!filterText) {\r\n      this.assignments = [];\r\n      return;\r\n    }\r\n\r\n    let assignedAssignmentCodeMap = {};\r\n \r\n    let originalAssignmentsMinusAssignedAssignments = this.originalAssignments.filter(assignment => {\r\n      return !assignedAssignmentCodeMap[assignment.code];\r\n    });\r\n\r\n    let valueToFind = filterText.toUpperCase();\r\n\r\n    // let filteredAssignmentSequence:Array<any> = originalAssignmentsMinusAssignedAssignments.filter((item:any) =>\r\n    //   item[\"sequence\"].match(valueToFind));\r\n\r\n    let filteredAssignmentCode:Array<any> = originalAssignmentsMinusAssignedAssignments.filter((item:any) =>\r\n      item[\"code\"].toUpperCase().match(valueToFind));\r\n    \r\n    // let filteredData =  filteredAssignmentSequence.concat(filteredAssignmentCode);\r\n    let filteredData =  filteredAssignmentCode;\r\n\r\n    let uniqueList : Array<any>= [];\r\n    filteredData.forEach( item => {\r\n        let found = uniqueList.find((value, index, array) => { return item[\"code\"] == value[\"code\"]; });\r\n        if (!found) {\r\n          uniqueList.push(item);\r\n        }\r\n    });\r\n//.toUpperCase()\r\n    this.assignments = uniqueList.map( assignment => { assignment.code = assignment.code; return assignment; });\r\n    \r\n  }\r\n\r\n  \r\n\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/amh-routing/amh-assignment-search/amh-assignment-search.component.ts","module.exports = \"<!--main content start-->\\r\\n<input [(ngModel)]=\\\"selectedAssignment.code\\\" \\r\\n    (keyup)=\\\"updateAssignments($event.target.value)\\\" style=\\\"margin:5px 5px 10px 0px;\\\"\\r\\n/> &nbsp;\\r\\n<i class=\\\"fa fa-search\\\" aria-hidden=\\\"true\\\"></i> \\r\\n<!---->\\r\\n<div style=\\\"height:200px; overflow: auto; z-index:200;\\\" class=\\\"suggestions\\\" *ngIf=\\\"assignments.length > 0\\\">\\r\\n    <!--*ngFor=\\\"let item of assignments\\\"-->\\r\\n    <!--<ul >\\r\\n        <li>-->\\r\\n            <table style=\\\"width:100%;\\\">\\r\\n                <!--<thead>\\r\\n                    <tr>\\r\\n                        <th style=\\\"width:15%;\\\"> </th>\\r\\n                        <th style=\\\"width:20%;\\\"> </th>\\r\\n                        <th style=\\\"width:65%;\\\"> </th>\\r\\n                    </tr>\\r\\n                </thead>-->\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let item of assignments\\\" (click)=\\\"selectAssignment(item)\\\"> \\r\\n                        <td style=\\\"width:15%;\\\">  \\r\\n                            <span *ngIf=\\\"item.active\\\"  class=\\\"badge bg-primary\\\">\\r\\n                                <i class=\\\"fa fa-check\\\" aria-hidden=\\\"true\\\"></i>\\r\\n                            </span>\\r\\n                            <span *ngIf=\\\"!item.active\\\" >\\r\\n                                &nbsp;\\r\\n                            </span>\\r\\n                        </td>\\r\\n                        <td style=\\\"width:20%;\\\"> <b>{{item.sequence}}</b> </td>\\r\\n                        <td style=\\\"width:65%;\\\"> {{item.code.toUpperCase()}} </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        <!--</li>\\r\\n    </ul>-->\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/amh-routing/amh-assignment-search/amh-assignment-search.html\n// module id = 1188\n// module chunks = 8 11 16","export * from './amh-assignment-search.component';\n\n\n// WEBPACK FOOTER //\n// ./src/app/amh-routing/amh-assignment-search/index.ts","import {Component, ElementRef, ViewChild, EventEmitter, Output, Input, OnChanges, SimpleChange } from 'angular2/core';\r\nimport {NgClass} from '@angular/common';\r\nimport {AMHAssignmentService} from \"../../amh-service\";\r\nimport { Router, RouteParams} from 'angular2/router';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {DataTableDirectives} from 'angular2-datatable/datatable';\r\nimport {AssignType, AssignmentConfig, AMHRule, Backend, AssignmentUnique, AssignmentUniqueRule, AssignmentUniqueBackend, BackendPK} from \"../../../models/routing-amh\";\r\nimport {Alert} from '../../../common/components/ui/widgets/modal';\r\nimport { AMHRuleSelectionComponent} from '../../amh-rule-selection';\r\nimport { AMHBackendSelectionComponent} from '../../amh-backend-selection';\r\nimport { AMHAssignmentSearchComponent} from '../../amh-assignment-search';\r\nimport { Permissions, NotPermissions, DisablePermissions } from '../../../common/directives';\r\nimport { Auth , Logger} from '../../../common/components/services';\r\n\r\n\r\n//this.logger.log('`AMHAssignmentContent` component loaded asynchronously');\r\n\r\n@Component({\r\n  selector: 'amh-assignment-content',\r\n  template: require('./amh-assignment-content.html'),\r\n  providers: [AMHAssignmentService, Auth],\r\n  directives: [NgClass, DataTableDirectives, Alert, AMHRuleSelectionComponent, AMHBackendSelectionComponent, AMHAssignmentSearchComponent,\r\n               Permissions, NotPermissions, DisablePermissions]\r\n})\r\nexport class AMHAssignmentContentComponent implements OnChanges {\r\n  @ViewChild(Alert) alert;\r\n  @Input(\"selection-config\") public config: AssignmentConfig;\r\n  @Input(\"save-status\") public saveStatus: string;\r\n  @Output() public enableSaveButtons: EventEmitter<any> = new EventEmitter();\r\n  @Output() public assignmentUpdate: EventEmitter<any> = new EventEmitter();\r\n  @Output() public saveWork: EventEmitter<any> = new EventEmitter();\r\n  @Output() public rollbackSelection: EventEmitter<any> = new EventEmitter();\r\n  @Output() public creationStatus: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n\r\n  private isCreation: boolean;\r\n  private unconfirmedAssignmentCode: string = undefined;\r\n  private assignment: AssignmentUnique = undefined;\r\n  private receivedAssignmentCode: string;\r\n  private assignmentTextFilter: string;\r\n  private assignmentSequenceErrorMsg = \"\";\r\n  private assignmentCopiesErrorMsg = \"\";\r\n  private assignmentCodeErrorMsg = \"\";\r\n  private isDirty : boolean = false;\r\n  private disableInputs: boolean = true;\r\n  private usedBackends: Array<Backend> = [];\r\n  private haveRulesErrors : boolean = false;\r\n  private pendingAssignmentSave: number = 0;\r\n  private pendingNavigationConfig: any = {};\r\n  private selectionRollbackType = undefined;\r\n  private hasUserPermissions : boolean;\r\n\r\n  constructor(private router: Router, routeParams: RouteParams, private amhAssignmentService: AMHAssignmentService\r\n  , auth: Auth, private logger : Logger) {\r\n    this.receivedAssignmentCode = routeParams.params['code'];\r\n    //this.logger.log(\" this.receivedAssignmentCode \" + this.receivedAssignmentCode);\r\n\r\n    this.assignmentTextFilter = this.receivedAssignmentCode || '';\r\n    this.assignment = new AssignmentUnique(false, new BackendPK(\"\", \"\"), \"\", \"\", \"\", \"\", undefined, undefined, \"\",\"\",\"\", [], []);\r\n    this.isCreation = false;\r\n    this.pendingAssignmentSave = 0;\r\n    this.hasUserPermissions = auth.hasPermission([\"amh.modify.assignment\"]) == 1;\r\n    this.creationStatus.emit(this.isCreation);\r\n    \r\n  }\r\n\r\n/* SimpleChange\r\n      previousValue: any;\r\n      currentValue: any;\r\n*/\r\n  ngOnChanges(changes: { [propertyName: string]: SimpleChange }) {\r\n    if (changes[\"config\"]) {\r\n      this.logger.debug(\"config has changed type \"+this.config.type);\r\n        if (this.selectionRollbackType != this.config.type) {\r\n            this.confirmSelectionTableChanges();      \r\n        }\r\n    }\r\n    let saveStatusChange : SimpleChange = changes[\"saveStatus\"]; \r\n    this.logger.debug(\" saveStatusChange === \"+saveStatusChange+ \" this.pendingAssignmentSave \"+this.pendingAssignmentSave);\r\n    if (saveStatusChange) {\r\n      switch(saveStatusChange.currentValue) {\r\n          case \"OK\":\r\n              this.onSaveStatusOk();\r\n          break;\r\n        }\r\n    }\r\n\r\n    if (saveStatusChange && this.pendingAssignmentSave) {\r\n        this.logger.debug(\"saveStatusChanged and pendingAssignmentSave == true\");\r\n        switch(saveStatusChange.currentValue) {\r\n          case \"OK\":\r\n              this.onSaveStatusOk();\r\n              this.pendingAssignmentSave = 0;\r\n          break;\r\n          case \"Error\":\r\n              this.onSaveStatusFail();\r\n              this.pendingAssignmentSave = 0;\r\n          break;\r\n        }\r\n        this.logger.debug(\"after switch pendingAsignmentSave\");\r\n    }\r\n    \r\n    \r\n  }\r\n\r\n  private onSaveStatusFail() {\r\n    switch(this.pendingAssignmentSave) {\r\n      case 2: //after save change selection table\r\n      //An error has ocurred the rollback the selection change\r\n        this.rollbackSelection.emit(true);\r\n      break;\r\n     }    \r\n  }\r\n\r\n  private onSaveStatusOk() {\r\n    switch(this.pendingAssignmentSave) {\r\n      case 1: //after save go to Rule creation\r\n        this.logger.debug(\" save was OK then go to Rule creation\");\r\n        this.navigateTo(this.pendingNavigationConfig.composentName, this.pendingNavigationConfig.parameters);\r\n      break;\r\n      case 2: //after save change selection table\r\n        this.logger.debug(\" save was OK then change selection table\");\r\n        this.initialization();\r\n        break;\r\n      case 3:\r\n      case 0:\r\n        this.logger.debug(\" save in creation was OK then call afterSaveNewAssignment\");\r\n        this.afterSaveNewAssignment();\r\n      break;\r\n     }\r\n  }\r\n\r\n\r\n  ngOnInit() {\r\n    //this.logger.log('hello `AMH assignment content` component');\r\n    this.selectionRollbackType = this.config.type;\r\n    this.amhAssignmentService.updateDirtyStatus(this.isDirty);\r\n    this.loadAssignment(this.receivedAssignmentCode);\r\n  }\r\n\r\n  actionChangeRuleStatus(rulesStatus) {\r\n    this.haveRulesErrors = rulesStatus;\r\n    this.isDirty = true;\r\n    this.amhAssignmentService.updateDirtyStatus(this.isDirty);\r\n    this.emitDisableEnableSaveButtons();\r\n  } \r\n\r\n  private addRule(addedRule) {\r\n    this.assignment.rules = [addedRule, ...this.assignment.rules];\r\n    this.assignmentUpdate.emit(this.assignment);\r\n    this.isDirty = true;\r\n    this.amhAssignmentService.updateDirtyStatus(this.isDirty);\r\n    //this.logger.log(\" adding \" + addedRule.code + \" to assignment \");\r\n  }\r\n\r\n  private deleteRule(deletedRuleCode) {\r\n    this.assignment.rules = this.assignment.rules.filter((item: any) =>\r\n      item[\"code\"] !== deletedRuleCode);\r\n\r\n    // this.enableSaveButtons.emit(true);\r\n    this.assignmentUpdate.emit(this.assignment);\r\n    // this.isDirty = true;\r\n    //this.logger.log(deletedRuleCode + \" deleted \");\r\n  }\r\n\r\n  private addToBackendChannel(addedBackend) {\r\n    this.assignment.backendPrimaryKey = new BackendPK(addedBackend.pkCode, addedBackend.pkDirection);\r\n\r\n    // this.enableSaveButtons.emit(false); //???\r\n    this.assignmentUpdate.emit(this.assignment);\r\n    this.isDirty = true;\r\n    this.amhAssignmentService.updateDirtyStatus(this.isDirty);\r\n    //this.logger.log(\" adding \" + addedBackend.pkCode);\r\n  }\r\n\r\n  private addToMultiBackend(addedBackend) {\r\n    \r\n    let uniqueBackend = new AssignmentUniqueBackend(addedBackend.pkCode, addedBackend.pkDirection, addedBackend.dataOwner, addedBackend.lockCode);\r\n    this.assignment.backends = [uniqueBackend, ...this.assignment.backends];\r\n\r\n    // this.enableSaveButtons.emit(true); //??? verify if there is no errors before send the event\r\n    this.assignmentUpdate.emit(this.assignment);\r\n    this.isDirty = true;\r\n    this.amhAssignmentService.updateDirtyStatus(this.isDirty);\r\n    //this.logger.log(\" adding \" + addedBackend.code + \" to assignment \");\r\n  }\r\n\r\n  private addBackend(addedBackend) {\r\n    switch(this.config.type) {\r\n      case AssignType.BK_CHANNEL:\r\n        this.addToBackendChannel(addedBackend);\r\n        break;\r\n      case AssignType.DTN_COPY:\r\n      case AssignType.FEED_DTN_COPY:\r\n        this.addToMultiBackend(addedBackend);\r\n    }\r\n    this.fillBackends();\r\n    this.emitDisableEnableSaveButtons();\r\n  }\r\n\r\n  private deleteToBackendChannel(backendCodeDeleted) {\r\n    this.logger.debug(\" from deleteToBackendChannel  \" + backendCodeDeleted);\r\n\r\n    if (!this.assignment.backendPrimaryKey || this.assignment.backendPrimaryKey.code != backendCodeDeleted) {\r\n      //this.logger.log(\"backend code to delete [\" + backendCodeDeleted + \"] not found \");\r\n      return;\r\n    }\r\n\r\n    this.assignment.backendPrimaryKey = undefined;\r\n\r\n    // this.enableSaveButtons.emit(true); //???\r\n    this.assignmentUpdate.emit(this.assignment);\r\n    this.isDirty = true;\r\n    this.amhAssignmentService.updateDirtyStatus(this.isDirty);\r\n  }\r\n\r\n  private deleteToMultiBackend(backendCodeDeleted) {\r\n    this.assignment.backends = this.assignment.backends\r\n              .filter((item: any) => item[\"code\"] !== backendCodeDeleted);\r\n\r\n    // this.enableSaveButtons.emit(true);\r\n    this.assignmentUpdate.emit(this.assignment);\r\n    this.isDirty = true;\r\n    this.amhAssignmentService.updateDirtyStatus(this.isDirty);\r\n    //this.logger.log(backendCodeDeleted + \" deleted \");\r\n  }\r\n\r\n  private deleteBackend(backendCodeDeleted) {\r\n    switch(this.config.type) {\r\n      case AssignType.BK_CHANNEL:\r\n        this.deleteToBackendChannel(backendCodeDeleted);\r\n        break;\r\n      case AssignType.DTN_COPY:\r\n      case AssignType.FEED_DTN_COPY:\r\n        this.deleteToMultiBackend(backendCodeDeleted);\r\n    }\r\n    this.fillBackends();\r\n    this.emitDisableEnableSaveButtons();\r\n  }\r\n\r\n  private fillBackends() {\r\n    //this.logger.log(\"filling up backends \");\r\n    let backends: Array<Backend> = [];\r\n    switch (this.config.type) {\r\n      case AssignType.BK_CHANNEL:\r\n        if (this.assignment.backendPrimaryKey && this.assignment.backendPrimaryKey.code) {\r\n          backends.push(new Backend(this.assignment.backendPrimaryKey.code, this.assignment.backendPrimaryKey.direction));\r\n        }\r\n        break;\r\n      case AssignType.DTN_COPY:\r\n      case AssignType.FEED_DTN_COPY:\r\n        if (this.assignment.backends) {\r\n          this.assignment.backends.forEach(backend => {\r\n            backends.push(new Backend(backend.code, backend.direction));\r\n          });\r\n        }\r\n        break;\r\n    }\r\n\r\n    this.usedBackends = backends;\r\n  }\r\n\r\n  selectAssignment(code) {\r\n    //this.logger.log(\"selected assignment code \" + code);\r\n    if (!code) {\r\n      this.logger.error(\"code[\" + code + \"] missing \");\r\n      return;\r\n    }\r\n    this.unconfirmedAssignmentCode = code;\r\n    this.confirmAssignmentChange();\r\n  }\r\n\r\n  private hasThisAssignmentErrors() : boolean {\r\n      let enableSaveButtons : boolean = this.assignmentSequenceErrorMsg.length > 0; \r\n      //this.logger.debug(\"1.- sequenceMsgErrors \"+ enableSaveButtons);\r\n      enableSaveButtons = enableSaveButtons || this.assignmentCodeErrorMsg.length > 0;\r\n      //this.logger.debug(\"2.- CodeMsgError \"+ (this.assignmentCodeErrorMsg.length > 0));\r\n      enableSaveButtons = enableSaveButtons || this.haveRulesErrors;\r\n      //this.logger.debug(\"3.- ruleErrors \"+ this.haveRulesErrors);\r\n\r\n      // has at least one backend assigned\r\n      enableSaveButtons = enableSaveButtons || (!this.usedBackends || this.usedBackends.length < 1);\r\n      //this.logger.debug(\"4.- backendSizeError \"+ (!this.usedBackends || this.usedBackends.length < 1));\r\n      // On creation has a code and sequence\r\n      if (this.isCreation) {\r\n          enableSaveButtons = enableSaveButtons || (!this.assignment.code || this.assignment.code.length == 0);\r\n         // this.logger.debug(\"5.- onNew-CodeError \"+ (!this.assignment.code || this.assignment.code.length == 0));\r\n          enableSaveButtons = enableSaveButtons || (!this.assignment.sequence || this.assignment.sequence == 0);\r\n         // this.logger.debug(\"6.- onNew-SequenceError \"+ (!this.assignment.sequence || this.assignment.sequence == 0));\r\n      }\r\n\r\n      return enableSaveButtons;\r\n  }\r\n\r\n  private emitDisableEnableSaveButtons() {\r\n    this.enableSaveButtons.emit(this.hasThisAssignmentErrors());\r\n  }\r\n\r\n private doDisableInputs() : void {\r\n   this.logger.debug(\" doDisable \"+this.hasUserPermissions);\r\n   this.disableInputs = true;\r\n }\r\n\r\n private doEnableInputs() : void {\r\n   this.logger.debug(\" doEnable \"+this.hasUserPermissions);\r\n   if (!this.hasUserPermissions) {\r\n      this.disableInputs = true;\r\n      return; \r\n   }\r\n\r\n   this.disableInputs = false;\r\n }\r\n\r\n\r\n  private loadAssignment(code: string) {\r\n    if (!code || code.length == 0) {\r\n      this.createNewAssignment();\r\n      return;\r\n    }\r\n\r\n    this.amhAssignmentService.findAssignmentByCode(this.config.type, code)\r\n      .subscribe(\r\n      data => {\r\n        //this.logger.log(\"[loadAssignment] Data retrieved from service: %s \", data.code);\r\n        this.assignment = AssignmentUnique.fromJson(data);\r\n        this.assignment.rules = this.assignment.rules.sort(\r\n          (rule1, rule2) => {\r\n            return rule1.sequence - rule2.sequence;\r\n          });\r\n        this.isCreation = false;\r\n        this.creationStatus.emit(this.isCreation);\r\n        this.doEnableInputs();\r\n        this.haveRulesErrors = false;\r\n        this.isDirty = false;\r\n        this.amhAssignmentService.updateDirtyStatus(this.isDirty);\r\n        this.assignmentUpdate.emit(this.assignment);\r\n        this.fillBackends();\r\n      },\r\n      err => {\r\n        this.logger.warn(\"[loadAssignment] Can't get assignment. Error code: %s, URL: %s \", err.status, err.url);\r\n        this.createNewAssignment();\r\n        this.emitDisableEnableSaveButtons();\r\n      },\r\n      () => {\r\n        //this.logger.log(\"[loadAssignment] assignment code [%s] retrieved\", code);\r\n        if (!this.assignment) {\r\n          this.createNewAssignment();\r\n        }\r\n        this.emitDisableEnableSaveButtons();\r\n      }\r\n      );\r\n\r\n  }\r\n\r\n  actionCreateNewAssignment() {\r\n    this.doEnableInputs();\r\n    this.unconfirmedAssignmentCode = \"\";\r\n    let hasAssignErros = this.hasThisAssignmentErrors();\r\n    if (this.isDirty && hasAssignErros) {\r\n        this.alertPreventLostChanges(400,401);\r\n        return;\r\n    }\r\n\r\n    if (!this.isDirty || hasAssignErros) {\r\n      this.loadAssignment(this.unconfirmedAssignmentCode);\r\n      return;  \r\n    }\r\n    this.confirmAssignmentChange();\r\n  }\r\n  \r\n  disableRuleCreation() {\r\n    return this.disableInputs || this.hasThisAssignmentErrors();\r\n  }\r\n\r\n  // actionCreateNewRule() {\r\n  //   if (!this.isDirty) {\r\n  //     this.actionRuleNavigation(undefined);\r\n  //     return;  \r\n  //   }\r\n  //   this.alertLostChanges(0, 201,202);\r\n  // }\r\n\r\n  private createNewAssignment() {\r\n    //this.logger.log(\"creating new assignment\");\r\n    this.assignment = new AssignmentUnique(false, new BackendPK(\"\", \"\"), \"\", \"\", \"\", \"\", undefined, undefined, \"\", \"\", \"\", [], []);\r\n    this.fillBackends();\r\n    this.isCreation = true;\r\n    this.creationStatus.emit(this.isCreation);\r\n    this.assignmentUpdate.emit(this.assignment);\r\n    this.assignmentSequenceErrorMsg = \"\";\r\n    this.assignmentCopiesErrorMsg = \"\";\r\n    this.isDirty = false;\r\n    this.amhAssignmentService.updateDirtyStatus(this.isDirty);\r\n    this.haveRulesErrors = false;\r\n    this.emitDisableEnableSaveButtons();\r\n  }\r\n\r\n  private isInteger(x: number): boolean {\r\n    return x % 1 === 0;\r\n  }\r\n\r\n  private updateAssignmentUniquenessErrorMsg(sequence: number) {\r\n    this.assignmentSequenceErrorMsg = \"\";\r\n    this.logger.debug(\"[assingmentWithSequence] calling findAssignmentsBySequence(%s,%s)\", this.config.type, sequence);\r\n    this.amhAssignmentService.findAssignmentsBySequence(this.config.type, sequence)\r\n      .subscribe(\r\n      data => {\r\n        //this.logger.log(\"[assingmentWithSequence] Data retrieved from service: %s with type %s\", data.code, this.config.type);\r\n        if (this.assignment.code !== data.code) {\r\n          this.assignmentSequenceErrorMsg = \"The sequence \" + sequence + \" is already used by the assignment \" + data.code;\r\n        }\r\n      },\r\n      err => {\r\n        this.logger.error(\"[assingmentWithSequence] Can't get assignments. Error code: %s, URL: %s \", err.status, err.url);\r\n      },\r\n      () => {\r\n       // this.logger.log(\"[assingmentWithSequence] with msg [%s]\", this.assignmentSequenceErrorMsg);\r\n        this.emitDisableEnableSaveButtons();\r\n      }\r\n      );\r\n\r\n  }\r\n\r\n  private updateAssignmentCodeUniquenessErrorMsg(code: string) {\r\n    this.assignmentCodeErrorMsg = \"\";\r\n    this.amhAssignmentService.findAssignmentsByCode(this.config.type, code)\r\n      .subscribe(\r\n      data => {\r\n        //this.logger.log(\"[assingmentWithCode] Data retrieved from service: %s, current %s \", data.code, this.assignment.code);\r\n        this.assignmentCodeErrorMsg = \"The code \" + code + \" already exists \";\r\n      },\r\n      err => {\r\n        this.logger.error(\"[assingmentWithCode] Can't get assignments. Error code: %s, URL: %s \", err.status, err.url);\r\n      },\r\n      () => {\r\n        //this.logger.log(\"[assingmentWithCode] with msg [%s]\", this.assignmentCodeErrorMsg);\r\n        this.emitDisableEnableSaveButtons();\r\n      }\r\n      );\r\n  }\r\n\r\n  private getRulesUniquenessErrorMsgs(): string[] {\r\n    if (!this.assignment || !this.assignment.rules) {\r\n      return [];\r\n    }\r\n    let hashRuleCode = {};\r\n\r\n    let errorMessages: string[] = this.assignment.rules.filter(rule => {\r\n      if (hashRuleCode[rule.sequence]) {\r\n        return true;\r\n      }\r\n\r\n      hashRuleCode[rule.sequence] = rule;\r\n      return false;\r\n    }).map(rule => {\r\n      return rule.sequence + \" is used by \" + rule.code.toUpperCase();\r\n    });\r\n\r\n    return errorMessages;\r\n  }\r\n\r\n  assignmentSequenceUpdate(inputElem: HTMLInputElement) {\r\n    //this.logger.log(\"assignment \" + this.assignment.code + \" has changed its value to \" + this.assignment.sequence);\r\n    let numericSeqValue: number = + inputElem.value;\r\n    let oldSequence = this.assignment.sequence;\r\n    this.assignmentUpdate.emit(this.assignment);\r\n    this.isDirty = true;\r\n    this.amhAssignmentService.updateDirtyStatus(this.isDirty);\r\n\r\n    if (!numericSeqValue || !this.isInteger(numericSeqValue) || numericSeqValue < 0) {\r\n      //this.logger.log(\" not valid sequence \" + numericSeqValue + \" old value \" + oldSequence);\r\n      this.assignmentSequenceErrorMsg = \"Assignment sequence is incorrect\";\r\n      this.emitDisableEnableSaveButtons();\r\n      return;\r\n    }\r\n\r\n    this.assignment.sequence = numericSeqValue;\r\n    this.updateAssignmentUniquenessErrorMsg(numericSeqValue);\r\n  }\r\n\r\n  assignmentCopiesUpdate(inputElem: HTMLInputElement) {\r\n    //this.logger.log(\"assignment \" + this.assignment.code + \" has changed its copies value to \" + this.assignment.copies);\r\n    let numericCopiesValue: number = + inputElem.value;\r\n    let oldCopies = this.assignment.copies;\r\n    this.assignmentUpdate.emit(this.assignment);\r\n    this.assignmentCopiesErrorMsg = \"\";\r\n\r\n    if (!numericCopiesValue || !this.isInteger(numericCopiesValue) || numericCopiesValue < 0) {\r\n      //this.logger.log(\" not valid copies \" + numericCopiesValue + \" old value \" + oldCopies);\r\n      this.assignmentCopiesErrorMsg = \"Assignment copies is incorrect\";\r\n      this.emitDisableEnableSaveButtons();\r\n      return;\r\n    }\r\n\r\n    this.assignment.copies = numericCopiesValue;\r\n    this.isDirty = true;\r\n    this.amhAssignmentService.updateDirtyStatus(this.isDirty);\r\n  }\r\n \r\n  private isValidCode(code : string) : boolean {\r\n    //^,$ are the begining and the end of the string respectively\r\n    //to test https://regex101.com/#javascript\r\n    let rex = new RegExp('^[A-Za-z0-9_\\.\\-]*$');\r\n    return rex.test(code);\r\n  }\r\n\r\n  assignmentCodeUpdate(inputElem: HTMLInputElement) {\r\n    //this.logger.log(\"assignment code changed \" + inputElem.value + \" assignment code \" + this.assignment.code);\r\n    this.isDirty = true;\r\n    this.amhAssignmentService.updateDirtyStatus(this.isDirty);\r\n    this.assignment.code = inputElem.value;\r\n    \r\n    if (!this.isValidCode(inputElem.value)) {\r\n       this.assignmentCodeErrorMsg = \"Valid characters are A-Z a-z 0-9 . - _\";\r\n       return;\r\n    }\r\n\r\n    this.updateAssignmentCodeUniquenessErrorMsg(inputElem.value);\r\n  }\r\n\r\n  private confirmAssignmentChange() {\r\n      if (!this.isDirty) {\r\n        //this.logger.log(\"Assignment has no changes so far\");\r\n        this.loadAssignment(this.unconfirmedAssignmentCode);\r\n        return;\r\n      }\r\n\r\n      this.alertLostChanges();\r\n  }\r\n\r\n  private initialization() {\r\n    this.assignmentTextFilter = \"\";\r\n    this.assignmentCodeErrorMsg = \"\";\r\n    this.createNewAssignment();\r\n    this.doDisableInputs();\r\n    this.isDirty = false;\r\n    this.amhAssignmentService.updateDirtyStatus(this.isDirty);\r\n  }\r\n\r\n  private afterSaveNewAssignment() {\r\n    this.assignmentTextFilter = \"\";\r\n    this.assignmentCodeErrorMsg = \"\";\r\n    this.assignmentSequenceErrorMsg = \"\";\r\n    this.assignmentCopiesErrorMsg = \"\";\r\n    this.isCreation = false;\r\n    this.creationStatus.emit(this.isCreation);\r\n    this.isDirty = false;\r\n    this.amhAssignmentService.updateDirtyStatus(this.isDirty);\r\n    this.haveRulesErrors = false;\r\n    this.emitDisableEnableSaveButtons();\r\n  }\r\n\r\n  private confirmSelectionTableChanges() {\r\n    let hasAssignErros = this.hasThisAssignmentErrors();\r\n    if (this.isDirty && hasAssignErros) {\r\n        this.alertPreventLostChanges();\r\n        return;\r\n    }\r\n\r\n    if (!this.isDirty || hasAssignErros) {\r\n        //this.logger.log(\"onChanges config.type = [\" + this.config.type + \"] hasThisAssignmentErrors \" + hasAssignErros + \" dirty \" + this.isDirty);\r\n        this.selectionRollbackType = this.config.type;\r\n        this.initialization();\r\n        return;\r\n    }\r\n\r\n    this.alertLostChanges(100, 101,102);\r\n  }\r\n\r\n  private alertPreventLostChanges(cancelResponse=300, yesResponse = 301) {\r\n    this.alert.waitIcon = false;\r\n    this.alert.alertFooter = true;\r\n    this.alert.cancelButton = true;\r\n    this.alert.cancelButtonText = \"Cancel\";\r\n    this.alert.cancelButtonResponse = cancelResponse;\r\n    this.alert.yesButton = true;\r\n    this.alert.yesButtonText = \"Yes\";\r\n    this.alert.yesButtonResponse = yesResponse;\r\n    this.alert.okButton = false;\r\n    this.alert.alertHeader = true;\r\n    this.alert.alertTitle = \" Alert \";\r\n    this.alert.message = \"All changes will be lost, Do you want to continue?\";\r\n    this.alert.open();\r\n  }\r\n\r\n  private alertLostChanges(cancelResponse=0, yesResponse = 1, okResponse = 2) {\r\n    this.alert.waitIcon = false;\r\n    this.alert.alertFooter = true;\r\n    this.alert.cancelButton = true;\r\n    this.alert.cancelButtonText = \"Cancel\";\r\n    this.alert.cancelButtonResponse = cancelResponse;\r\n    this.alert.yesButton = true;\r\n    this.alert.yesButtonText = \"Yes\";\r\n    this.alert.yesButtonResponse = yesResponse;\r\n    this.alert.okButton = true;\r\n    this.alert.okButtonText = \"No\";\r\n    this.alert.okButtonResponse = okResponse;\r\n    this.alert.alertHeader = true;\r\n    this.alert.alertTitle = \" Alert \";\r\n    this.alert.message = \"Do you want to save the changes done?\";\r\n    this.alert.open();\r\n  }\r\n\r\n  confirmClose(data) {\r\n    //this.logger.log(\"confirming ------------  \" + data);\r\n    \r\n    switch(data) {\r\n      case 0:\r\n      case 400: //on Create Assignment, cancel do nothing.\r\n        //this.logger.log(\"confirm cancel, do nothing\");\r\n        break;\r\n      case 1:\r\n        if (this.isCreation) {\r\n           //If is creation then on save disable assignment code\r\n           this.pendingAssignmentSave = 3;\r\n        }\r\n        this.saveWork.emit({\"withRollbackType\":false, \"saveAndContinue\":true});\r\n      break;\r\n      case 2:\r\n        this.loadAssignment(this.unconfirmedAssignmentCode);\r\n      break;\r\n      case 100: //Cancel selection table change\r\n      case 300: //On dirty, Cancel change selection table\r\n        //this.logger.log(\"change assign cancel, rollback selection table\");\r\n        this.rollbackSelection .emit(true);\r\n        break;\r\n      case 101: // save and change selection table\r\n        this.saveWork.emit({\"withRollbackType\":true, \"saveAndContinue\":true});\r\n        //TODO: do the initialization only if save was OK.\r\n        //TODO: Add parentEventEmitter to do the initialization part.\r\n        this.pendingAssignmentSave = 2;\r\n        this.selectionRollbackType = this.config.type;\r\n        break;\r\n      case 102: //Do not save and just change selection table\r\n      case 301: //On dirty, do not save and just change selection table\r\n        this.initialization();\r\n        this.selectionRollbackType = this.config.type;\r\n        break;\r\n      case 201: //save and go to rule creation\r\n        this.saveWork.emit({\"withRollbackType\":false, \"saveAndContinue\":true});\r\n        this.pendingAssignmentSave = 1;\r\n      break;\r\n      case 202: // do not save and go to rule creation\r\n        this.navigateTo(this.pendingNavigationConfig.composentName, this.pendingNavigationConfig.parameters); \r\n       break;\r\n       case 401: // on Create Assignment, lost changes clicked, so load empty assignment\r\n          this.loadAssignment(this.unconfirmedAssignmentCode);\r\n        break;\r\n      default: return;\r\n    }\r\n    \r\n  }\r\n\r\n  actionRuleNavigation(ruleCode) {\r\n    let parameters = { 'code': ruleCode, 'return_to':'AMHAssignmentEdit','params':'code='+this.assignment.code+'&st='+this.config.type }\r\n    if (this.hasThisAssignmentErrors()) { //If there are some errors do not navigate\r\n      return;\r\n    }\r\n    if (!this.isDirty) {\r\n      this.navigateTo(\"AMHRuleCreate\", parameters);\r\n      return;  \r\n    }\r\n    this.pendingNavigationConfig = {\"composentName\":\"AMHRuleCreate\" , \"parameters\": parameters}\r\n    this.alertLostChanges(0, 201,202);\r\n  }\r\n  \r\n  private navigateTo(targetComponent : string, parameters : any) {\r\n    this.router.parent.navigate([targetComponent, parameters])\r\n  }\r\n\r\n  actionSetDirtyTrue() {\r\n    this.isDirty = true;\r\n    this.amhAssignmentService.updateDirtyStatus(this.isDirty);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/amh-routing/amh-assignment/amh-assignment-content/amh-assignment-content.component.ts","module.exports = \"<!--main content start-->\\r\\n<div class=\\\"row\\\">\\r\\n    <div class=\\\"col-sm-12 col-md-12 col-lg-12\\\">\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <!--style=\\\"padding-right: 0px;\\\"-->\\r\\n            <div class=\\\"col-sm-12 col-md-6 col-lg-6\\\" > \\r\\n                <div class=\\\"panel-heading\\\" style=\\\"border-top:solid #ccc 1px;\\\">\\r\\n                    <span class=\\\"panel-title word-break\\\" style=\\\"font-weight: 300;font-family: Lato;\\\">Assignment Details [<b>{{assignment.code}}</b>]</span>\\r\\n                    <i [routerLink]=\\\" ['AMHSimulation', { 'st': config.type, 'code': assignment.code }, 'AMHSimulatorComponent'] \\\" class=\\\"fa fa-play-circle-o pull-right margin-right image-pointer\\\" aria-hidden=\\\"true\\\" style=\\\"font-size:2em;margin-top: 7px;\\\"></i>\\r\\n                    <button [gpEnabled]=\\\"['amh.modify.assignment']\\\" class=\\\"btn btn-default btn-sm\\\" style=\\\"float: right; margin-top:5px;\\\" (click)=\\\"actionCreateNewAssignment()\\\"> Create Assignment </button>\\r\\n                    <!--<i class=\\\"fa fa-plus-square-o\\\" [ngClass]=\\\"{ 'image-pointer' : disableInputs }\\\" style=\\\"float: right; padding-top:10px; font-size:1.5em; border-right:0px;\\\" aria-hidden=\\\"true\\\" ></i>-->\\r\\n                    <!--<h3 class=\\\"panel-title\\\">Assignment Details</h3>-->\\r\\n                </div>\\r\\n                <div class=\\\"panel-body\\\" style=\\\"border:solid #ccc 1px; padding:0px 0px 15px 15px;\\\">\\r\\n                    <div class=\\\"col-sm-12 col-md-12 col-lg-12\\\" style=\\\"padding: 5px 10px 0px 0px;\\\">\\r\\n                        <div class=\\\"row\\\">\\r\\n                            <div class=\\\"col-sm-12 col-md-6 col-lg-6\\\">\\r\\n                            <amh-assignment-search [default-code]=\\\"assignmentTextFilter\\\" [assignment-type]=\\\"config.type\\\" (assignmentSelected)=\\\"selectAssignment($event)\\\"> </amh-assignment-search>\\r\\n                        </div>\\r\\n                        <div class=\\\"col-sm-12 col-md-6 col-lg-6\\\"> \\r\\n                            &nbsp;\\r\\n                        </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group form-group-sm col-lg-6\\\" style=\\\"padding-left: 0px;\\\">\\r\\n                            <span class=\\\"col-sm-12 col-md-3 col-lg-3 control-label\\\" style=\\\"font-weight:300; padding-left: 0px;\\\">Code&nbsp;*</span>\\r\\n                            <div class=\\\"col-sm-12 col-md-9 col-lg-9\\\" style=\\\"padding:0px;\\\">\\r\\n                                <input [disabled]=\\\"disableInputs || !isCreation\\\" type=\\\"text\\\" size=\\\"20\\\" [value]=\\\"assignment.code\\\" (change)=\\\"assignmentCodeUpdate($event.target)\\\" />\\r\\n                            </div>\\r\\n                            <span *ngIf=\\\"assignmentCodeErrorMsg\\\">\\r\\n                                <div class=\\\"text-danger\\\">{{assignmentCodeErrorMsg}}</div>\\r\\n                            </span>\\r\\n                        </div>\\r\\n                        \\r\\n                        <div class=\\\"form-group form-group-sm col-lg-6\\\" style=\\\"padding-left:0px;\\\">\\r\\n                            <span class=\\\"col-sm-12 col-md-4 col-lg-4 control-label\\\" style=\\\"font-weight:300;  padding-left: 0px;\\\">Sequence&nbsp;*</span>\\r\\n                            <div class=\\\"col-sm-12 col-md-7 col-lg-7\\\" style=\\\"padding:0px;\\\">\\r\\n                                <input [disabled]=\\\"disableInputs\\\" type=\\\"number\\\" min=\\\"1\\\" max=\\\"1000\\\" size=\\\"6\\\" style=\\\"width:13em\\\" [value]=\\\"assignment.sequence\\\" (change)=\\\"assignmentSequenceUpdate($event.target)\\\"/>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"assignmentSequenceErrorMsg\\\" class=\\\"text-danger\\\">{{assignmentSequenceErrorMsg}}</div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group form-group-sm col-lg-6\\\" style=\\\"padding-left: 0px;\\\">\\r\\n                            <span class=\\\"col-sm-12 col-md-3 col-lg-3 control-label\\\" style=\\\"font-weight:300;  padding-left: 0px;\\\">Active</span>\\r\\n                            <div class=\\\"col-sm-12 col-md-9 col-lg-9\\\" style=\\\"padding:0px 5px 5px 1px;\\\">\\r\\n                                <input (change)=\\\"actionSetDirtyTrue()\\\" [disabled]=\\\"disableInputs\\\" type=\\\"checkbox\\\" [(ngModel)]=\\\"assignment.active\\\">\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group form-group-sm col-lg-6\\\" style=\\\"padding-left:0px;  margin:0px 0px 10px 0px;\\\">\\r\\n                            <span class=\\\"col-sm-12 col-md-4 col-lg-4 control-label\\\" style=\\\"font-weight:300;  padding-left: 0px;\\\">Description</span>\\r\\n                            <div class=\\\"col-sm-12 col-md-7 col-lg-7\\\" style=\\\"padding:5px 0px;\\\">\\r\\n                                <input (change)=\\\"actionSetDirtyTrue()\\\" [disabled]=\\\"disableInputs\\\" type=\\\"text\\\" size=\\\"20\\\" [(ngModel)]=\\\"assignment.description\\\" />\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        \\r\\n                        <div *ngIf=\\\"config.showExtraFields()\\\" class=\\\"form-group form-group-sm col-lg-6\\\" style=\\\"padding-left: 0px;\\\">\\r\\n                            <span class=\\\"col-sm-12 col-md-3 col-lg-3 control-label\\\" style=\\\"font-weight:300;  padding-left: 0px;\\\">Name</span>\\r\\n                            <div class=\\\"col-sm-12 col-md-9 col-lg-9\\\" style=\\\"padding:5px 5px;\\\">\\r\\n                                <input (change)=\\\"actionSetDirtyTrue()\\\" [disabled]=\\\"disableInputs\\\" type=\\\"text\\\" size=\\\"20\\\" [(ngModel)]=\\\"assignment.name\\\" />\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                        <div *ngIf=\\\"config.showExtraFields()\\\" class=\\\"form-group form-group-sm col-lg-6\\\" style=\\\"padding-left:0px;\\\">\\r\\n                            <span class=\\\"col-sm-12 col-md-4 col-lg-4 control-label\\\" style=\\\"font-weight:300;  padding-left: 0px;\\\">Num Copies</span>\\r\\n                            <div class=\\\"col-sm-12 col-md-7 col-lg-7\\\" style=\\\"padding:0px;\\\">\\r\\n                                <input (change)=\\\"actionSetDirtyTrue()\\\" [disabled]=\\\"disableInputs\\\" type=\\\"number\\\" min=\\\"1\\\" max=\\\"1000\\\" size=\\\"6\\\" style=\\\"width:13em\\\" [value]=\\\"assignment.copies\\\" (change)=\\\"assignmentCopiesUpdate($event.target)\\\"/>\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"assignmentCopiesErrorMsg\\\" class=\\\"text-danger\\\">{{assignmentCopiesErrorMsg}}</div>\\r\\n                        </div>\\r\\n                        <div *ngIf=\\\"!config.showExtraFields() && !assignmentSequenceErrorMsg && !assignmentCopiesErrorMsg && !assignmentCodeErrorMsg\\\" style=\\\"margin-bottom:70px;\\\">&nbsp;</div>\\r\\n                        <div *ngIf=\\\"config.showExtraFields() && !assignmentSequenceErrorMsg && !assignmentCopiesErrorMsg && !assignmentCodeErrorMsg\\\" style=\\\"margin-bottom:30px;\\\">&nbsp;</div>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <div class=\\\"col-sm-12 col-md-6 col-lg-6\\\">\\r\\n                <div class=\\\"row col-sm-12 col-md-12 col-lg-12\\\">\\r\\n                <div class=\\\"panel-heading\\\" style=\\\"border-top:solid #ccc 1px;\\\">\\r\\n                    <h3 class=\\\"panel-title\\\">Backend Selection</h3>\\r\\n                </div>\\r\\n                <!--padding:10px 15px;-->\\r\\n                <div class=\\\"panel-body\\\" style=\\\"border:solid #ccc 1px; \\\">\\r\\n                    <amh-backend-selection *gpIf=\\\"['amh.modify.assignment']\\\" [disabled]=\\\"disableInputs\\\" [max-backends]=\\\"config.maxBackendsAllowed\\\" [existing-backends]=\\\"usedBackends\\\" (backendAdded)=\\\"addBackend($event)\\\"\\r\\n                        (backendDeleted)=\\\"deleteBackend($event)\\\"></amh-backend-selection>\\r\\n                    <amh-backend-selection *gpNotIf=\\\"['amh.modify.assignment']\\\" disabled=true [max-backends]=\\\"config.maxBackendsAllowed\\\" [existing-backends]=\\\"usedBackends\\\"></amh-backend-selection>\\r\\n                </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <!-- ./row -->\\r\\n        <div class=\\\"row col-sm-12 col-md-12 col-lg-12\\\" style=\\\"margin-top:10px;\\\">\\r\\n            <!--<div class=\\\"col-sm-12 col-md-12 col-lg-12\\\">-->\\r\\n                <div class=\\\"panel-heading\\\" style=\\\"border-top:solid #ccc 1px;\\\">\\r\\n\\r\\n                    <!--<h3 class=\\\"panel-title\\\">Rule Selection</h3>-->\\r\\n                    <span class=\\\"panel-title word-break\\\" style=\\\"font-weight: 300;font-family: Lato;\\\">Rule Selection</span>\\r\\n                    <button *gpIf=\\\"['amh.modify.rule']\\\" [disabled]=\\\"disableRuleCreation()\\\" class=\\\"btn btn-default btn-sm\\\" style=\\\"float: right; margin-top:5px;\\\" (click)=\\\"actionRuleNavigation()\\\"> Create Rule </button>\\r\\n                    <button *gpNotIf=\\\"['amh.modify.rule']\\\" disabled=true class=\\\"btn btn-default btn-sm\\\" style=\\\"float: right; margin-top:5px;\\\"> Create Rule </button>\\r\\n                </div>\\r\\n                <div class=\\\"panel-body\\\" style=\\\"border:solid #ccc 1px; padding: 0px 15px 0px 15px;\\\">\\r\\n                    <amh-rule-selection *gpIf=\\\"['amh.modify.assignment']\\\" [disabled]=\\\"disableInputs\\\" [assignment-type]=\\\"config.type\\\" [assignment-code]=\\\"assignment.code\\\" [existing-rules]=\\\"assignment.rules\\\" (statusChanged)=\\\"actionChangeRuleStatus($event)\\\"\\r\\n                        (ruleAdded)=\\\"addRule($event)\\\" (ruleDeleted)=\\\"deleteRule($event)\\\" (ruleNavigate)=\\\"actionRuleNavigation($event)\\\"></amh-rule-selection>\\r\\n                    <amh-rule-selection *gpNotIf=\\\"['amh.modify.assignment']\\\" disabled=true [assignment-type]=\\\"config.type\\\" [assignment-code]=\\\"assignment.code\\\" [existing-rules]=\\\"assignment.rules\\\"\\r\\n                         (ruleNavigate)=\\\"actionRuleNavigation($event)\\\"></amh-rule-selection>\\r\\n                </div>\\r\\n            <!--</div>-->\\r\\n        </div>\\r\\n        <!-- ./row -->\\r\\n    </div>\\r\\n</div>\\r\\n<!--/.row -->\\r\\n\\r\\n\\r\\n<alert (alertOutput)=\\\"confirmClose($event)\\\"></alert>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/amh-routing/amh-assignment/amh-assignment-content/amh-assignment-content.html\n// module id = 1262\n// module chunks = 16","export * from './amh-assignment-content.component';\n\n\n// WEBPACK FOOTER //\n// ./src/app/amh-routing/amh-assignment/amh-assignment-content/index.ts","import {Component, ViewChild} from 'angular2/core';\r\nimport {AMHAssignmentService} from \"../amh-service\";\r\nimport { Router, RouteParams} from 'angular2/router';\r\nimport {AssignmentConfig, AssignType, AssignmentUnique} from \"../../models/routing-amh\";\r\nimport {Option} from '../../models/referential/option';\r\nimport {Alert} from '../../common/components/ui/widgets/modal';\r\nimport {MenuConfig} from '../../models/menu';\r\nimport {HeaderSecondary} from '../../header-secondary';\r\nimport {AMHAssignmentContentComponent} from './amh-assignment-content';\r\nimport {AMHSelectionTableComponent} from '../amh-selection-table';\r\nimport { Permissions, NotPermissions } from '../../common/directives';\r\nimport {Auth, Logger} from '../../common/components/services';\r\n\r\n//this.logger.log('`AMHAssignment` component loaded asynchronously');\r\n\r\n@Component({\r\n  selector: 'amh-assignment',\r\n  template: require('./amh-assignment.html'),\r\n  providers: [AMHAssignmentService, Auth], \r\n  directives: [AMHSelectionTableComponent, AMHAssignmentContentComponent, Alert, HeaderSecondary, Permissions, NotPermissions]\r\n})\r\nexport class AMHAssignmentComponent {\r\n  @ViewChild(Alert) alert;\r\n  private disabledSaveButtons : boolean = false;\r\n  private isCreation: boolean;\r\n\r\n  private assignment: AssignmentUnique = undefined;\r\n  private navigateUrl: string;\r\n  private returnToString: string;\r\n  private returnParameters: any = { };\r\n  private assignmentConfig : AssignmentConfig;\r\n  private optionRollback: Option;\r\n  private saveStatus: string =\"\";\r\n  private  confirmation : any = undefined;\r\n  \r\n  private menuConfig : Array<MenuConfig> = [\r\n    new MenuConfig(\"fa fa-home\",\"Home\",\"Home\"),\r\n    new MenuConfig(\"fa fa-sitemap\",\"AMHHome\",\"AMH Routing\"),\r\n    new MenuConfig(\"fa fa-cloud-download\",\"\",\"Back End Assignment Rule Criteria\")];\r\n  \r\n  private selectionTables : Array<Option> = [\r\n    new Option(1,\"BK_CH\",\"Backend Channel\"),\r\n    new Option(2,\"DTN_CPY\",\"Distribution Copy\"),\r\n    new Option(4,\"FEED_DTN_CPY\",\"Feedback Distribution Copy\")\r\n  ];\r\n  private defaultOption : Option;\r\n  private saveAndContinue: boolean;\r\n  private withRollbackType : AssignType;\r\n  \r\n  constructor(private router: Router, routeParams: RouteParams, private amhAssignmentService: AMHAssignmentService,\r\n      private auth : Auth, private logger : Logger) { \r\n    this.setReturnTo(routeParams.params['return_to']);\r\n    this.addReturnParamter(\"st\", routeParams.params['st']);\r\n    this.updateSelectionTable(this.selectedAssignmentType(+ routeParams.params['st']));\r\n  }\r\n\r\n  ngOnInit() {\r\n    //this.logger.log('hello `AMH assignment ` component');\r\n  }\r\n\r\n  private selectedAssignmentType(assignType : AssignType) : Option {\r\n    let typeSelected = this.selectionTables.find((type) => { return type.id === assignType; });\r\n    return typeSelected ? typeSelected : this.selectionTables[0]; \r\n  }\r\n  \r\n  private addReturnParamter(name : string, value : any) {\r\n    if (!value) {\r\n      return;\r\n    }\r\n\r\n    this.returnParameters[name] = value;\r\n  }\r\n   \r\n  private setReturnTo(params: string) {\r\n    this.returnToString = 'AMHHome';\r\n\r\n    //this.logger.log(\" receiving params to return = \" + params);\r\n\r\n    if (!params || params.length == 0) {\r\n      return;\r\n    }\r\n\r\n    let parameters = params.split('&');\r\n    this.returnToString = parameters[0] || 'AMHHome';\r\n    //this.logger.log(\" paramteres to return \" + parameters);\r\n\r\n  }\r\n\r\n  private alertOpen() {\r\n    this.alert.alertFooter = false;\r\n    this.alert.cancelButton = false;\r\n    this.alert.okButton = false;\r\n    this.alert.alertHeader = true;\r\n    this.alert.alertTitle = \"Alert\";\r\n    this.alert.message = \"Save in progress...\";\r\n    this.alert.cancelButtonText = \"Ok\";\r\n    this.alert.cancelButtonResponse = 0;\r\n    this.alert.open();\r\n  }\r\n\r\n  private closeAlert(saveAndContinue: boolean, withError? : boolean) {\r\n    //setTimeout(() => this.alert.cancel(), 1000);\r\n    this.alert.cancel();\r\n    if (!saveAndContinue && !withError) {\r\n      setTimeout(() => this.router.parent.navigate([this.returnToString, this.returnParameters]), 1200);\r\n    }\r\n  }\r\n\r\n //ROMOVE this useless method\r\n  private isValidAssigment(): any {\r\n    if (!this.assignment) {\r\n      return { isValid: false, errorMsgs: [\"No assignment defined\"] };\r\n    }\r\n\r\n    // let errorMessages = this.validateSequences();\r\n    let errorMessages = \"\";\r\n\r\n\r\n    return { isValid: (!errorMessages || errorMessages.length == 0), errorMsgs: errorMessages };\r\n  }\r\n\r\n private msgEmptyRules() {\r\n    this.alert.waitIcon = false;\r\n    this.alert.alertFooter = true;\r\n    this.alert.okButton = false;\r\n    this.alert.alertHeader = true;\r\n    this.alert.alertTitle = \"Alert\";\r\n    this.alert.message = \"No rules assigned. Every message will be send to the assigned backend(s).\";\r\n    this.alert.cancelButton = true;\r\n    this.alert.cancelButtonText = \"Cancel\";\r\n    this.alert.cancelButtonResponse = 0;\r\n    this.alert.yesButton = true;\r\n    this.alert.yesButtonText = \"OK\";\r\n    this.alert.yesButtonResponse = 1;\r\n    this.alert.open();\r\n  }\r\n\r\n  alertResponse(resp){\r\n    switch(resp) {\r\n      case 0: //Empty rules cancel\r\n        this.saveStatus = \"Cancel\";\r\n      break;\r\n      case 1: //Empty rules OK\r\n        this.saveStatus = \"\";\r\n        this.doSave(this.saveAndContinue, this.withRollbackType);\r\n      break;\r\n      case 300: //Navigation cancel response\r\n        //Do nothing\r\n      break;\r\n      case 301: //Navigation Yes response, go ahead.\r\n        this.router.parent.navigate([this.navigateUrl, this.returnParameters]);\r\n      break;\r\n    }\r\n  }\r\n\r\n  private save(saveAndContinue: boolean, withRollbackType ? : AssignType) {\r\n    if (this.assignment.rules.length == 0) {\r\n      this.msgEmptyRules();\r\n      this.saveAndContinue = saveAndContinue;\r\n      this.withRollbackType = withRollbackType; \r\n      return;\r\n    }\r\n    this.doSave(saveAndContinue, withRollbackType);\r\n  }\r\n\r\n  private doSave(saveAndContinue: boolean, withRollbackType ? : AssignType) {\r\n    let assignmentStatus = this.isValidAssigment();\r\n    if (!assignmentStatus.isValid) {\r\n      assignmentStatus.errorMsgs.forEach(x => this.logger.error(x));\r\n    } \r\n    // else {\r\n    //   this.logger.log(\"Everything is O.K assignment with sequence \" + this.assignment.sequence);\r\n    //   this.assignment.rules.forEach(r => this.logger.log(\"       \" + r.code + \" - \" + r.sequence));\r\n    // }\r\n\r\n    let assignmentType = withRollbackType ? this.optionRollback.id : this.defaultOption.id;\r\n  //  this.logger.log(\"saving assignment ...\" + this.assignment.backendPrimaryKey);\r\n    this.alertOpen();\r\n    let send;\r\n    \r\n    if (this.isCreation) {\r\n      send = this.amhAssignmentService.createAssignment(assignmentType, this.assignment, this.auth.getUser());\r\n    } else {\r\n      send = this.amhAssignmentService.saveAssignment(assignmentType, this.assignment, this.auth.getUser());\r\n    }\r\n\r\n    send.subscribe(\r\n      data => {\r\n        //this.logger.log(\"[saveRule] %s\", data);\r\n      },\r\n      err => {\r\n        this.logger.error(\"[saveRule] Can't get assignments. Error code: %s, URL: %s \", err.status, err.url);\r\n        this.alert.message = \"An error has occurred, the backend cannot be assigned !!\";\r\n        this.closeAlert(saveAndContinue, true);\r\n        this.saveStatus = \"Error\";\r\n        if (saveAndContinue) {\r\n          this.confirmation = {msg: 'An error has occurred, while saving this assignment !!', type: 'danger', closable: true};\r\n        }\r\n      }, () => {\r\n        //this.logger.log(\"[saveRule] assignment's rules from backend [%s,%s+] retrieved\");\r\n        this.alert.message = \"Assignment done sucessfuly !!\";\r\n        this.closeAlert(saveAndContinue);\r\n        if (saveAndContinue) {\r\n          this.confirmation = {msg: 'Assignment saved', type: 'success', closable: true};\r\n        }\r\n        this.saveStatus = \"OK\";\r\n        this.isCreation = false;\r\n      }\r\n    );\r\n  }\r\n\r\n  private actionCancel() {\r\n   // this.logger.log(\"canceling assignment ...\");\r\n    this.verifyAndNavigate(this.returnToString, 300, 301);\r\n    //this.router.parent.navigate([, this.returnParameters]);\r\n  }\r\n\r\n  private updateDisabledButtons(data) {\r\n  //  this.logger.log(\"disabledSaveButtons ------------ \" + data);\r\n    this.disabledSaveButtons = data;\r\n  }\r\n\r\n  private saveWork(config) {\r\n   // this.logger.log(\"saving work saveAndContinue=\" + config.saveAndContinue+ \" withRollback= \"+  config.withRollbackType);\r\n    this.save(config.saveAndContinue, config.withRollbackType);\r\n  }\r\n\r\n  private updateAssignment(assignment) {\r\n  //  this.logger.log(\"assignment updated ------------  \" + assignment);\r\n  //  assignment.rules.forEach(rule => this.logger.log(\" rule code in assignment \" + rule.code));\r\n    this.assignment = assignment;\r\n  }\r\n\r\n  private updateSelectionTable(option) {\r\n    let codeToFind = this.defaultOption ? this.defaultOption.code : option.code; \r\n    this.optionRollback = this.selectionTables.find((innerOption) => { return innerOption.code === codeToFind; });\r\n    this.defaultOption = option;\r\n    this.assignmentConfig = new AssignmentConfig(option.id);\r\n   // this.logger.log(\"selection table updated ------------  \" + option.description + \"  MAX \" + this.assignmentConfig.maxBackendsAllowed);\r\n  }\r\n\r\n  private rollbackSelectionTable(rollbackCommand) {\r\n    //  this.logger.log(\"rolling back to code \" + this.optionRollback.code);\r\n      if (this.assignmentConfig.type == this.optionRollback.id) {\r\n        this.logger.debug(\"No changes to rollback\");\r\n        return;\r\n      }\r\n      this.defaultOption = this.optionRollback;\r\n      this.assignmentConfig = new AssignmentConfig(this.defaultOption.id);\r\n  }\r\n\r\n  actionUpdateCreationStatus(isCreation : boolean) {\r\n    this.isCreation = isCreation;\r\n  }\r\n\r\n\r\n  private alertPreventLostChanges(cancelResponse: number, yesResponse : number) {\r\n    this.alert.waitIcon = false;\r\n    this.alert.alertFooter = true;\r\n    this.alert.cancelButton = true;\r\n    this.alert.cancelButtonText = \"Cancel\";\r\n    this.alert.cancelButtonResponse = cancelResponse;\r\n    this.alert.yesButton = true;\r\n    this.alert.yesButtonText = \"Yes\";\r\n    this.alert.yesButtonResponse = yesResponse;\r\n    this.alert.okButton = false;\r\n    this.alert.alertHeader = true;\r\n    this.alert.alertTitle = \" Alert \";\r\n    this.alert.message = \"All changes will be lost, Do you want to continue?\";\r\n    this.alert.open();\r\n  }\r\n\r\n  actionNavigate(link : string) {\r\n    // this.logger.debug(\" going to \"+link);\r\n    // this.logger.debug(\" is dirty ?? \"+this.amhAssignmentService.isAssignmentStatusDirty());\r\n    this.verifyAndNavigate(link, 300, 301);\r\n  }\r\n\r\n  private verifyAndNavigate(link : string, cancelResponse : number, yesResponse : number) {\r\n    let isDirty = this.amhAssignmentService.isAssignmentStatusDirty(); \r\n    if (isDirty) {\r\n        this.logger.debug(\"inside if \"+ isDirty);\r\n        this.navigateUrl = link;\r\n        this.alertPreventLostChanges(cancelResponse, yesResponse);\r\n        return;\r\n    }\r\n\r\n  this.logger.debug(\"it was not dirty going to \"+link); \r\n    this.router.parent.navigate([link, this.returnParameters]);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/amh-routing/amh-assignment/amh-assignment.component.ts","module.exports = \"<section id=\\\"main-content\\\">\\r\\n    <section class=\\\"wrapper\\\">\\r\\n        <menu-header [header-alert]=\\\"confirmation\\\" [header-navigate]=\\\"false\\\" [header-menu]=\\\"menuConfig\\\" (navigate)=\\\"actionNavigate($event)\\\"></menu-header>\\r\\n\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-sm-12 col-md-12 col-lg-12\\\">\\r\\n                <div class=\\\"panel panel-default\\\">\\r\\n                    <div class=\\\"panel-heading\\\">\\r\\n                    <div class=\\\"row col-sm-12 col-md-12 col-lg-12\\\">\\r\\n                        <amh-selection-table style=\\\"padding:0px;\\\" class=\\\"col-sm-4 col-md-4 col-lg-4\\\" [default-option]=\\\"defaultOption\\\" [options]=\\\"selectionTables\\\" (tableSelected)=\\\"updateSelectionTable($event)\\\">\\r\\n                        </amh-selection-table>\\r\\n                        <div class=\\\"col-sm-8 col-md-8 col-lg-8\\\">&nbsp;</div>\\r\\n                    </div>\\r\\n                    </div>\\r\\n                    <div class=\\\"panel-body\\\" style=\\\"padding-top:8px;\\\">\\r\\n                        <amh-assignment-content [save-status]=\\\"saveStatus\\\" [selection-config]=\\\"assignmentConfig\\\" (rollbackSelection)=\\\"rollbackSelectionTable($event)\\\" (enableSaveButtons)=\\\"updateDisabledButtons($event)\\\" (saveWork)=\\\"saveWork($event)\\\"\\r\\n                             (creationStatus)=\\\"actionUpdateCreationStatus($event)\\\" (assignmentUpdate)=\\\"updateAssignment($event)\\\">\\r\\n                        </amh-assignment-content>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <!--/.row-->\\r\\n    </section>\\r\\n</section>\\r\\n\\r\\n<alert (alertOutput)=\\\"alertResponse($event)\\\"></alert>\\r\\n\\r\\n<footer class=\\\"footer dark-bg\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-sm-12 col-md-12 col-lg-12\\\">\\r\\n            <div class=\\\"top-nav notification-row pull-right\\\">\\r\\n                <button *gpIf=\\\"['amh.modify.assignment']\\\" [disabled]=\\\"disabledSaveButtons\\\" class=\\\"btn btn-primary\\\" (click)=\\\"save(true)\\\"> Save & Continue</button>\\r\\n                <button *gpIf=\\\"['amh.modify.assignment']\\\" [disabled]=\\\"disabledSaveButtons\\\" class=\\\"btn btn-primary\\\" (click)=\\\"save(false)\\\"> Save </button>\\r\\n                <button *gpNotIf=\\\"['amh.modify.assignment']\\\" disabled=true class=\\\"btn btn-primary\\\"> Save & Continue</button>\\r\\n                <button *gpNotIf=\\\"['amh.modify.assignment']\\\" disabled=true class=\\\"btn btn-primary\\\"> Save </button>\\r\\n                <button class=\\\"btn btn-default\\\" (click)=\\\"actionCancel()\\\"> Back</button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</footer>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/amh-routing/amh-assignment/amh-assignment.html\n// module id = 1263\n// module chunks = 16","export * from './amh-assignment.component';\n\n\n// WEBPACK FOOTER //\n// ./src/app/amh-routing/amh-assignment/index.ts","import {Component, ElementRef, EventEmitter, Output, Input, ViewChild, OnInit, OnChanges, SimpleChange} from 'angular2/core';\r\nimport {AMHAssignmentService} from \"../amh-service\";\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {DataTable, DataTableDirectives} from 'angular2-datatable/datatable';\r\nimport {Backend} from \"../../models/routing-amh\";\r\nimport {Alert} from '../../common/components/ui/widgets/modal';\r\nimport {Logger} from '../../common/components/services';\r\n\r\n\r\n//this.logger.log('`AMHBackendSelection` component loaded asynchronously');\r\n\r\n@Component({\r\n  selector: 'amh-backend-selection',\r\n  template: require('./amh-backend-selection.html'),\r\n  host: {\r\n    '(document:click)': 'handleClick($event)',\r\n  },\r\n  providers: [AMHAssignmentService],\r\n  directives: [Alert, DataTableDirectives]\r\n})\r\nexport class AMHBackendSelectionComponent implements OnInit, OnChanges {\r\n  @ViewChild(Alert) alert;\r\n  @ViewChild(DataTable) table;\r\n\r\n  @Input(\"existing-backends\") public existingBackends: Array<any>;\r\n  @Input(\"max-backends\") public maxBackends: number = 1000;\r\n  @Input(\"disabled\") public disabledParam: boolean = false;\r\n  @Output() public backendAdded: EventEmitter<any> = new EventEmitter();\r\n  @Output() public backendDeleted: EventEmitter<any> = new EventEmitter();\r\n\r\n  private backends: Array<Backend> = [];\r\n  private originalBackends: Array<Backend> = [];\r\n  private backendDataSource: Observable<Backend>;\r\n  private bodyMargin: number = 0;\r\n\r\n  private selectedBackend: Backend = new Backend(\"\", \"\");\r\n  private selectedPkDirection: string = \"\";\r\n  private backendCodeToDelete: string = undefined;\r\n  private activePage: number = 1;\r\n  private disabled: boolean = true;\r\n\r\n  constructor(private amhAssignmentService: AMHAssignmentService, private elementRef: ElementRef, private logger : Logger) {\r\n    this.backendDataSource = this.amhAssignmentService.findBackends();\r\n  }\r\n\r\n  ngOnChanges(changes: { [propertyName: string]: SimpleChange }) {\r\n    //this.logger.log(\" updating backends \" + changes);\r\n    if (changes[\"existingBackends\"]) {\r\n      //this.logger.log(\"existingBackends has been changed,so update\");\r\n      this.dynamicUpdate();\r\n    }\r\n  }\r\n\r\n  ngOnInit() {\r\n    //this.logger.log('hello `AMH backend selection` component');\r\n    // Get the data from the server\r\n    this.backendDataSource.subscribe(\r\n      data => {\r\n          let resp = AMHAssignmentService.getFromSource(data)\r\n          resp.forEach(backend => {\r\n            this.originalBackends.push(backend);\r\n          });\r\n      },\r\n      err =>\r\n        this.logger.error(\"Can't get backends. Error code: %s, URL: %s \", err.status, err.url)\r\n       // ,() => this.logger.log('Backend(s) are retrieved')\r\n    );\r\n  }\r\n\r\n  handleClick(event) {\r\n    var clickedComponent = event.target;\r\n    var inside = false;\r\n\r\n    do {\r\n      // this.logger.log(clickedComponent + \" equals \" + (clickedComponent === this.elementRef.nativeElement) );\r\n      if (clickedComponent === this.elementRef.nativeElement) {\r\n        inside = true;\r\n      }\r\n      clickedComponent = clickedComponent.parentNode;\r\n    } while (clickedComponent);\r\n\r\n    if (!inside) {\r\n      this.backends = [];\r\n      if (!this.selectedBackend.code || !this.selectedBackend.pkDirection) {\r\n        this.selectedBackend = new Backend(\"\", \"\");\r\n      }\r\n    }\r\n  }\r\n\r\n  select(backend: Backend) {\r\n    this.selectedBackend = new Backend(backend.pkCode, backend.pkDirection, backend.code, backend.dataOwner, backend.description);\r\n    this.selectedPkDirection = backend.pkDirection\r\n    this.backends = [];\r\n  }\r\n\r\n  private dynamicUpdate() {\r\n    this.calculeInputDisabled();\r\n    this.calculeBodyMargin();\r\n  }\r\n\r\n  private calculeInputDisabled() {\r\n    // this.logger.log(\"this.disabledParam \" + this.disabledParam + \" this.existingBackends.length  \" + this.existingBackends.length +\" this.maxBackends \"+ this.maxBackends);\r\n    this.disabled = this.disabledParam || this.existingBackends.length >= this.maxBackends;\r\n  }\r\n\r\n  private calculeBodyMargin() {\r\n    if (this.existingBackends.length >= 4) {\r\n      this.bodyMargin = 0;\r\n      return;\r\n    }\r\n\r\n    if (this.existingBackends.length == 0) {\r\n      this.bodyMargin = 67;\r\n      return;\r\n    }\r\n\r\n    if (this.existingBackends.length == 1) {\r\n      this.bodyMargin = 39;\r\n      return;\r\n    }\r\n\r\n    if (this.existingBackends.length == 2) {\r\n      this.bodyMargin = 22;\r\n      return;\r\n    }\r\n\r\n    if (this.existingBackends.length == 3) {\r\n      this.bodyMargin = 4;\r\n      return;\r\n    }\r\n\r\n  }\r\n\r\n  private add() {\r\n    if (!this.selectedBackend.pkCode || !this.selectedBackend.pkDirection) {\r\n      //this.logger.log(\"no backend selected\");\r\n      return;\r\n    } \r\n    // else {\r\n    //   this.logger.log(\"selected backend \" + this.selectedBackend.pkCode);\r\n    // }\r\n\r\n    let addedBackend = new Backend(this.selectedBackend.pkCode, this.selectedBackend.pkDirection, this.selectedBackend.code, this.selectedBackend.dataOwner, this.selectedBackend.description, this.selectedBackend.lockCode);\r\n    this.backendAdded.emit(addedBackend);\r\n    this.existingBackends = [addedBackend, ...this.existingBackends];\r\n    this.selectedBackend = new Backend(\"\", \"\");\r\n    this.selectedPkDirection = \"\";\r\n\r\n   // this.logger.log(\" adding \" + addedBackend.pkCode);\r\n    this.dynamicUpdate();\r\n    //this.existingBackends.forEach(ee => this.logger.log(\" code \" + ee.pkCode + \" dir \" + ee.pkDirection));\r\n  }\r\n\r\n  private deleteBackend(backend: Backend) {\r\n    this.confirmBackendDeletion();\r\n    this.backendCodeToDelete = backend.pkCode;\r\n  }\r\n\r\n  confirmBackendDeletion() {\r\n    this.alert.waitIcon = false;\r\n    this.alert.alertFooter = true;\r\n    this.alert.cancelButton = false;\r\n    this.alert.yesButton = true;\r\n    this.alert.yesButtonText = \"Yes\";\r\n    this.alert.yesButtonResponse = 21;\r\n    this.alert.okButton = true;\r\n    this.alert.okButtonText = \"No\";\r\n    this.alert.okButtonResponse = 22;\r\n    this.alert.alertHeader = true;\r\n    this.alert.alertTitle = \" Alert \";\r\n    this.alert.message = \"Are you sure you want to unassign this backend?\";\r\n    this.alert.open();\r\n  }\r\n\r\n  confirmClose(data) {\r\n   // this.logger.log(\"confirming backend deletion ------------  \" + data);\r\n    if (data === 0) {\r\n      return;\r\n    }\r\n\r\n    if (data == 21) {\r\n    //  this.logger.log(\"deleting... \" + this.backendCodeToDelete);\r\n      this.existingBackends = this.existingBackends.filter((item: any) =>\r\n        item[\"pkCode\"] !== this.backendCodeToDelete);\r\n      this.backendDeleted.emit(this.backendCodeToDelete);\r\n      this.backendCodeToDelete = \"\";\r\n      this.table.setPage(1, 3);\r\n      this.dynamicUpdate();\r\n      // this.logger.log(\" on Page \"+this.table.getPage().activePage);\r\n    }\r\n\r\n    if (data == 22) {\r\n    //  this.logger.log(\"no deletion for backend \" + this.backendCodeToDelete);\r\n      this.backendCodeToDelete = \"\";\r\n    }\r\n  }\r\n\r\n  private updateBackends(filterText) {\r\n    if (!filterText) {\r\n      this.backends = [];\r\n      return;\r\n    }\r\n\r\n    let assignedBackendCodeMap = {};\r\n\r\n    this.selectedPkDirection = \"\";\r\n    this.selectedBackend.pkDirection = \"\";\r\n    this.existingBackends.forEach(backend => assignedBackendCodeMap[backend.pkCode] = true);\r\n\r\n    let originalBackendsMinusAssignedBackends = this.originalBackends.filter(backend => {\r\n      return !assignedBackendCodeMap[backend.pkCode];\r\n    });\r\n\r\n    let valueToFind = filterText.toUpperCase();\r\n\r\n    let filteredBackendExpresssion: Array<any> = originalBackendsMinusAssignedBackends.filter((item: any) =>\r\n      item[\"pkCode\"].toUpperCase().match(valueToFind));\r\n\r\n    let filteredBackendCode: Array<any> = originalBackendsMinusAssignedBackends.filter((item: any) =>\r\n      item[\"pkDirection\"].toUpperCase().match(valueToFind));\r\n\r\n    let filteredData = filteredBackendExpresssion.concat(filteredBackendCode);\r\n\r\n    let uniqueList: Array<any> = [];\r\n    filteredData.forEach(item => {\r\n      let found = uniqueList.find((value, index, array) => { return item[\"pkCode\"] == value[\"pkCode\"]; });\r\n      if (!found) {\r\n        uniqueList.push(item);\r\n      }\r\n    });\r\n\r\n    this.backends = uniqueList.map(backend => { backend.pkCode = backend.pkCode.toUpperCase(); return backend; });\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/amh-routing/amh-backend-selection/amh-backend-selection.component.ts","module.exports = \"<!--main content start-->\\r\\n    <input [disabled]=\\\"disabled\\\" [(ngModel)]=\\\"selectedBackend.pkCode\\\" (keyup)=\\\"updateBackends($event.target.value)\\\" style=\\\"margin:5px 5px 10px 0px;\\\"\\r\\n    /> &nbsp;\\r\\n    <i class=\\\"fa fa-plus-square image-pointer\\\" aria-hidden=\\\"true\\\" (click)=\\\"add()\\\" style=\\\"font-size:1.2em;\\\"></i> &nbsp;\\r\\n    <!--<span *ngIf=\\\"selectedBackend != undefined\\\"> {{selectedPkDirection}}</span>-->\\r\\n    <div style=\\\"width:60%; height:200px; overflow: auto; z-index:200;\\\" class=\\\"suggestions\\\" *ngIf=\\\"backends.length > 0\\\">\\r\\n        <table style=\\\"width:100%;\\\" >\\r\\n            <tbody>\\r\\n                <tr *ngFor=\\\"let item of backends\\\" (click)=\\\"select(item)\\\">\\r\\n                    <td> <b>{{item.pkCode}}</b> </td>\\r\\n                    <td> {{item.pkDirection}} </td>\\r\\n                </tr>\\r\\n            </tbody>\\r\\n        </table>\\r\\n    </div>\\r\\n        <p *ngIf=\\\"existingBackends.length == 0\\\"> <b>No backend associated to assignment (mandatory) </b> </p>\\r\\n        <table *ngIf=\\\"existingBackends.length > 0\\\" class=\\\"table table-striped table-bordered table-condensed table-responsive\\\" [mfData]=\\\"existingBackends\\\"\\r\\n            #assignedTable=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"3\\\" [mfActivePage]=\\\"activePage\\\">\\r\\n            <thead>\\r\\n                <tr>\\r\\n                    <th style=\\\"width: 8%\\\"> Action </th>\\r\\n                    <th style=\\\"width: 39%\\\">Code </th>\\r\\n                    <th style=\\\"width: 53%\\\"> Direction </th>\\r\\n                </tr>\\r\\n            </thead>\\r\\n            <tbody>\\r\\n                <tr *ngFor=\\\"let backend of assignedTable.data\\\">\\r\\n                    <td>&nbsp; &nbsp;\\r\\n                        <i class=\\\"fa fa-times image-pointer\\\" aria-hidden=\\\"true\\\" (click)=\\\"deleteBackend(backend)\\\" style=\\\"font-size:1.5em;\\\"></i>                                </td>\\r\\n                    <td class=\\\"color-black\\\">{{ backend.pkCode | uppercase }}</td>\\r\\n                    <td class=\\\"color-black\\\">{{ backend.pkDirection }}</td>\\r\\n                </tr>\\r\\n            </tbody>\\r\\n            <tfoot>\\r\\n                <tr>\\r\\n                    <td colspan=\\\"3\\\">\\r\\n                        <mfBootstrapPaginator [rowsOnPageSet]=\\\"[]\\\"></mfBootstrapPaginator>\\r\\n                    </td>\\r\\n                </tr>\\r\\n            </tfoot>\\r\\n        </table>\\r\\n        <div *ngIf=\\\"existingBackends.length < 4\\\" [style.margin.px]=\\\"bodyMargin\\\">&nbsp;</div>\\r\\n<alert (alertOutput)=\\\"confirmClose($event)\\\"></alert>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/amh-routing/amh-backend-selection/amh-backend-selection.html\n// module id = 1264\n// module chunks = 16","export * from './amh-backend-selection.component';\n\n\n// WEBPACK FOOTER //\n// ./src/app/amh-routing/amh-backend-selection/index.ts","import {Component, ElementRef, ViewChild, EventEmitter, Output, Input, OnInit, OnChanges, SimpleChange } from 'angular2/core';\r\nimport {AMHRoutingService} from \"../amh-routing.service\";\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {AMHRule, AssignmentUniqueRule, AssignType} from \"../../models/routing-amh\";\r\nimport {DataTable, DataTableDirectives} from 'angular2-datatable/datatable';\r\nimport {Alert} from '../../common/components/ui/widgets/modal';\r\nimport {Logger} from '../../common/components/services';\r\n\r\n//this.logger.log('`AMHRuleSelection` component loaded asynchronously');\r\n\r\n@Component({\r\n  selector: 'amh-rule-selection',\r\n  template: require('./amh-rule-selection.html'),\r\n  host: {\r\n    '(document:click)': 'handleClick($event)',\r\n  },\r\n  providers: [AMHRoutingService],\r\n  directives: [DataTableDirectives, Alert]\r\n})\r\nexport class AMHRuleSelectionComponent implements OnInit, OnChanges {\r\n  @ViewChild(DataTable) table;\r\n  @Input(\"assignment-type\") public assignType : AssignType = AssignType.BK_CHANNEL;\r\n  @Input(\"assignment-code\") public assignmentCode : string = \"\";\r\n  @Input(\"disabled\") public disabled : boolean = false;\r\n  @Input(\"existing-rules\") public existingRules : Array<AssignmentUniqueRule> = [];\r\n  @Output() public ruleAdded:EventEmitter<any> = new EventEmitter();\r\n  @Output() public ruleDeleted:EventEmitter<any> = new EventEmitter();\r\n  @Output() public statusChanged:EventEmitter<any> = new EventEmitter();\r\n  @Output() public ruleNavigate:EventEmitter<any> = new EventEmitter();\r\n  @ViewChild(Alert) alert;\r\n\r\n  private rules: Array<AMHRule> = [];\r\n  private originalRules: Array<AMHRule> = [];\r\n  private ruleDataSource: Observable<AMHRule>;\r\n  private selectedRule: AMHRule = new AMHRule(\"\", \"\");\r\n  private selectedExpression: string = \"\";\r\n  private ruleCodeToDelete : string = \"\";\r\n  private ruleErrors: Map<string, string[]> = new Map<string, string[]>();\r\n\r\n  constructor( private amhRoutingService: AMHRoutingService, private elementRef: ElementRef, private logger : Logger) {\r\n    this.ruleDataSource = this.amhRoutingService.findRules();\r\n  }\r\n\r\n  ngOnChanges(changes: { [propertyName: string]: SimpleChange }) {\r\n    if (changes[\"disabled\"]) {\r\n        this.logger.debug(\"disabled changed \"+ changes[\"disabled\"].currentValue);      \r\n    }\r\n  }\r\n  ngOnInit() {\r\n    this.logger.log('hello `AMH rule selection` component');\r\n    // Get the data from the server\r\n    this.ruleDataSource.subscribe(\r\n      data => {\r\n        if (Array.isArray(data)) {\r\n          this.logger.log(\"Array \" + data);\r\n          //  this.data=data;\r\n        } else {\r\n          let resp = AMHRoutingService.getFromSource(data)\r\n          resp.forEach(rule => {\r\n            if (rule.code) {\r\n              //this.logger.debug(\"in loding \"+ rule.code);\r\n            this.originalRules.push(AMHRule.fromJson(rule));\r\n            } else {\r\n              this.logger.warn(\"no code defined in rule  \");\r\n            }\r\n          });\r\n        }\r\n      },\r\n      err =>\r\n        this.logger.log(\"Can't get rules. Error code: %s, URL: %s \", err.status, err.url),\r\n      () => this.logger.log('Rule(s) are retrieved')\r\n    );\r\n\r\n  }\r\n\r\n  handleClick(event) {\r\n    var clickedComponent = event.target;\r\n    var inside = false;\r\n    do {\r\n      if (clickedComponent === this.elementRef.nativeElement) {\r\n        inside = true;\r\n      }\r\n      clickedComponent = clickedComponent.parentNode;\r\n    } while (clickedComponent);\r\n\r\n    if (!inside) {\r\n      this.rules = [];\r\n      if (!this.selectedRule.code || !this.selectedRule.expression) {\r\n        this.selectedRule = new AMHRule(\"\", \"\");\r\n      }\r\n    }\r\n  }\r\n\r\n  select(rule: AMHRule) {\r\n    let found = this.originalRules.find(oRule => { return oRule.code.toUpperCase() == rule.code.toUpperCase(); });\r\n    this.selectedRule = new AMHRule(found.code, found.expression, found.dataOwner, found.lockCode, found.type);\r\n    this.selectedExpression = found.expression.substr(0, 100) + \" ...\"\r\n    this.logger.debug(\" rule.code \"+ rule.code+ \" found code \" + found.code);\r\n    this.rules = [];\r\n  }\r\n\r\n\r\n  private add() {\r\n    if (!this.selectedRule.code || !this.selectedRule.expression) {\r\n      this.logger.log(\"no rule selected\");\r\n      return;\r\n    } else {\r\n      this.logger.log(\"selected rule \" + this.selectedRule.code);\r\n    }\r\n\r\n    let addedRule = new AssignmentUniqueRule(this.selectedRule.code, this.selectedRule.dataOwner, this.selectedRule.lockCode, 0);\r\n    addedRule.expression = this.selectedRule.expression;\r\n    this.ruleAdded.emit(addedRule);\r\n    this.statusChanged.emit(true);\r\n    this.selectedRule = new AMHRule(\"\", \"\");\r\n    this.selectedExpression = \"\";\r\n    this.ruleErrors.set(addedRule.code, [\"Rule sequence is incorrect\"]);\r\n    this.logger.log(\" adding \" + addedRule.code);\r\n  }\r\n\r\n  private updateRules(filterText) {\r\n    if (!filterText) {\r\n      this.rules = [];\r\n      return;\r\n    }\r\n\r\n    let assignedRuleCodeMap = {};\r\n\r\n    this.selectedExpression = \"\";\r\n    this.selectedRule.expression = \"\";\r\n    \r\n    this.existingRules.forEach(rule => assignedRuleCodeMap[rule.code] = true);\r\n\r\n    let originalRulesMinusAssignedRules = this.originalRules.filter(rule => {\r\n      return !assignedRuleCodeMap[rule.code];\r\n    });\r\n\r\n    let valueToFind = filterText.toUpperCase();\r\n\r\n    let filteredRuleExpresssion:Array<any> = originalRulesMinusAssignedRules.filter((item:any) =>\r\n     {  \r\n      return item[\"expression\"] && item[\"expression\"].toUpperCase().match(valueToFind);\r\n     }\r\n      );\r\n\r\n    let filteredRuleCode:Array<any> = originalRulesMinusAssignedRules.filter((item:any) =>\r\n      item[\"code\"] && item[\"code\"].toUpperCase().match(valueToFind));\r\n    \r\n    let filteredData =  filteredRuleExpresssion.concat(filteredRuleCode);\r\n\r\n    let uniqueList : Array<any>= [];\r\n    filteredData.forEach( item => {\r\n        let found = uniqueList.find((value, index, array) => { return item[\"code\"] == value[\"code\"]; });\r\n        if (!found) {\r\n          uniqueList.push(item);\r\n        }\r\n    });\r\n\r\n    this.rules = uniqueList.map( rule => { return rule.cloneWithUpperCaseCode(); });\r\n  }\r\n\r\n  private errorMsg(code : string) {\r\n    if (this.ruleErrors.get(code) && this.ruleErrors.get(code).length > 0) {\r\n      return this.ruleErrors.get(code)[0];\r\n    }\r\n\r\n    return \"\";\r\n  }\r\n\r\n  private isInteger(x: number): boolean {\r\n    return x % 1 === 0;\r\n  }\r\n\r\n  private getRulesUniquenessErrorMsgs(): any[] {\r\n    if (!this.existingRules) {\r\n      return [];\r\n    }\r\n    let hashRuleCode = {};\r\n    let errorMessages2 : Array<any> = [];\r\n\r\n    let errorMessages: any[] = this.existingRules.filter(rule => {\r\n      if (hashRuleCode[rule.sequence]) {\r\n        errorMessages2.push({\"code\": rule.code, \"msg\":rule.sequence + \" is used by \" +hashRuleCode[rule.sequence].code.toUpperCase()});\r\n        return true;\r\n      }\r\n\r\n      hashRuleCode[rule.sequence] = rule;\r\n      return false;\r\n    }).map(rule => {\r\n      return {\"code\": rule.code, \"msg\":rule.sequence + \" is used by \" +rule.code.toUpperCase()};\r\n    });\r\n\r\n    return errorMessages2;\r\n  }\r\n  \r\n  private ruleSequenceUpdate(ruleCode: string, inputElem: HTMLInputElement) {\r\n    \r\n    let numericSeqValue: number = + inputElem.value;\r\n    let rule = this.existingRules.find((rule) => { return rule.code === ruleCode; });\r\n\r\n    if (rule === undefined) {\r\n      this.logger.log(\"rulecode \" + ruleCode + \" not found in assignment rule list \");\r\n      this.ruleErrors.set(rule.code, [\"rule code\" + ruleCode + \" does not exist un assignment rule list\"]);\r\n      this.statusChanged.emit(true);\r\n      return;\r\n    }\r\n    this.logger.log(\"emmiting assignment from content\");\r\n    // this.assignmentUpdate.emit(this.assignment);\r\n\r\n    this.ruleErrors.set(rule.code, []);\r\n    let oldSequence = rule.sequence;\r\n\r\n    if (!numericSeqValue || !this.isInteger(numericSeqValue) || numericSeqValue < 0) {\r\n      this.logger.log(\" not valid sequence \" + numericSeqValue + \" old value \" + rule.sequence);\r\n      this.logger.log(\"++++setting is not good \" + ruleCode);\r\n      this.ruleErrors.set(rule.code, [\"Rule sequence is incorrect\"]);\r\n      this.statusChanged.emit(true);\r\n      return;\r\n    }\r\n    rule.sequence = numericSeqValue;\r\n    // this.isDirty = true;\r\n    let uniquenessErrors = this.getRulesUniquenessErrorMsgs();\r\n\r\n    if (uniquenessErrors.length > 0) {\r\n      this.logger.log(\"+++++has uniqueness errors returning old value of \" + oldSequence);\r\n      this.ruleErrors.set(rule.code, uniquenessErrors.map(obj => obj.msg));\r\n      this.statusChanged.emit(true);\r\n      // this.isDirty = false;\r\n    } else {\r\n      this.logger.log(\"there is no duplicates sequences on assignment rules \");\r\n      let statusToSend = false;\r\n      let tmpStatus = true;\r\n      this.ruleErrors.forEach( (value, key, map) => {\r\n          tmpStatus = false;\r\n          if (value && value.length > 0) {\r\n            tmpStatus = true;\r\n            let nonDuplicateError = value.find( (msg) => { return msg.indexOf(\"is used by\") > 0; });\r\n            if (nonDuplicateError) {\r\n              this.ruleErrors.set(key, []);\r\n              tmpStatus = false;\r\n            }\r\n          }\r\n          statusToSend = statusToSend || tmpStatus; \r\n      });\r\n     \r\n      this.statusChanged.emit(statusToSend);\r\n    }\r\n  }\r\n\r\n  private deleteRule(rule: AMHRule) {\r\n    this.confirmRuleDeletion();\r\n    this.ruleCodeToDelete = rule.code;\r\n  }\r\n  \r\n  actionNavigationEmit(rule : AMHRule) {\r\n    this.logger.debug(\"going to rule edition\");\r\n    this.ruleNavigate.emit(rule.code);\r\n  }\r\n\r\n  confirmRuleDeletion() {\r\n    this.alert.waitIcon = false;\r\n    this.alert.alertFooter = true;\r\n    this.alert.cancelButton = false;\r\n    // this.alert.cancelButtonText = \"Cancel\";\r\n    this.alert.yesButton = true;\r\n    this.alert.yesButtonText = \"Yes\";\r\n    this.alert.yesButtonResponse = 21;\r\n    this.alert.okButton = true;\r\n    this.alert.okButtonText = \"No\";\r\n    this.alert.okButtonResponse = 22;\r\n    this.alert.alertHeader = true;\r\n    this.alert.alertTitle = \" Alert \";\r\n    this.alert.message = \"Are you sure you want to unassign this rule?\";\r\n    this.alert.open();\r\n  }\r\n\r\n  confirmClose(data) {\r\n    this.logger.log(\"confirming ------------  \" + data);\r\n    if (data === 0 ) {\r\n      return;\r\n    }\r\n\r\n    if (data == 21) {\r\n        this.logger.log(\"deleting... \" + this.ruleCodeToDelete);\r\n        this.existingRules = this.existingRules.filter((item: any) =>\r\n            item[\"code\"] !== this.ruleCodeToDelete);\r\n        this.ruleErrors.set(this.ruleCodeToDelete, []);\r\n        // this.isDirty = true;\r\n        this.ruleDeleted.emit(this.ruleCodeToDelete);\r\n        this.ruleCodeToDelete = \"\";\r\n        let uniquenessErrors = this.getRulesUniquenessErrorMsgs();\r\n        this.statusChanged.emit(uniquenessErrors.length > 0);\r\n        let updatedRuleErrosFlag = false;\r\n        // let codeWithErrors : Array<string> = [];\r\n        // this.ruleErrors.forEach(function (value, key, map) {\r\n        //   if (value && value.length > 0) codeWithErrors.push(key);\r\n        // });\r\n        this.ruleErrors = new Map<string, string[]>();\r\n        uniquenessErrors.forEach(error => {\r\n          this.ruleErrors.set(error.code, [error.msg]);\r\n        });\r\n        this.table.setPage(1, 5);\r\n        // this.assignmentUpdate.emit(this.assignment);\r\n    }\r\n\r\n    if (data == 22) {\r\n      this.logger.log(\"no deletion for rule \"+this.ruleCodeToDelete);\r\n      this.ruleCodeToDelete = \"\";\r\n    }\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/amh-routing/amh-rule-selection/amh-rule-selection.component.ts","module.exports = \"<!--main content start-->\\r\\n\\r\\n<input [disabled]=\\\"disabled\\\" [(ngModel)]=\\\"selectedRule.code\\\" (keyup)=\\\"updateRules($event.target.value)\\\" style=\\\"margin:8px 5px 10px 0px;\\\" /> &nbsp;\\r\\n<i class=\\\"fa fa-plus-square image-pointer\\\" aria-hidden=\\\"true\\\" (click)=\\\"add()\\\" style=\\\"font-size:1.2em;\\\"></i> &nbsp;\\r\\n<span *ngIf=\\\"selectedRule != undefined\\\"> {{selectedExpression}}</span>\\r\\n<div style=\\\"width:95%; height:250px; overflow: auto;\\\" class=\\\"suggestions\\\" *ngIf=\\\"rules.length > 0\\\">\\r\\n    <table style=\\\"width:100%;\\\">\\r\\n        <tbody>\\r\\n            <tr *ngFor=\\\"let item of rules\\\" (click)=\\\"select(item)\\\">\\r\\n                <td style=\\\"width:15%\\\"> <b>{{item.code}}</b> </td>\\r\\n                <td style=\\\"width:85%\\\"> {{item.expression}} </td>\\r\\n            </tr>\\r\\n        </tbody>\\r\\n    </table>\\r\\n</div>\\r\\n<p *ngIf=\\\"existingRules.length == 0\\\"> <b>No rule criteria associated to assignment </b> </p>\\r\\n<table *ngIf=\\\"existingRules.length > 0\\\" class=\\\"table table-striped table-bordered table-condensed table-responsive\\\" \\r\\n    [mfData]=\\\"existingRules\\\" #assignedTable=\\\"mfDataTable\\\" [mfRowsOnPage]=\\\"5\\\">\\r\\n    <thead>\\r\\n        <tr>\\r\\n            <th style=\\\"width: 10%\\\"> Action </th>\\r\\n            <th style=\\\"width: 10%\\\"> Sequence </th>\\r\\n            <th style=\\\"width: 16%\\\">\\r\\n                <mfDefaultSorter by=\\\"code\\\">Code</mfDefaultSorter>\\r\\n            </th>\\r\\n            <th style=\\\"width: 64%\\\">\\r\\n                <mfDefaultSorter by=\\\"expression\\\">Criteria</mfDefaultSorter>\\r\\n            </th>\\r\\n        </tr>\\r\\n    </thead>\\r\\n    <tbody>\\r\\n        <!--[routerLink]=\\\" ['AMHRuleCreate', { 'code': rule.code, 'return_to':'AMHAssignmentEdit','params':'code='+assignmentCode+'&st='+assignType }, 'AMHRuleComponent'] \\\"-->\\r\\n        <tr *ngFor=\\\"let rule of assignedTable.data\\\">\\r\\n            <td>&nbsp; \\r\\n                <i class=\\\"fa fa-pencil-square-o image-pointer\\\" aria-hidden=\\\"true\\\" (click)=\\\"actionNavigationEmit(rule)\\\" style=\\\"font-size:2em;\\\"></i>&nbsp;&nbsp;&nbsp;\\r\\n                <i class=\\\"fa fa-times image-pointer\\\" aria-hidden=\\\"true\\\" (click)=\\\"deleteRule(rule)\\\" style=\\\"font-size:2em;\\\"></i>                                \\r\\n            </td>\\r\\n            <td>\\r\\n               <div class=\\\"\\\"></div>\\r\\n               <input #ruleSequence type=\\\"number\\\" min=\\\"1\\\" [value]=\\\"rule.sequence\\\" class=\\\"form-control\\\" \\r\\n                 size=\\\"6\\\" maxlength=\\\"5\\\" (change)=\\\"ruleSequenceUpdate(rule.code, ruleSequence)\\\"/>\\r\\n                <span *ngIf=\\\"errorMsg(rule.code)\\\">\\r\\n                    <div class=\\\"text-danger\\\">{{errorMsg(rule.code)}}</div>\\r\\n                </span>\\r\\n            </td>\\r\\n            <td class=\\\"color-black\\\">{{ rule.code | uppercase }}</td>\\r\\n            <td class=\\\"color-black\\\">{{ rule.expression }}</td>\\r\\n        </tr>\\r\\n    </tbody>\\r\\n    <tfoot>\\r\\n        <tr>\\r\\n            <td colspan=\\\"4\\\">\\r\\n                <mfBootstrapPaginator [rowsOnPageSet]=\\\"[5, 10, 25, 50, 100]\\\"></mfBootstrapPaginator>\\r\\n            </td>\\r\\n        </tr>\\r\\n    </tfoot>\\r\\n</table>\\r\\n\\r\\n<alert (alertOutput)=\\\"confirmClose($event)\\\"></alert>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/amh-routing/amh-rule-selection/amh-rule-selection.html\n// module id = 1268\n// module chunks = 16","export * from './amh-rule-selection.component';\n\n\n// WEBPACK FOOTER //\n// ./src/app/amh-routing/amh-rule-selection/index.ts","import {Component,  EventEmitter, Output, Input} from 'angular2/core';\r\nimport {Option} from \"../../models/referential/option\";\r\nimport {Logger} from '../../common/components/services';\r\n\r\n//this.logger.log('`AMHSelectionTable` component loaded asynchronously');\r\n\r\n@Component({\r\n  selector: 'amh-selection-table',\r\n  template: require('./amh-selection-table.html')\r\n})\r\nexport class AMHSelectionTableComponent {\r\n  @Input(\"default-option\") optionSelected : Option;\r\n  @Input() public options : Array<Option>;\r\n  @Input() public label : string;\r\n  @Output() public tableSelected:EventEmitter<any> = new EventEmitter();\r\n\r\n  constructor( private logger : Logger) { }\r\n\r\n  ngOnInit() {\r\n    this.logger.log('hello `AMH selection table` component');\r\n  }\r\n\r\n  private selectOption(index : number) {\r\n    this.logger.log(\"option selected \" + this.options[index].description );\r\n    this.tableSelected.emit(this.options[index]);\r\n  }\r\n  \r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/amh-routing/amh-selection-table/amh-selection-table.component.ts","module.exports = \"<!--main content start-->\\r\\n\\r\\n<div class=\\\"row col-lg-12 col-sm-12 col-md-12\\\" style=\\\"margin : 0px; padding:0px;\\\">\\r\\n    <div class='form-group form-group-sm' style=\\\"margin:0px;\\\">\\r\\n        <!--<label class=\\\"col-lg-3 col-sm-3 text-center control-label\\\">{{label}}</label>-->\\r\\n        <select style=\\\"width: 100%;\\\" class='combo-select col-lg-12 col-sm-12 col-md-12' [(ngModel)]=\\\"optionSelected\\\" (change)=\\\"selectOption($event.target.selectedIndex)\\\">\\r\\n            <option *ngFor=\\\"let option of options\\\" [ngValue]=\\\"option\\\">{{option.description}}</option>\\r\\n        </select>\\r\\n    </div>\\r\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/amh-routing/amh-selection-table/amh-selection-table.html\n// module id = 1177\n// module chunks = 8 11 16 17 19","export * from './amh-selection-table.component';\n\n\n// WEBPACK FOOTER //\n// ./src/app/amh-routing/amh-selection-table/index.ts","import {Headers, RequestOptions, Http} from 'angular2/http';\r\nimport {Injectable} from 'angular2/core';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {AssignType, AssignmentUnique, AssignmentUniqueRule, AssignmentList, AMHRule, Backend, BackendPK} from '../../models/routing-amh';\r\nimport {FileDownloader, Store, Config, Logger} from '../../common/components/services';\r\nimport {User} from '../../models/users';\r\n\r\n@Injectable()\r\nexport class AMHAssignmentService {\r\n  private environment = \"UNKNOWN\";\r\n  private version = \"DEFAULT\";\r\n  \r\n  private persistence : any;\r\n  constructor(private http: Http, private config: Config, private store: Store, private fileDownloader : FileDownloader\r\n  ,private logger : Logger) {\r\n    this.persistence = sessionStorage; \r\n  }\r\n\r\n  private getAssignmentPath(type : AssignType) : string {\r\n    switch(type) {\r\n      case AssignType.BK_CHANNEL:\r\n        return \"assignments\";\r\n      case AssignType.DTN_COPY:\r\n        return \"distributionCopies\";\r\n      case AssignType.FEED_DTN_COPY:\r\n        return \"feedbackDtnCopies\";\r\n      default:\r\n      return \"assignments\";\r\n    }\r\n  }\r\n\r\n  findAssignmentByCode(type : AssignType, code: string): Observable<any> {\r\n    return this.http.get(this.config.get(\"esBackUrl\")+\"/amhrouting/\"+this.getAssignmentPath(type)+\"/\"+code).map(res => res.json())\r\n      .map(res => res.found ? res._source : res);\r\n  }\r\n  \r\n  findAssignments(type : AssignType): Observable<any> {\r\n    return this.http.post(this.config.get(\"esBackUrl\")+\"/amhrouting/\"+this.getAssignmentPath(type)+\"/_search?size=1000\",'{\"sort\": [{\"sequence\": {\"order\": \"asc\"}}]}').map(res => res.json());\r\n  }\r\n\r\n  findRuleByCode(code: string): Observable<any> {\r\n    this.logger.log(\">> looking for \" + code);\r\n    let found=new AMHRule(\"\",\"\");\r\n    return this.findRules().flatMap(\r\n      (data) => {\r\n        let rule = AMHAssignmentService.getFromSource(data).find(r => {\r\n          return r.code.toLowerCase() == (code ? code.toLocaleLowerCase() : '');\r\n        });\r\n        this.logger.log(\">> elastic return  \" + rule );\r\n        if (rule) {\r\n           return Observable.create(observer => {\r\n                        observer.next(rule);\r\n                        observer.complete();\r\n                        // Any cleanup logic might go here\r\n                        return () => this.logger.log('disposed found')\r\n                      });\r\n        } else {\r\n          return Observable.create(observer => {\r\n                        observer.next(new AMHRule(\"\",\"\") );\r\n                        this.logger.log(\"returning to observer code=empty\");\r\n                        observer.complete();\r\n                        // Any cleanup logic might go here\r\n                        return () => this.logger.log('disposed not found')\r\n                      });\r\n        }\r\n      }\r\n    );\r\n    // return Observable.from(this.findAMHRuleByCode(code));\r\n  }\r\n\r\n\r\n  findRules(): Observable<any> {\r\n    return this.http.get(this.config.get(\"esBackUrl\")+\"/amhrouting/rules/_search?size=100\").map(res => res.json());\r\n  }\r\n\r\n  findBackends(): Observable<any> {\r\n    this.logger.log(\"findBackends url = \" + this.config.get(\"esBackUrl\"));\r\n    return this.http.get(this.config.get(\"esBackUrl\")+\"/amhrouting/backends/_search?size=100\").map(res => res.json());\r\n  }\r\n\r\n\r\n  findAssignmentsBySequence(type: AssignType, sequence: number): Observable<any> {\r\n    return this.findAssignments(type).flatMap(\r\n      (data) => {\r\n        let assignments = AMHAssignmentService.getFromSource(data);\r\n        let found=[];\r\n        let assignBySequenceFound = assignments.find(assignment => assignment.sequence == sequence);\r\n        if (assignBySequenceFound) {\r\n          found.push(assignBySequenceFound);\r\n        }\r\n        this.logger.log(\"assignmentBySequence \"+ found);\r\n        return Observable.from(found);\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n  findAssignmentsByCode(type: AssignType, code: string): Observable<any> {\r\n    return this.findAssignments(type).flatMap(\r\n      (data) => {\r\n        let assignments = AMHAssignmentService.getFromSource(data);\r\n        let found=[];\r\n        let assignByCodeFound = assignments.find(assignment => assignment.code == code);\r\n        if (assignByCodeFound) {\r\n          found.push(assignByCodeFound);\r\n        }\r\n        this.logger.log(\"assignmentByCode \"+ found);\r\n        return Observable.from(found);\r\n      }\r\n    );\r\n\r\n  }\r\n  \r\n  findAssignmentsByBackendPK(type: AssignType, pk: BackendPK): Observable<any> {\r\n    return this.findAssignments(type).flatMap(\r\n      (data) => {\r\n        let assignments = AMHAssignmentService.getFromSource(data);\r\n        let found=[];\r\n        for (var i = 0; i < assignments.length; i++) {\r\n          var existingBackend = assignments[i];\r\n          if (existingBackend.backendPrimaryKey.code === pk.code && existingBackend.backendPrimaryKey.direction === pk.direction) {\r\n            found.push(existingBackend);\r\n            break;\r\n          }\r\n        }\r\n        this.logger.log(\"[flatMap] returning \"+ found);\r\n        return Observable.from(found);\r\n      }\r\n    );\r\n\r\n  }\r\n\r\n  private replacerFor(fields: Array<string>): (key: string, value: any) => any {\r\n\r\n    let replacer =\r\n      function (key: string, value: any): any {\r\n        fields.forEach(field => {\r\n          if (value && value[field]) {\r\n            //this.logger.log(\" [replacer] instanceof \" + (value[field] instanceof Array));\r\n            if (value[field] instanceof Array) {\r\n              value[field] = value[field][0];\r\n            } else {\r\n             // this.logger.log(field + \"  [replacer] is not array\");\r\n            }\r\n          }\r\n        });\r\n\r\n        return value;\r\n      };\r\n\r\n    return replacer;\r\n  }\r\n  \r\n  saveAssignment(type: AssignType, assignment : AssignmentUnique, user : User) : Observable<any> {\r\n    let headers = new Headers({ 'Content-Type': 'application/json',\r\n  'userId': user.username,\r\n        'time': Date.now() });\r\n    let options = new RequestOptions({ headers: headers });\r\n            \r\n    let payload : string = JSON.stringify(assignment.toWriteModel(type, this.store.getCurrentEnv(), this.store.getCurrentVersion(), \r\n                             user.username, String(Date.now())), this.replacerFor([\"modificationUserId\", \"creationUserId\"]));\r\n                             // let payload = JSON.stringify(job.toWriteModel(), this.replacerFor([\"user\"]));\r\n    this.logger.log(\" save assignment sent: \"+ payload);\r\n    return this.http.put(this.config.get(\"backUrl\")+\"/amhrouting/\"+this.assignmentTypePath(type)+\"/\"+assignment.code, payload, options).map(res =>  { this.logger.log(\" from save \"+res.json()); res.json(); })\r\n  }\r\n\r\n createAssignment(type: AssignType, assignment : AssignmentUnique, user : User) : Observable<any> {\r\n    let headers = new Headers({ 'Content-Type': 'application/json',\r\n  'userId': user.username,\r\n        'time': Date.now() });\r\n    let options = new RequestOptions({ headers: headers });            \r\n    \r\n    let payload : string = JSON.stringify(assignment.toWriteModel(type, this.store.getCurrentEnv(), this.store.getCurrentVersion(), \r\n                            user.username, String(Date.now()), user.username, String(Date.now())), this.replacerFor([\"modificationUserId\", \"creationUserId\"]));\r\n    this.logger.log(\" create assignment sent: \"+ payload);\r\n    return this.http.post(this.config.get(\"backUrl\")+\"/amhrouting/\"+this.assignmentTypePath(type)+\"/\"+assignment.code, payload, options).map(res =>  { this.logger.log(\" from create \"+res.json()); return res.json(); })\r\n  }\r\n\r\n  private assignmentTypePath(type : AssignType) : string {\r\n    switch(type) {\r\n      case AssignType.BK_CHANNEL:\r\n      return \"assignments\";\r\n      case AssignType.DTN_COPY:\r\n      return \"distributions\";\r\n      case AssignType.FEED_DTN_COPY:\r\n      return \"feedbacks\";\r\n\r\n    }\r\n  } \r\n  static getFromSource(data : any)  : Array<any> {\r\n    let hitArray = data['hits'].hits;\r\n    let resp = hitArray.map( s => s._source)\r\n    return resp;  \r\n  }\r\n\r\n  // private findAssignmentByPK(type: AssignType, pk: BackendPK): (Array<AssignmentUnique>) {\r\n  //   this.findAssignments(type).subscribe(\r\n  //     data => {\r\n  //       this.logger.log(\"RETURNING DATA %s\", data);\r\n  //       if (Array.isArray(data)) {\r\n  //         this.logger.log(\"Array \" + data);\r\n  //       } else {\r\n  //         let assignments = AMHAssignmentService.getFromSource(data);\r\n  //         this.logger.log(\"Data retrieved from findAssignmentByPK: %s \", assignments);\r\n  //         for (var i = 0; i < assignments.length; i++) {\r\n  //           var existingBackend = assignments[i];\r\n  //           this.logger.log(\"Existing pkCode \"+existingBackend.backendPrimaryKey.code + \" pkDir \" + existingBackend.backendPrimaryKey.direction + \" target pkCode \"+ pk.code +\" pkDir \"+pk.direction );\r\n  //           if (existingBackend.backendPrimaryKey.code === pk.code && existingBackend.backendPrimaryKey.direction === pk.direction) {\r\n  //             this.logger.log(\"from findAssignmentByPK assignment found by Backend!! \");\r\n  //             return [existingBackend];\r\n  //             }\r\n  //           }\r\n  //        }\r\n  //     },\r\n  //     err => this.logger.log(\"Can't get assignment. Error code: %s, URL: %s \", err.status, err.url),\r\n  //     () => this.logger.log(\"assignments retrieved from findAssignmentByPK\")\r\n        \r\n  //     );\r\n\r\n  //  this.logger.log(\" NOT FOUND from findAssignmentByPK!\");\r\n  //  return [];\r\n\r\n  // };\r\n\r\n  //TODO:Move to different service\r\n  public updateDirtyStatus(newValue : boolean) {\r\n    //this.logger.debug(\"updating isDirty with \"+newValue);\r\n    this.persistence.setItem(\"amh_assignment_isDirty\", newValue);\r\n  }\r\n\r\n  public isAssignmentStatusDirty() : boolean {\r\n    let isDirty = this.persistence.getItem(\"amh_assignment_isDirty\"); \r\n    //this.logger.debug(\"returning isDirty with \"+isDirty);\r\n    return \"true\" === isDirty;\r\n  } \r\n\r\nexportOverview(assignType : AssignType, user: User): Observable<any> {\r\n    let headers = new Headers(\r\n      {\r\n        'Content-Type': 'application/json',\r\n        'userId': user.username,\r\n        'time': Date.now()\r\n      });\r\n    let options = new RequestOptions({ headers: headers });\r\n    let payload = JSON.stringify({});\r\n    return this.http.post(this.config.get(\"backUrl\") + \"/amhrouting/csv/export/assignments/\" + assignType, payload, options)\r\n      .map(res => res.json());\r\n  }\r\n\r\n  downloadFile(fileNamePath : string, fileName: string) {\r\n    this.fileDownloader.download(this.config.get(\"backUrl\") + fileNamePath, fileName);\r\n  }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/amh-routing/amh-service/amh-assignment.service.ts","import {Headers, RequestOptions, Http} from 'angular2/http';\r\nimport {Injectable} from 'angular2/core';\r\nimport {Observable} from 'rxjs/Observable';\r\nimport {RuleAssignType, AssignType, AssignmentUnique, AssignmentUniqueRule, AssignmentList, AMHRule, Backend, BackendPK} from '../../models/routing-amh';\r\nimport {FileDownloader, Store, Config, Logger} from '../../common/components/services';\r\nimport {User} from '../../models/users';\r\nimport 'rxjs/add/operator/reduce';\r\n\r\n/*\r\n{\r\n  \"query\": {\r\n    \"bool\": {\r\n      \"must\": [\r\n        {\r\n          \"match\": {\r\n            \"assigned\": {\r\n              \"query\": \"false\",\r\n              \"analyzer\": \"standard\",\r\n              \"operator\": \"and\"\r\n            }\r\n          }\r\n        },\r\n        {\r\n          \"bool\": {\r\n            \"should\": [\r\n              {\r\n                \"match\": {\r\n                  \"code\": {\r\n                    \"query\": \"BA-BPPBCHGG-FUNDS-PRCH\",\r\n                    \"analyzer\": \"standard\",\r\n                    \"operator\": \"and\"\r\n                  }\r\n                }\r\n              },\r\n              {\r\n                \"match\": {\r\n                  \"expression\": {\r\n                    \"query\": \"BA-BPPBCHGG-FUNDS-PRCH\",\r\n                    \"analyzer\": \"standard\",\r\n                    \"operator\": \"and\"\r\n                  }\r\n                }\r\n              }\r\n            ]\r\n          }\r\n        }\r\n      ]\r\n    }\r\n  }\r\n}\r\n */\r\n\r\n@Injectable()\r\nexport class AMHRuleService {\r\n\r\n  private nested(path : string, query : string) : string {\r\n   return ` \"nested\": {\r\n     \"path\": \"##path##\",\r\n     ##query##\r\n   }\r\n   `.replace(/##path##/g, path)\r\n   .replace(/##query##/g,query);\r\n }\r\n \r\n private query(content : string) : string {\r\n    return ` \"query\" : {\r\n       ###content###\r\n    }\r\n    `.replace(/###content###/g, content);\r\n  }\r\n  \r\n  private match(field : string, value: string) :string {\r\n    return ` \"match\": {\r\n       \"##field##\": {\r\n         \"query\": \"##value##\",\r\n         \"analyzer\": \"standard\",\r\n         \"operator\": \"and\"\r\n       }\r\n    }\r\n    `.replace(/##field##/g,field)\r\n     .replace(/##value##/g, value);\r\n  }\r\n\r\n  private bool(content : Array<string>) : string {\r\n    return ` \"bool\": { \r\n        ###content###\r\n      }`.replace(/###content###/g, content.join(' , '));\r\n  }\r\n\r\n  private must(content : Array<string>) : string {\r\n    return this.filter(\"must\", content);\r\n  }\r\n\r\n  private should(content : Array<string>) : string {\r\n    return this.filter(\"should\", content);\r\n  }\r\n\r\n  private notMust(content : Array<string>) : string {\r\n    return this.filter(\"not_must\", content);\r\n  }\r\n\r\nprivate filter(type: string, content : Array<string>) : string {\r\n    return ` \"##type##\": [ \r\n        ###content###\r\n      ]`\r\n      .replace(/##type##/g,type)\r\n      .replace(/###content###/g, content.map(e => '{ ' + e + ' }').join(' , '));\r\n  }\r\n\r\n  private codeExpressionQuery : string = `\r\n  \"bool\": {\r\n      \"should\": [\r\n        {\r\n          \"match\": {\r\n            \"code\": {\r\n              \"query\": \"##TO_REPLACE##\",\r\n              \"analyzer\": \"standard\",\r\n              \"operator\": \"and\"\r\n            }\r\n          }\r\n        },\r\n        {\r\n          \"match\": {\r\n            \"expression\": {\r\n              \"query\": \"##TO_REPLACE##\",\r\n              \"analyzer\": \"standard\",\r\n              \"operator\": \"and\"\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    }\r\n  `;\r\n  private matchQuery : string = ` \r\n  \"query\": {\r\n    ###CODE_EXPR_FILTER_TO_REPLACE###\r\n    ###ASSIGN_FILTER_TO_REPLACE###\r\n  }\r\n  `; \r\n  private ruleQuery : string = `\r\n  \"query\": {\r\n    \"bool\": {\r\n      \"should\": [\r\n        {\r\n          \"match\": {\r\n            \"assigned\": {\r\n              \"query\": \"##TO_REPLACE##\",\r\n              \"analyzer\": \"standard\",\r\n              \"operator\": \"and\"\r\n            }\r\n          }\r\n        }\r\n      ]\r\n    }\r\n  }\r\n  `;\r\nprivate ruleAssignTypeQuery = `\r\n{ \r\n    \"match\": {\r\n    \"assigned\": {\r\n    \"query\": \"##TO_REPLACE##\",\r\n    \"analyzer\": \"standard\",\r\n    \"operator\": \"and\"\r\n    }\r\n  }\r\n}\r\n`;\r\n\r\n  private querySize :  string = `\r\n  \"from\": 0,\r\n  \"size\": 1000,\r\n  \"sort\": [\r\n    {\r\n      \"code\": {\r\n        \"order\": \"asc\"\r\n      }\r\n    }\r\n  ]\r\n  `;\r\n\r\n  private assignedQuery(type : RuleAssignType) : string {\r\n    if (type == RuleAssignType.ALL) {\r\n       return this.querySize;\r\n    }\r\n\r\n    let assignedText : string = \"\"+(type == RuleAssignType.ASSIGNED)\r\n    return  this.ruleQuery.replace(/##TO_REPLACE##/g, assignedText) + \" , \" +this.querySize;\r\n  };\r\n\r\n  private getRuleAssignTypeQuery(type: RuleAssignType) {\r\n   if (type == RuleAssignType.ALL) {\r\n       return \"\";\r\n    }\r\n\r\n    let assignedText : string = \"\"+(type == RuleAssignType.ASSIGNED)\r\n    return  \" , \"+this.ruleAssignTypeQuery.replace(/##TO_REPLACE##/g, assignedText);\r\n  }\r\n\r\n  private getMatchQuery(type: RuleAssignType, text? : string) : string {\r\n     let isAllType : boolean = type == RuleAssignType.ALL;\r\n\r\n    if (isAllType && (!text || text.length == 0)) {\r\n      return this.querySize;\r\n    }\r\n    \r\n    if (!text || text.length == 0 && !isAllType) {\r\n      return this.assignedQuery(type) + \" , \" + this.querySize;\r\n    }\r\n \r\n    let assignedParam = String(type == RuleAssignType.ASSIGNED);\r\n  \r\n  \r\n  let fquery = isAllType ? this.query(\r\n                  this.bool([\r\n                        this.should([\r\n                          this.match(\"code\",text),\r\n                          this.match(\"expression\",text)\r\n                        ])\r\n                      ])\r\n                  ) :\r\n     this.query(\r\n                  this.bool([\r\n                    this.must([\r\n                      this.match(\"assigned\",assignedParam),\r\n                      this.bool([\r\n                        this.should([\r\n                          this.match(\"code\",text),\r\n                          this.match(\"expression\",text)\r\n                        ])\r\n                      ])\r\n                    ])\r\n                  ])\r\n                  );\r\n\r\n    return  fquery + \" , \" +this.querySize;\r\n  };\r\n\r\n\r\n  private persistence : any;\r\n  constructor(private http: Http, private config: Config, private store: Store, private fileDownloader :FileDownloader\r\n  , private logger : Logger) {\r\n    this.persistence = sessionStorage; \r\n  }\r\n\r\n  findRules(): Observable<Array<AMHRule>> {\r\n    return this.findRulesByAssignType(RuleAssignType.ALL);\r\n  }\r\n\r\n  findRulesByAssignType(type : RuleAssignType): Observable<Array<AMHRule>> {\r\n    let headers = new Headers({ 'Content-Type': 'application/json' });\r\n    let options = new RequestOptions({ headers: headers });\r\n    let queryPayload = \"{\"+this.assignedQuery(type)+\"}\";\r\n    // this.logger.debug(\"findRulesByAssignType - payload \"+queryPayload);\r\n    return this.http.post(this.config.get(\"esBackUrl\")+\"/amhrouting/rules/_search\", queryPayload, options)\r\n        .map(res => res.json())\r\n        .flatMap(this.toHits)\r\n        .reduce((acc, R) => { acc.push(R); return acc; }, new Array<AMHRule>());;\r\n  }\r\n  \r\n  findRuleByCode(code: string): Observable<any> {\r\n    return this.http.get(this.config.get(\"esBackUrl\")+\"/amhrouting/rules/\"+code)\r\n    .map(res => res.json())\r\n    .map(res => res.found ? {\"found\":true, \"value\": res._source} :{\"found\":false,\"value\":{}} );\r\n  }\r\n\r\n  private toHits(match): Observable<any> {\r\n    return Observable.from(match['hits'].hits)\r\n      .map(hit => hit[\"_source\"])\r\n  }\r\n\r\n findRuleMatches(type: RuleAssignType, text?: string): Observable<Array<AMHRule>> {\r\n  // let headers = new Headers({ 'Content-Type': 'application/json' });\r\n  // let options = new RequestOptions({ headers: headers });\r\n  let payload = \"{\"+this.getMatchQuery(type, text)+\"}\";\r\n  // this.logger.debug(\"findRuleMatches - payload \"+payload);\r\n  return this.http.post(this.config.get(\"esBackUrl\") + \"/amhrouting/rules/_search?size=1000\", payload) //, options\r\n    .map(res => res.json())\r\n    .flatMap(this.toHits)\r\n    .reduce((acc, R) => { acc.push(R); return acc; }, new Array<AMHRule>());\r\n}\r\n\r\n private toAssignment(match): Observable<any> {\r\n    return Observable.from(match['hits'].hits)\r\n      .map(hit => { return { \"type\":hit[\"_type\"],\"source\":hit[\"_source\"]}; })\r\n  }\r\n\r\n findAssignmmentsByRuleCode(ruleCode : string) : Observable<Array<any>> {\r\n  let payload = \"{\" + \r\n               this.query(\r\n                  this.bool([ this.should([\r\n                          this.nested(\"rules\", this.query(\r\n                              this.bool([ this.must([ this.match(\"rules.code\", ruleCode) ])])\r\n                          ))])\r\n                      ])\r\n                  ) + \"}\";\r\n\r\n  // this.logger.debug(\"findAssignmmentsByRuleCode - payload \"+payload);\r\n  return this.http.post(this.config.get(\"esBackUrl\") + \"/amhrouting/assignments,distributionCopies,feedbackDtnCopies/_search?size=1000\", payload) //, options\r\n    .map(res => res.json())\r\n    .flatMap(this.toAssignment)\r\n    .reduce((acc, R) => { acc.push({\"type\":R.type, \"code\":R.source.code,\"sequence\":R.source.sequence}); return acc; }, new Array<any>());\r\n }\r\n\r\ndeleteRule(ruleCode : string, user : User) : Observable<any> {\r\n  let headers = new Headers(\r\n      { 'Content-Type': 'application/json',\r\n        'userId': user.username,\r\n        'time': Date.now()\r\n      });\r\n    let options = new RequestOptions({ headers: headers });\r\n\r\n    return this.http.delete(this.config.get(\"backUrl\")+\"/amhrouting/rules/\"+ruleCode, options)\r\n      .map(res =>  { this.logger.log(\" from rule deleted \"+res.json()); res.json(); })\r\n  }\r\n\r\n  exportRuleOverview(ruleAssignType : RuleAssignType, user: User): Observable<any> {\r\n    let headers = new Headers(\r\n      {\r\n        'Content-Type': 'application/json',\r\n        'userId': user.username,\r\n        'time': Date.now()\r\n      });\r\n    let options = new RequestOptions({ headers: headers });\r\n    let payload = JSON.stringify({});\r\n    return this.http.post(this.config.get(\"backUrl\") + \"/amhrouting/csv/export/rules/\" + ruleAssignType, payload, options)\r\n      .map(res => res.json());\r\n  }\r\n\r\n  downloadFile(fileNamePath : string, fileName: string) {\r\n    this.fileDownloader.download(this.config.get(\"backUrl\") + fileNamePath, fileName);\r\n  }\r\n\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/amh-routing/amh-service/amh-rule.service.ts","export * from './amh-assignment.service';\r\nexport * from './amh-rule.service';\n\n\n// WEBPACK FOOTER //\n// ./src/app/amh-routing/amh-service/index.ts","import {Directive, ReflectiveInjector, ViewContainerRef, ComponentResolver, ComponentMetadata, Type, ComponentFactory, Component, ViewEncapsulation, ComponentRef, DynamicComponentLoader,ElementRef, Input, EventEmitter, Output} from 'angular2/core';\r\nimport {Logger} from \"../../../services\";\r\n\r\nexport function createComponentFactoryOriginal(resolver: ComponentResolver, metadata: ComponentMetadata): Promise<ComponentFactory<any>> {\r\n    const cmpClass = class DynamicComponent {};\r\n    const decoratedCmp = Component(metadata)(cmpClass);\r\n    return resolver.resolveComponent(decoratedCmp);\r\n}\r\n\r\nexport function createComponentFactory(comp : Type, resolver: ComponentResolver, metadata: ComponentMetadata): Promise<ComponentFactory<any>> {\r\n    const decoratedCmp = Component(metadata)(comp);\r\n    return resolver.resolveComponent(decoratedCmp);\r\n}\r\n\r\n@Directive({\r\n    selector: 'dynamic-html-outlet'\r\n})\r\nexport class DynamicHTMLOutlet {\r\n  @Input() meta: ComponentMetadata;\r\n  @Input('childComponent') comp: Type;\r\n  @Output() componentCreation : EventEmitter<any> = new EventEmitter<any>();\r\n  \r\n  constructor(private vcRef: ViewContainerRef, private resolver: ComponentResolver, private logger : Logger) {\r\n  }\r\n  \r\n  ngOnChanges() {\r\n\r\n    if (!this.comp || !this.meta) return;\r\n    //+JSON.stringify(this.comp)+\" meta - \" +JSON.stringify(this.meta)\r\n    this.logger.log(\"passing to createComponent \");\r\n    \r\n    createComponentFactory(this.comp, this.resolver, this.meta)\r\n      .then(factory => {\r\n        const injector = ReflectiveInjector.fromResolvedProviders([], this.vcRef.parentInjector);\r\n        let componentCreated = this.vcRef.createComponent(factory, 0, injector, []);\r\n        this.componentCreation.emit(componentCreated);\r\n      });\r\n  }\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/common/components/ui/widgets/dynamic-component/component-factory.component.ts","export * from './component-factory.component';\n\n\n// WEBPACK FOOTER //\n// ./src/app/common/components/ui/widgets/dynamic-component/index.ts","import {Component, ViewEncapsulation, ComponentRef, DynamicComponentLoader,ElementRef, Input, EventEmitter, Output} from 'angular2/core';\r\nimport {NgIf} from '@angular/common';\r\nimport {Open} from './open.component';\r\nimport {Logger} from \"../../../services\";\r\n\r\n@Component({\r\n  selector: 'alert',\r\n  template: `\r\n  <div class=\"modal fade\" [open]=\"!isOpen\" id=\"myModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\" [hidden]=!alertHeader>\r\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" (click)='cancel()' aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>\r\n          <h4 class=\"modal-title text-center\" id=\"myModalLabel\">{{alertTitle}}</h4>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n          <div [hidden]=!alertMessage>\r\n            <i *ngIf=\"waitIcon\" class=\"fa fa-spinner\" aria-hidden=\"true\" style=\"font-size:2.1em;\"></i>\r\n            &nbsp;&nbsp;{{message}}\r\n          </div>\r\n        </div>\r\n        <div class=\"modal-footer\" [hidden]=!alertFooter>\r\n          <span [hidden]=!yesButton >\r\n            <button class=\"btn btn-primary\" (click)=\"yes()\">{{yesButtonText}}</button>\r\n          </span>\r\n          <span [hidden]=!okButton >\r\n            <button class=\"btn btn-primary\" (click)=\"ok()\">{{okButtonText}}</button>\r\n          </span>\r\n          <span [hidden]=!cancelButton>\r\n            <button class=\"btn btn-primary\" (click)=\"cancel()\">{{cancelButtonText}}</button>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  `,\r\n  providers: [],\r\n  directives: [Open],\r\n  encapsulation: ViewEncapsulation.None,\r\n  pipes: []\r\n})\r\n/**\r\n  * API to an open alert window.\r\n  */\r\nexport class Alert{\r\n  /**\r\n     * Caption for the title.\r\n     */\r\n  public alertTitle:string;\r\n  /**\r\n     * Describes if the alert contains Ok Button.\r\n     * The default Ok button will close the alert and emit the callback.\r\n     * Defaults to true.\r\n     */\r\n  public okButton:boolean = true;\r\n  /**\r\n     * Describes if the alert contains a waiting Icon.\r\n     * Defaults to true.\r\n     */\r\n  public waitIcon:boolean = true;\r\n  /**\r\n     * Caption for the OK button.\r\n     * Default: Ok\r\n     */\r\n  public okButtonText:string= 'Ok';\r\n\r\n  public okButtonResponse:number = 2;\r\n  /**\r\n     * Describes if the alert contains cancel Button.\r\n     * The default Cancelbutton will close the alert.\r\n     * Defaults to true.\r\n     */\r\n  public cancelButton:boolean = true;\r\n  /**\r\n     * Caption for the Cancel button.\r\n     * Default: Cancel\r\n     */\r\n  public cancelButtonText:string = 'Cancel';\r\n  public cancelButtonResponse:number = 0;\r\n  /**\r\n     * Describes if the alert contains yes Button.\r\n     * The default Yesbutton will close the alert.\r\n     * Defaults to false.\r\n     */\r\n  public yesButton:boolean = false;\r\n  /**\r\n     * Caption for the Cancel button.\r\n     * Default: Cancel\r\n     */\r\n  public yesButtonText:string = 'Yes';\r\n  public yesButtonResponse:number = 1;\r\n  /**\r\n     * if the alertMessage is true it will show the contentString inside alert body.\r\n     */\r\n  public alertMessage:boolean = true;\r\n  /**\r\n     * Some message/content can be set in message which will be shown in alert body.\r\n     */\r\n  public message:string;\r\n  /**\r\n    * if the value is true alert footer will be visible or else it will be hidden.\r\n    */\r\n  public alertFooter:boolean= true;\r\n  /**\r\n    * shows alert header if the value is true.\r\n    */\r\n  public alertHeader:boolean = true;\r\n  /**\r\n    * if the value is true alert will be visible or else it will be hidden.\r\n    */\r\n  public isOpen:boolean=false;\r\n  /**\r\n    * Emitted when a ok button was clicked\r\n    * or when Ok method is called.\r\n    */\r\n  @Output() public alertOutput:EventEmitter<any> = new EventEmitter();\r\n\r\n  constructor(public dcl:DynamicComponentLoader, public _elementRef: ElementRef, private logger : Logger){}\r\n  /**\r\n       * Opens a alert window creating backdrop.\r\n       */\r\n  open(){\r\n    this.isOpen= true;\r\n  }\r\n  \r\n  yes(){\r\n    this.isOpen = false;\r\n    this.alertOutput.emit(this.yesButtonResponse);\r\n  }\r\n\r\n  /**\r\n     *  ok method closes the modal and emits modalOutput.\r\n     */\r\n  ok(){\r\n    this.isOpen = false;\r\n    this.alertOutput.emit(this.okButtonResponse);\r\n  }\r\n  /**\r\n     *  cancel method closes the moda.\r\n     */\r\n  cancel(){\r\n    this.isOpen = false;\r\n    this.alertOutput.emit(this.cancelButtonResponse);\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/common/components/ui/widgets/modal/alert.ts","export * from './alert';\r\nexport * from './modal';\r\nexport * from './open.component';\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/common/components/ui/widgets/modal/index.ts","import {Type, ComponentMetadata, Component, ViewEncapsulation, ComponentRef, DynamicComponentLoader,ElementRef, Input, EventEmitter, Output} from 'angular2/core';\r\nimport {Open} from './open.component';\r\nimport {DynamicHTMLOutlet} from '../dynamic-component';\r\nimport {Logger} from \"../../../services\";\r\n\r\n@Component({\r\n  selector: 'modal',\r\n  template: `\r\n  <div class=\"modal fade\" [open]=\"!isOpen\" id=\"myModal\" [attr.data-keyboard]=\"true\" [attr.data-backdrop]=\"false\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myModalLabel\">\r\n    <div class=\"modal-dialog\" role=\"document\" style=\"width:80%;\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\" [hidden]=!modalHeader>\r\n          <button type=\"button\" class=\"close\" data-dismiss=\"modal\" (click)='close()' aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>\r\n          <h4 class=\"modal-title text-center\" id=\"myModalLabel\">{{modalTitle}}</h4>\r\n        </div>\r\n        <dynamic-html-outlet (componentCreation)=\"saveComponent($event)\" [meta]=\"meta\" [childComponent]=\"modalChildComponent\"></dynamic-html-outlet>\r\n      </div>\r\n    </div>\r\n  </div>\r\n`,\r\n//\r\n  providers: [],\r\n  directives: [Open, DynamicHTMLOutlet],\r\n  encapsulation: ViewEncapsulation.None,\r\n  pipes: []\r\n})\r\n/**\r\n  * API to an open modal window.\r\n  */\r\nexport class Modal {\r\n  public modalChildComponent : Type;\r\n  public meta : ComponentMetadata;\r\n  public componentCreated : any;\r\n  public parameters : Map<string,string>;\r\n  private doneSender : EventEmitter<any> = new EventEmitter<any>();\r\n  private subscription;\r\n\r\n  saveComponent(component) {\r\n    this.logger.debug(\"component recevied in Modal \"+component);\r\n    this.logger.debug(\" parameters => \"+this.parameters.get(\"messageId\"));\r\n    this.componentCreated = component;\r\n    this.componentCreated._hostElement.component.doneSender = this.doneSender;\r\n    this.componentCreated._hostElement.component.initialize(this.parameters);\r\n    this.subscription = this.doneSender.subscribe(msg => {\r\n      if(msg == 'done') {\r\n          this.submit();\r\n      } else { \r\n          this.close();\r\n        }\r\n  });\r\n  }\r\n\r\n  private childComponentListener(msg : string) {\r\n      if(msg == 'done') \r\n          this.submit();\r\n        else \r\n          this.close();\r\n  }\r\n\r\n  public createMetadata(parameter : any) {\r\n    this.meta = new ComponentMetadata(parameter);\r\n  }\r\n  /**\r\n     * Caption for the title.\r\n     */\r\n  public modalTitle:string;\r\n  /**\r\n    * component which is to be loaded dynamically.\r\n    */\r\n  public component:any;\r\n  /**\r\n     * Describes if the modal contains Ok Button.\r\n     * The default Ok button will close the modal and emit the callback.\r\n     * Defaults to true.\r\n     */\r\n  public okButton:boolean = true;\r\n  /**\r\n     * Caption for the OK button.\r\n     * Default: Ok\r\n     */\r\n  public okButtonText:string= 'Ok';\r\n  /**\r\n     * Describes if the modal contains cancel Button.\r\n     * The default Cancelbutton will close the modal.\r\n     * Defaults to true.\r\n     */\r\n  public cancelButton:boolean = true;\r\n  /**\r\n     * Caption for the Cancel button.\r\n     * Default: Cancel\r\n     */\r\n  public cancelButtonText:string = 'Cancel';\r\n  /**\r\n     * if the modalMessage is true it will show the message inside modal body.\r\n     */\r\n  public modalMessage:boolean = true;\r\n  /**\r\n     * Some message/content can be set in message which will be shown in modal body.\r\n     */\r\n  public message:string;\r\n  /**\r\n    * if the value is true modal footer will be visible or else it will be hidden.\r\n    */\r\n  public modalFooter:boolean= true;\r\n  /**\r\n    * shows modal header if the value is true.\r\n    */\r\n  public modalHeader:boolean = true;\r\n  /**\r\n    * if the value is true modal will be visible or else it will be hidden.\r\n    */\r\n  public isOpen:boolean=false;\r\n  /**\r\n    * Emitted when a ok button was clicked\r\n    * or when close method is called.\r\n    */\r\n  @Output() public modalOutput:EventEmitter<any> = new EventEmitter();\r\n  constructor(public dcl:DynamicComponentLoader, public _elementRef: ElementRef, private logger : Logger){\r\n  }\r\n  //@ViewChild('target', {read: ViewContainerRef}) target;\r\n  /**\r\n       * Opens a modal window creating backdrop.\r\n       * @param component The angular Component that is to be loaded dynamically(optional).\r\n       */\r\n  open(component?){\r\n    this.isOpen= true;\r\n    this.modalChildComponent  = component;\r\n    //IIRH\r\n    // if(component){\r\n    // this.component = this.dcl.loadIntoLocation(component, this._elementRef, \"child\");\r\n    // }\r\n  }\r\n  /**\r\n     *  close method dispose the component, closes the modal and optionally emits modalOutput value.\r\n     */\r\n  close(data?:any){\r\n    this.dispose();\r\n    if(data){\r\n      this.modalOutput.emit(data);\r\n    }\r\n  }\r\n  /**\r\n     *  ok method dispose the component, closes the modal and emits true.\r\n     */\r\n  submit(){\r\n    this.modalOutput.emit(this.componentCreated._hostElement.component);\r\n    this.dispose();\r\n  }\r\n  /**\r\n     *  dispose method dispose the loaded component.\r\n     */\r\n  dispose(){\r\n    this.isOpen = false;\r\n    if(this.componentCreated != undefined){\r\n      this.logger.debug(\"...from modal : destroying child component\");\r\n      this.componentCreated.destroy();\r\n      this.logger.debug(\"...from modal : unsubscribing child component\");\r\n      this.subscription.unsubscribe();\r\n      //IIRH\r\n          //  this.component.then((componentRef:ComponentRef) => {\r\n          //  componentRef.dispose();\r\n          // return componentRef;\r\n        //  });\r\n        }\r\n  }\r\n\r\n}\r\n \r\n\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/common/components/ui/widgets/modal/modal.ts","import {Directive, Input, HostBinding} from 'angular2/core';\r\nimport {Logger} from \"../../../services\";\r\n\r\n\r\n// todo: add animate\r\n// todo: add init and on change\r\n@Directive({selector: '[open]'})\r\nexport class Open {\r\n  @HostBinding('style.display')\r\n  private display:string;\r\n  @HostBinding('class.in')\r\n  @HostBinding('attr.aria-expanded')\r\n  private isExpanded:boolean = true;\r\n\r\n  @Input()\r\n  private set open(value:boolean) {\r\n    this.isExpanded = value;\r\n    this.toggle();\r\n  }\r\n\r\n  private get open():boolean {\r\n    return this.isExpanded;\r\n  }\r\n\r\n  constructor(private logger : Logger) {\r\n  }\r\n\r\n  toggle() {\r\n    if (this.isExpanded) {\r\n      this.hide();\r\n    } else {\r\n      this.show();\r\n    }\r\n  }\r\n\r\n  hide() {\r\n    this.isExpanded = false;\r\n    this.display = 'none';\r\n\r\n    let backDrop = document.getElementsByClassName(\"modal-backdrop\");\r\n    if(backDrop.length>0){\r\n      document.body.removeChild(backDrop[0]);\r\n    }\r\n  }\r\n\r\n  show() {\r\n    let backDrop = document.createElement('div');\r\n    backDrop.className=\"modal-backdrop fade in\";\r\n    document.body.appendChild(backDrop);\r\n    this.isExpanded = true;\r\n    this.display = 'block';\r\n  }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/common/components/ui/widgets/modal/open.component.ts","\r\nexport * from './option.model';\n\n\n// WEBPACK FOOTER //\n// ./src/app/models/referential/option/index.ts","import {IText} from '../';\r\n\r\nexport class Option implements IText {\r\n    public id:number;\r\n    public code:string;\r\n    public description:string;\r\n    public selected : boolean;\r\n    \r\n    \r\n    constructor(id:number, code:string, description:string, selected:boolean = false) {\r\n        this.code = code;\r\n        this.id = id;\r\n        this.description = description;\r\n        this.selected = selected;\r\n    }\r\n    \r\n    get htmlText():string  { return this.description;}\r\n    \r\n    static mapToProperty = (option:Object) => option[\"id\"];\r\n    \r\n    static fromJson(json: string) {\r\n        var data = JSON.parse(json);\r\n        return new Option(data.id, data.code, data.description);\r\n    }\r\n    \r\n}   \n\n\n// WEBPACK FOOTER //\n// ./src/app/models/referential/option/option.model.ts"],"sourceRoot":""}